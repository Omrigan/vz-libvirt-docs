<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta charset="utf-8"/>
<meta name="generator" content="Docutils 0.16: http://docutils.sourceforge.net/" />
<title>virsh</title>

</head>
<body>
<div class="document" id="virsh">
<h1 class="title">virsh</h1>
<p class="subtitle" id="management-user-interface">management user interface</p>
<dl class="docinfo simple">
<dt class="manual-section">Manual section</dt>
<dd class="manual-section"><p>1</p>
</dd>
<dt class="manual-group">Manual group</dt>
<dd class="manual-group"><p>Virtualization Support</p>
</dd>
</dl>
<div class="contents topic" id="contents">
<p class="topic-title">Contents</p>
<ul class="simple">
<li><p><a class="reference internal" href="#synopsis" id="id1">SYNOPSIS</a></p></li>
<li><p><a class="reference internal" href="#description" id="id2">DESCRIPTION</a></p></li>
<li><p><a class="reference internal" href="#notes" id="id3">NOTES</a></p></li>
<li><p><a class="reference internal" href="#generic-commands" id="id4">GENERIC COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#help" id="id5">help</a></p></li>
<li><p><a class="reference internal" href="#quit-exit" id="id6">quit, exit</a></p></li>
<li><p><a class="reference internal" href="#version" id="id7">version</a></p></li>
<li><p><a class="reference internal" href="#cd" id="id8">cd</a></p></li>
<li><p><a class="reference internal" href="#pwd" id="id9">pwd</a></p></li>
<li><p><a class="reference internal" href="#connect" id="id10">connect</a></p></li>
<li><p><a class="reference internal" href="#uri" id="id11">uri</a></p></li>
<li><p><a class="reference internal" href="#hostname" id="id12">hostname</a></p></li>
<li><p><a class="reference internal" href="#sysinfo" id="id13">sysinfo</a></p></li>
<li><p><a class="reference internal" href="#nodeinfo" id="id14">nodeinfo</a></p></li>
<li><p><a class="reference internal" href="#nodecpumap" id="id15">nodecpumap</a></p></li>
<li><p><a class="reference internal" href="#nodecpustats" id="id16">nodecpustats</a></p></li>
<li><p><a class="reference internal" href="#nodememstats" id="id17">nodememstats</a></p></li>
<li><p><a class="reference internal" href="#nodesevinfo" id="id18">nodesevinfo</a></p></li>
<li><p><a class="reference internal" href="#nodesuspend" id="id19">nodesuspend</a></p></li>
<li><p><a class="reference internal" href="#node-memory-tune" id="id20">node-memory-tune</a></p></li>
<li><p><a class="reference internal" href="#capabilities" id="id21">capabilities</a></p></li>
<li><p><a class="reference internal" href="#domcapabilities" id="id22">domcapabilities</a></p></li>
<li><p><a class="reference internal" href="#pool-capabilities" id="id23">pool-capabilities</a></p></li>
<li><p><a class="reference internal" href="#inject-nmi" id="id24">inject-nmi</a></p></li>
<li><p><a class="reference internal" href="#list" id="id25">list</a></p></li>
<li><p><a class="reference internal" href="#freecell" id="id26">freecell</a></p></li>
<li><p><a class="reference internal" href="#freepages" id="id27">freepages</a></p></li>
<li><p><a class="reference internal" href="#allocpages" id="id28">allocpages</a></p></li>
<li><p><a class="reference internal" href="#cpu-baseline" id="id29">cpu-baseline</a></p></li>
<li><p><a class="reference internal" href="#cpu-compare" id="id30">cpu-compare</a></p></li>
<li><p><a class="reference internal" href="#cpu-models" id="id31">cpu-models</a></p></li>
<li><p><a class="reference internal" href="#hypervisor-cpu-compare" id="id32">hypervisor-cpu-compare</a></p></li>
<li><p><a class="reference internal" href="#hypervisor-cpu-baseline" id="id33">hypervisor-cpu-baseline</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#domain-commands" id="id34">DOMAIN COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#autostart" id="id35">autostart</a></p></li>
<li><p><a class="reference internal" href="#blkdeviotune" id="id36">blkdeviotune</a></p></li>
<li><p><a class="reference internal" href="#blkiotune" id="id37">blkiotune</a></p></li>
<li><p><a class="reference internal" href="#blockcommit" id="id38">blockcommit</a></p></li>
<li><p><a class="reference internal" href="#blockcopy" id="id39">blockcopy</a></p></li>
<li><p><a class="reference internal" href="#blockjob" id="id40">blockjob</a></p></li>
<li><p><a class="reference internal" href="#blockpull" id="id41">blockpull</a></p></li>
<li><p><a class="reference internal" href="#blockresize" id="id42">blockresize</a></p></li>
<li><p><a class="reference internal" href="#console" id="id43">console</a></p></li>
<li><p><a class="reference internal" href="#x-exec" id="id44">x-exec</a></p></li>
<li><p><a class="reference internal" href="#cpu-stats" id="id45">cpu-stats</a></p></li>
<li><p><a class="reference internal" href="#create" id="id46">create</a></p></li>
<li><p><a class="reference internal" href="#define" id="id47">define</a></p></li>
<li><p><a class="reference internal" href="#desc" id="id48">desc</a></p></li>
<li><p><a class="reference internal" href="#destroy" id="id49">destroy</a></p></li>
<li><p><a class="reference internal" href="#domblkerror" id="id50">domblkerror</a></p></li>
<li><p><a class="reference internal" href="#domblkinfo" id="id51">domblkinfo</a></p></li>
<li><p><a class="reference internal" href="#domblklist" id="id52">domblklist</a></p></li>
<li><p><a class="reference internal" href="#domblkstat" id="id53">domblkstat</a></p></li>
<li><p><a class="reference internal" href="#blockjob-pause-x" id="id54">blockjob-pause-x</a></p></li>
<li><p><a class="reference internal" href="#blockjob-resume-x" id="id55">blockjob-resume-x</a></p></li>
<li><p><a class="reference internal" href="#domblkthreshold" id="id56">domblkthreshold</a></p></li>
<li><p><a class="reference internal" href="#domcontrol" id="id57">domcontrol</a></p></li>
<li><p><a class="reference internal" href="#domdirtyrate-calc" id="id58">domdirtyrate-calc</a></p></li>
<li><p><a class="reference internal" href="#domdisplay" id="id59">domdisplay</a></p></li>
<li><p><a class="reference internal" href="#domfsfreeze" id="id60">domfsfreeze</a></p></li>
<li><p><a class="reference internal" href="#domfsinfo" id="id61">domfsinfo</a></p></li>
<li><p><a class="reference internal" href="#domfsthaw" id="id62">domfsthaw</a></p></li>
<li><p><a class="reference internal" href="#domfstrim" id="id63">domfstrim</a></p></li>
<li><p><a class="reference internal" href="#domhostname" id="id64">domhostname</a></p></li>
<li><p><a class="reference internal" href="#domid" id="id65">domid</a></p></li>
<li><p><a class="reference internal" href="#domif-getlink" id="id66">domif-getlink</a></p></li>
<li><p><a class="reference internal" href="#domif-setlink" id="id67">domif-setlink</a></p></li>
<li><p><a class="reference internal" href="#domifaddr" id="id68">domifaddr</a></p></li>
<li><p><a class="reference internal" href="#backup-begin" id="id69">backup-begin</a></p></li>
<li><p><a class="reference internal" href="#backup-dumpxml" id="id70">backup-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#domiflist" id="id71">domiflist</a></p></li>
<li><p><a class="reference internal" href="#domifstat" id="id72">domifstat</a></p></li>
<li><p><a class="reference internal" href="#domiftune" id="id73">domiftune</a></p></li>
<li><p><a class="reference internal" href="#dominfo" id="id74">dominfo</a></p></li>
<li><p><a class="reference internal" href="#domjobabort" id="id75">domjobabort</a></p></li>
<li><p><a class="reference internal" href="#domjobinfo" id="id76">domjobinfo</a></p></li>
<li><p><a class="reference internal" href="#domlaunchsecinfo" id="id77">domlaunchsecinfo</a></p></li>
<li><p><a class="reference internal" href="#domsetlaunchsecstate" id="id78">domsetlaunchsecstate</a></p></li>
<li><p><a class="reference internal" href="#dommemstat" id="id79">dommemstat</a></p></li>
<li><p><a class="reference internal" href="#domname" id="id80">domname</a></p></li>
<li><p><a class="reference internal" href="#dompmsuspend" id="id81">dompmsuspend</a></p></li>
<li><p><a class="reference internal" href="#dompmwakeup" id="id82">dompmwakeup</a></p></li>
<li><p><a class="reference internal" href="#domrename" id="id83">domrename</a></p></li>
<li><p><a class="reference internal" href="#domstate" id="id84">domstate</a></p></li>
<li><p><a class="reference internal" href="#domstats" id="id85">domstats</a></p></li>
<li><p><a class="reference internal" href="#domtime" id="id86">domtime</a></p></li>
<li><p><a class="reference internal" href="#domuuid" id="id87">domuuid</a></p></li>
<li><p><a class="reference internal" href="#domxml-from-native" id="id88">domxml-from-native</a></p></li>
<li><p><a class="reference internal" href="#domxml-to-native" id="id89">domxml-to-native</a></p></li>
<li><p><a class="reference internal" href="#dump" id="id90">dump</a></p></li>
<li><p><a class="reference internal" href="#dumpxml" id="id91">dumpxml</a></p></li>
<li><p><a class="reference internal" href="#edit" id="id92">edit</a></p></li>
<li><p><a class="reference internal" href="#emulatorpin" id="id93">emulatorpin</a></p></li>
<li><p><a class="reference internal" href="#event" id="id94">event</a></p></li>
<li><p><a class="reference internal" href="#get-user-sshkeys" id="id95">get-user-sshkeys</a></p></li>
<li><p><a class="reference internal" href="#guest-agent-timeout" id="id96">guest-agent-timeout</a></p></li>
<li><p><a class="reference internal" href="#guestinfo" id="id97">guestinfo</a></p></li>
<li><p><a class="reference internal" href="#guestvcpus" id="id98">guestvcpus</a></p></li>
<li><p><a class="reference internal" href="#iothreadadd" id="id99">iothreadadd</a></p></li>
<li><p><a class="reference internal" href="#iothreaddel" id="id100">iothreaddel</a></p></li>
<li><p><a class="reference internal" href="#iothreadinfo" id="id101">iothreadinfo</a></p></li>
<li><p><a class="reference internal" href="#iothreadpin" id="id102">iothreadpin</a></p></li>
<li><p><a class="reference internal" href="#iothreadset" id="id103">iothreadset</a></p></li>
<li><p><a class="reference internal" href="#managedsave" id="id104">managedsave</a></p></li>
<li><p><a class="reference internal" href="#managedsave-define" id="id105">managedsave-define</a></p></li>
<li><p><a class="reference internal" href="#managedsave-dumpxml" id="id106">managedsave-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#managedsave-edit" id="id107">managedsave-edit</a></p></li>
<li><p><a class="reference internal" href="#managedsave-remove" id="id108">managedsave-remove</a></p></li>
<li><p><a class="reference internal" href="#maxvcpus" id="id109">maxvcpus</a></p></li>
<li><p><a class="reference internal" href="#memtune" id="id110">memtune</a></p></li>
<li><p><a class="reference internal" href="#metadata" id="id111">metadata</a></p></li>
<li><p><a class="reference internal" href="#migrate" id="id112">migrate</a></p></li>
<li><p><a class="reference internal" href="#migrate-compcache" id="id113">migrate-compcache</a></p></li>
<li><p><a class="reference internal" href="#migrate-getmaxdowntime" id="id114">migrate-getmaxdowntime</a></p></li>
<li><p><a class="reference internal" href="#migrate-getspeed" id="id115">migrate-getspeed</a></p></li>
<li><p><a class="reference internal" href="#migrate-postcopy" id="id116">migrate-postcopy</a></p></li>
<li><p><a class="reference internal" href="#migrate-setmaxdowntime" id="id117">migrate-setmaxdowntime</a></p></li>
<li><p><a class="reference internal" href="#migrate-setspeed" id="id118">migrate-setspeed</a></p></li>
<li><p><a class="reference internal" href="#numatune" id="id119">numatune</a></p></li>
<li><p><a class="reference internal" href="#perf" id="id120">perf</a></p></li>
<li><p><a class="reference internal" href="#reboot" id="id121">reboot</a></p></li>
<li><p><a class="reference internal" href="#reset" id="id122">reset</a></p></li>
<li><p><a class="reference internal" href="#restore" id="id123">restore</a></p></li>
<li><p><a class="reference internal" href="#resume" id="id124">resume</a></p></li>
<li><p><a class="reference internal" href="#save" id="id125">save</a></p></li>
<li><p><a class="reference internal" href="#save-image-define" id="id126">save-image-define</a></p></li>
<li><p><a class="reference internal" href="#save-image-dumpxml" id="id127">save-image-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#save-image-edit" id="id128">save-image-edit</a></p></li>
<li><p><a class="reference internal" href="#schedinfo" id="id129">schedinfo</a></p></li>
<li><p><a class="reference internal" href="#screenshot" id="id130">screenshot</a></p></li>
<li><p><a class="reference internal" href="#send-key" id="id131">send-key</a></p></li>
<li><p><a class="reference internal" href="#send-process-signal" id="id132">send-process-signal</a></p></li>
<li><p><a class="reference internal" href="#set-lifecycle-action" id="id133">set-lifecycle-action</a></p></li>
<li><p><a class="reference internal" href="#set-user-password" id="id134">set-user-password</a></p></li>
<li><p><a class="reference internal" href="#set-user-sshkeys" id="id135">set-user-sshkeys</a></p></li>
<li><p><a class="reference internal" href="#setmaxmem" id="id136">setmaxmem</a></p></li>
<li><p><a class="reference internal" href="#setmem" id="id137">setmem</a></p></li>
<li><p><a class="reference internal" href="#setvcpus" id="id138">setvcpus</a></p></li>
<li><p><a class="reference internal" href="#setvcpu" id="id139">setvcpu</a></p></li>
<li><p><a class="reference internal" href="#shutdown" id="id140">shutdown</a></p></li>
<li><p><a class="reference internal" href="#start" id="id141">start</a></p></li>
<li><p><a class="reference internal" href="#suspend" id="id142">suspend</a></p></li>
<li><p><a class="reference internal" href="#ttyconsole" id="id143">ttyconsole</a></p></li>
<li><p><a class="reference internal" href="#undefine" id="id144">undefine</a></p></li>
<li><p><a class="reference internal" href="#vcpucount" id="id145">vcpucount</a></p></li>
<li><p><a class="reference internal" href="#vcpuinfo" id="id146">vcpuinfo</a></p></li>
<li><p><a class="reference internal" href="#vcpupin" id="id147">vcpupin</a></p></li>
<li><p><a class="reference internal" href="#vncdisplay" id="id148">vncdisplay</a></p></li>
<li><p><a class="reference internal" href="#x-block-set-latency-histogram" id="id149">x-block-set-latency-histogram</a></p></li>
<li><p><a class="reference internal" href="#x-move-nvram" id="id150">x-move-nvram</a></p></li>
<li><p><a class="reference internal" href="#x-block-snapshot-create" id="id151">x-block-snapshot-create</a></p></li>
<li><p><a class="reference internal" href="#x-block-snapshot-delete" id="id152">x-block-snapshot-delete</a></p></li>
<li><p><a class="reference internal" href="#x-block-snapshot-list" id="id153">x-block-snapshot-list</a></p></li>
<li><p><a class="reference internal" href="#x-block-snapshot-dumxpml" id="id154">x-block-snapshot-dumxpml</a></p></li>
<li><p><a class="reference internal" href="#x-block-checkpoint-remove" id="id155">x-block-checkpoint-remove</a></p></li>
<li><p><a class="reference internal" href="#x-block-export-start" id="id156">x-block-export-start</a></p></li>
<li><p><a class="reference internal" href="#x-block-export-stop" id="id157">x-block-export-stop</a></p></li>
<li><p><a class="reference internal" href="#vz-domain-guest-net-tune" id="id158">vz-domain-guest-net-tune</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#device-commands" id="id159">DEVICE COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#attach-device" id="id160">attach-device</a></p></li>
<li><p><a class="reference internal" href="#attach-disk" id="id161">attach-disk</a></p></li>
<li><p><a class="reference internal" href="#attach-interface" id="id162">attach-interface</a></p></li>
<li><p><a class="reference internal" href="#detach-device" id="id163">detach-device</a></p></li>
<li><p><a class="reference internal" href="#detach-device-alias" id="id164">detach-device-alias</a></p></li>
<li><p><a class="reference internal" href="#detach-disk" id="id165">detach-disk</a></p></li>
<li><p><a class="reference internal" href="#detach-interface" id="id166">detach-interface</a></p></li>
<li><p><a class="reference internal" href="#update-device" id="id167">update-device</a></p></li>
<li><p><a class="reference internal" href="#update-memory-device" id="id168">update-memory-device</a></p></li>
<li><p><a class="reference internal" href="#change-media" id="id169">change-media</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#nodedev-commands" id="id170">NODEDEV COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#nodedev-create" id="id171">nodedev-create</a></p></li>
<li><p><a class="reference internal" href="#nodedev-destroy" id="id172">nodedev-destroy</a></p></li>
<li><p><a class="reference internal" href="#nodedev-define" id="id173">nodedev-define</a></p></li>
<li><p><a class="reference internal" href="#nodedev-undefine" id="id174">nodedev-undefine</a></p></li>
<li><p><a class="reference internal" href="#nodedev-start" id="id175">nodedev-start</a></p></li>
<li><p><a class="reference internal" href="#nodedev-detach" id="id176">nodedev-detach</a></p></li>
<li><p><a class="reference internal" href="#nodedev-dumpxml" id="id177">nodedev-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#nodedev-info" id="id178">nodedev-info</a></p></li>
<li><p><a class="reference internal" href="#nodedev-list" id="id179">nodedev-list</a></p></li>
<li><p><a class="reference internal" href="#nodedev-reattach" id="id180">nodedev-reattach</a></p></li>
<li><p><a class="reference internal" href="#nodedev-reset" id="id181">nodedev-reset</a></p></li>
<li><p><a class="reference internal" href="#nodedev-event" id="id182">nodedev-event</a></p></li>
<li><p><a class="reference internal" href="#nodedev-autostart" id="id183">nodedev-autostart</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#virtual-network-commands" id="id184">VIRTUAL NETWORK COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#net-autostart" id="id185">net-autostart</a></p></li>
<li><p><a class="reference internal" href="#net-create" id="id186">net-create</a></p></li>
<li><p><a class="reference internal" href="#net-define" id="id187">net-define</a></p></li>
<li><p><a class="reference internal" href="#net-destroy" id="id188">net-destroy</a></p></li>
<li><p><a class="reference internal" href="#net-dumpxml" id="id189">net-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#net-edit" id="id190">net-edit</a></p></li>
<li><p><a class="reference internal" href="#net-event" id="id191">net-event</a></p></li>
<li><p><a class="reference internal" href="#net-info" id="id192">net-info</a></p></li>
<li><p><a class="reference internal" href="#net-list" id="id193">net-list</a></p></li>
<li><p><a class="reference internal" href="#net-name" id="id194">net-name</a></p></li>
<li><p><a class="reference internal" href="#net-start" id="id195">net-start</a></p></li>
<li><p><a class="reference internal" href="#net-undefine" id="id196">net-undefine</a></p></li>
<li><p><a class="reference internal" href="#net-uuid" id="id197">net-uuid</a></p></li>
<li><p><a class="reference internal" href="#net-update" id="id198">net-update</a></p></li>
<li><p><a class="reference internal" href="#net-dhcp-leases" id="id199">net-dhcp-leases</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#network-port-commands" id="id200">NETWORK PORT COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#net-port-list" id="id201">net-port-list</a></p></li>
<li><p><a class="reference internal" href="#net-port-create" id="id202">net-port-create</a></p></li>
<li><p><a class="reference internal" href="#net-port-dumpxml" id="id203">net-port-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#net-port-delete" id="id204">net-port-delete</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#interface-commands" id="id205">INTERFACE COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#iface-bridge" id="id206">iface-bridge</a></p></li>
<li><p><a class="reference internal" href="#iface-define" id="id207">iface-define</a></p></li>
<li><p><a class="reference internal" href="#iface-destroy" id="id208">iface-destroy</a></p></li>
<li><p><a class="reference internal" href="#iface-dumpxml" id="id209">iface-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#iface-edit" id="id210">iface-edit</a></p></li>
<li><p><a class="reference internal" href="#iface-list" id="id211">iface-list</a></p></li>
<li><p><a class="reference internal" href="#iface-name" id="id212">iface-name</a></p></li>
<li><p><a class="reference internal" href="#iface-mac" id="id213">iface-mac</a></p></li>
<li><p><a class="reference internal" href="#iface-start" id="id214">iface-start</a></p></li>
<li><p><a class="reference internal" href="#iface-unbridge" id="id215">iface-unbridge</a></p></li>
<li><p><a class="reference internal" href="#iface-undefine" id="id216">iface-undefine</a></p></li>
<li><p><a class="reference internal" href="#iface-begin" id="id217">iface-begin</a></p></li>
<li><p><a class="reference internal" href="#iface-commit" id="id218">iface-commit</a></p></li>
<li><p><a class="reference internal" href="#iface-rollback" id="id219">iface-rollback</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#storage-pool-commands" id="id220">STORAGE POOL COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#find-storage-pool-sources" id="id221">find-storage-pool-sources</a></p></li>
<li><p><a class="reference internal" href="#find-pool-sources-as" id="id222">find-pool-sources-as</a></p></li>
<li><p><a class="reference internal" href="#pool-autostart" id="id223">pool-autostart</a></p></li>
<li><p><a class="reference internal" href="#pool-build" id="id224">pool-build</a></p></li>
<li><p><a class="reference internal" href="#pool-create" id="id225">pool-create</a></p></li>
<li><p><a class="reference internal" href="#pool-create-as" id="id226">pool-create-as</a></p></li>
<li><p><a class="reference internal" href="#pool-define" id="id227">pool-define</a></p></li>
<li><p><a class="reference internal" href="#pool-define-as" id="id228">pool-define-as</a></p></li>
<li><p><a class="reference internal" href="#pool-destroy" id="id229">pool-destroy</a></p></li>
<li><p><a class="reference internal" href="#pool-delete" id="id230">pool-delete</a></p></li>
<li><p><a class="reference internal" href="#pool-dumpxml" id="id231">pool-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#pool-edit" id="id232">pool-edit</a></p></li>
<li><p><a class="reference internal" href="#pool-info" id="id233">pool-info</a></p></li>
<li><p><a class="reference internal" href="#pool-list" id="id234">pool-list</a></p></li>
<li><p><a class="reference internal" href="#pool-name" id="id235">pool-name</a></p></li>
<li><p><a class="reference internal" href="#pool-refresh" id="id236">pool-refresh</a></p></li>
<li><p><a class="reference internal" href="#pool-start" id="id237">pool-start</a></p></li>
<li><p><a class="reference internal" href="#pool-undefine" id="id238">pool-undefine</a></p></li>
<li><p><a class="reference internal" href="#pool-uuid" id="id239">pool-uuid</a></p></li>
<li><p><a class="reference internal" href="#pool-event" id="id240">pool-event</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#volume-commands" id="id241">VOLUME COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#vol-create" id="id242">vol-create</a></p></li>
<li><p><a class="reference internal" href="#vol-create-from" id="id243">vol-create-from</a></p></li>
<li><p><a class="reference internal" href="#vol-create-as" id="id244">vol-create-as</a></p></li>
<li><p><a class="reference internal" href="#vol-clone" id="id245">vol-clone</a></p></li>
<li><p><a class="reference internal" href="#vol-delete" id="id246">vol-delete</a></p></li>
<li><p><a class="reference internal" href="#vol-upload" id="id247">vol-upload</a></p></li>
<li><p><a class="reference internal" href="#vol-download" id="id248">vol-download</a></p></li>
<li><p><a class="reference internal" href="#vol-wipe" id="id249">vol-wipe</a></p></li>
<li><p><a class="reference internal" href="#vol-dumpxml" id="id250">vol-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#vol-info" id="id251">vol-info</a></p></li>
<li><p><a class="reference internal" href="#vol-list" id="id252">vol-list</a></p></li>
<li><p><a class="reference internal" href="#vol-pool" id="id253">vol-pool</a></p></li>
<li><p><a class="reference internal" href="#vol-path" id="id254">vol-path</a></p></li>
<li><p><a class="reference internal" href="#vol-name" id="id255">vol-name</a></p></li>
<li><p><a class="reference internal" href="#vol-key" id="id256">vol-key</a></p></li>
<li><p><a class="reference internal" href="#vol-resize" id="id257">vol-resize</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#secret-commands" id="id258">SECRET COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#secret-define" id="id259">secret-define</a></p></li>
<li><p><a class="reference internal" href="#secret-dumpxml" id="id260">secret-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#secret-event" id="id261">secret-event</a></p></li>
<li><p><a class="reference internal" href="#secret-set-value" id="id262">secret-set-value</a></p></li>
<li><p><a class="reference internal" href="#secret-get-value" id="id263">secret-get-value</a></p></li>
<li><p><a class="reference internal" href="#secret-undefine" id="id264">secret-undefine</a></p></li>
<li><p><a class="reference internal" href="#secret-list" id="id265">secret-list</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#snapshot-commands" id="id266">SNAPSHOT COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#snapshot-create" id="id267">snapshot-create</a></p></li>
<li><p><a class="reference internal" href="#snapshot-create-as" id="id268">snapshot-create-as</a></p></li>
<li><p><a class="reference internal" href="#snapshot-current" id="id269">snapshot-current</a></p></li>
<li><p><a class="reference internal" href="#snapshot-edit" id="id270">snapshot-edit</a></p></li>
<li><p><a class="reference internal" href="#snapshot-info" id="id271">snapshot-info</a></p></li>
<li><p><a class="reference internal" href="#snapshot-list" id="id272">snapshot-list</a></p></li>
<li><p><a class="reference internal" href="#snapshot-dumpxml" id="id273">snapshot-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#snapshot-parent" id="id274">snapshot-parent</a></p></li>
<li><p><a class="reference internal" href="#snapshot-revert" id="id275">snapshot-revert</a></p></li>
<li><p><a class="reference internal" href="#snapshot-delete" id="id276">snapshot-delete</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#checkpoint-commands" id="id277">CHECKPOINT COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#checkpoint-create" id="id278">checkpoint-create</a></p></li>
<li><p><a class="reference internal" href="#checkpoint-create-as" id="id279">checkpoint-create-as</a></p></li>
<li><p><a class="reference internal" href="#checkpoint-edit" id="id280">checkpoint-edit</a></p></li>
<li><p><a class="reference internal" href="#checkpoint-info" id="id281">checkpoint-info</a></p></li>
<li><p><a class="reference internal" href="#checkpoint-list" id="id282">checkpoint-list</a></p></li>
<li><p><a class="reference internal" href="#checkpoint-dumpxml" id="id283">checkpoint-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#checkpoint-parent" id="id284">checkpoint-parent</a></p></li>
<li><p><a class="reference internal" href="#checkpoint-delete" id="id285">checkpoint-delete</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#nwfilter-commands" id="id286">NWFILTER COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#nwfilter-define" id="id287">nwfilter-define</a></p></li>
<li><p><a class="reference internal" href="#nwfilter-undefine" id="id288">nwfilter-undefine</a></p></li>
<li><p><a class="reference internal" href="#nwfilter-list" id="id289">nwfilter-list</a></p></li>
<li><p><a class="reference internal" href="#nwfilter-dumpxml" id="id290">nwfilter-dumpxml</a></p></li>
<li><p><a class="reference internal" href="#nwfilter-edit" id="id291">nwfilter-edit</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#nwfilter-binding-commands" id="id292">NWFILTER BINDING COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#nwfilter-binding-create" id="id293">nwfilter-binding-create</a></p></li>
<li><p><a class="reference internal" href="#nwfilter-binding-delete" id="id294">nwfilter-binding-delete</a></p></li>
<li><p><a class="reference internal" href="#nwfilter-binding-list" id="id295">nwfilter-binding-list</a></p></li>
<li><p><a class="reference internal" href="#nwfilter-binding-dumpxml" id="id296">nwfilter-binding-dumpxml</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#hypervisor-specific-commands" id="id297">HYPERVISOR-SPECIFIC COMMANDS</a></p>
<ul>
<li><p><a class="reference internal" href="#qemu-attach" id="id298">qemu-attach</a></p></li>
<li><p><a class="reference internal" href="#qemu-monitor-command" id="id299">qemu-monitor-command</a></p></li>
<li><p><a class="reference internal" href="#qemu-agent-command" id="id300">qemu-agent-command</a></p></li>
<li><p><a class="reference internal" href="#qemu-monitor-event" id="id301">qemu-monitor-event</a></p></li>
<li><p><a class="reference internal" href="#lxc-enter-namespace" id="id302">lxc-enter-namespace</a></p></li>
</ul>
</li>
<li><p><a class="reference internal" href="#environment" id="id303">ENVIRONMENT</a></p></li>
<li><p><a class="reference internal" href="#bugs" id="id304">BUGS</a></p></li>
<li><p><a class="reference internal" href="#authors" id="id305">AUTHORS</a></p></li>
<li><p><a class="reference internal" href="#copyright" id="id306">COPYRIGHT</a></p></li>
<li><p><a class="reference internal" href="#license" id="id307">LICENSE</a></p></li>
<li><p><a class="reference internal" href="#see-also" id="id308">SEE ALSO</a></p></li>
</ul>
</div>
<div class="section" id="synopsis">
<h1><a class="toc-backref" href="#id1">SYNOPSIS</a></h1>
<p><span class="docutils literal">virsh</span> [<em>OPTION</em>]... [<em>COMMAND_STRING</em>]</p>
<p><span class="docutils literal">virsh</span> [<em>OPTION</em>]... <em>COMMAND</em> [<em>ARG</em>]...</p>
</div>
<div class="section" id="description">
<h1><a class="toc-backref" href="#id2">DESCRIPTION</a></h1>
<p>The <span class="docutils literal">virsh</span> program is the main interface for managing virsh guest
domains. The program can be used to create, pause, and shutdown
domains. It can also be used to list current domains. Libvirt is a C
toolkit to interact with the virtualization capabilities of recent
versions of Linux (and other OSes). It is free software available
under the GNU Lesser General Public License. Virtualization of the
Linux Operating System means the ability to run multiple instances of
Operating Systems concurrently on a single hardware system where the
basic resources are driven by a Linux instance. The library aims at
providing a long term stable C API.  It currently supports Xen, QEMU,
KVM, LXC, OpenVZ, VirtualBox and VMware ESX.</p>
<p>The basic structure of most virsh usage is:</p>
<pre class="literal-block">virsh [OPTION]... &lt;command&gt; &lt;domain&gt; [ARG]...</pre>
<p>Where <em>command</em> is one of the commands listed below; <em>domain</em> is the
numeric domain id, or the domain name, or the domain UUID; and <em>ARGS</em>
are command specific options.  There are a few exceptions to this rule
in the cases where the command in question acts on all domains, the
entire machine, or directly on the xen hypervisor.  Those exceptions
will be clear for each of those commands.  Note: it is permissible to
give numeric names to domains, however, doing so will result in a
domain that can only be identified by domain id. In other words, if a
numeric value is supplied it will be interpreted as a domain id, not
as a name. Any <em>command</em> starting with <span class="docutils literal">#</span> is treated as a comment
and silently ignored, all other unrecognized <em>commands</em> are diagnosed.</p>
<p>The <span class="docutils literal">virsh</span> program can be used either to run one <em>COMMAND</em> by giving the
command and its arguments on the shell command line, or a <em>COMMAND_STRING</em>
which is a single shell argument consisting of multiple <em>COMMAND</em> actions
and their arguments joined with whitespace and separated by semicolons or
newlines between commands, where unquoted backslash-newline pairs are
elided.  Within <em>COMMAND_STRING</em>, virsh understands the
same single, double, and backslash escapes as the shell, although you must
add another layer of shell escaping in creating the single shell argument,
and any word starting with unquoted <em>#</em> begins a comment that ends at newline.
If no command is given in the command line, <span class="docutils literal">virsh</span> will then start a minimal
interpreter waiting for your commands, and the <span class="docutils literal">quit</span> command will then exit
the program.</p>
<p>The <span class="docutils literal">virsh</span> program understands the following <em>OPTIONS</em>.</p>
<p><span class="docutils literal"><span class="pre">-c</span></span>, <span class="docutils literal"><span class="pre">--connect</span></span> <em>URI</em></p>
<p>Connect to the specified <em>URI</em>, as if by the <span class="docutils literal">connect</span> command,
instead of the default connection.</p>
<p><span class="docutils literal"><span class="pre">-d</span></span>, <span class="docutils literal"><span class="pre">--debug</span></span> <em>LEVEL</em></p>
<p>Enable debug messages at integer <em>LEVEL</em> and above.  <em>LEVEL</em> can
range from 0 to 4 (default).  See the documentation of <span class="docutils literal">VIRSH_DEBUG</span>
environment variable below for the description of each <em>LEVEL</em>.</p>
<ul class="simple">
<li><p><span class="docutils literal"><span class="pre">-e</span></span>, <span class="docutils literal"><span class="pre">--escape</span></span> <em>string</em></p></li>
</ul>
<p>Set alternative escape sequence for <em>console</em> command. By default,
telnet's <span class="docutils literal">^]</span> is used. Allowed characters when using hat notation are:
alphabetic character, &#64;, [, ], , ^, _.</p>
<ul class="simple">
<li><p><span class="docutils literal"><span class="pre">-h</span></span>, <span class="docutils literal"><span class="pre">--help</span></span></p></li>
</ul>
<p>Ignore all other arguments, and behave as if the <span class="docutils literal">help</span> command were
given instead.</p>
<ul class="simple">
<li><p><span class="docutils literal"><span class="pre">-k</span></span>, <span class="docutils literal"><span class="pre">--keepalive-interval</span></span> <em>INTERVAL</em></p></li>
</ul>
<p>Set an <em>INTERVAL</em> (in seconds) for sending keepalive messages to
check whether connection to the server is still alive.  Setting the
interval to 0 disables client keepalive mechanism.</p>
<ul class="simple">
<li><p><span class="docutils literal"><span class="pre">-K</span></span>, <span class="docutils literal"><span class="pre">--keepalive-count</span></span> <em>COUNT</em></p></li>
</ul>
<p>Set a number of times keepalive message can be sent without getting an
answer from the server without marking the connection dead.  There is
no effect to this setting in case the <em>INTERVAL</em> is set to 0.</p>
<ul class="simple">
<li><p><span class="docutils literal"><span class="pre">-l</span></span>, <span class="docutils literal"><span class="pre">--log</span></span> <em>FILE</em></p></li>
</ul>
<p>Output logging details to <em>FILE</em>.</p>
<ul class="simple">
<li><p><span class="docutils literal"><span class="pre">-q</span></span>, <span class="docutils literal"><span class="pre">--quiet</span></span></p></li>
</ul>
<p>Avoid extra informational messages.</p>
<ul class="simple">
<li><p><span class="docutils literal"><span class="pre">-r</span></span>, <span class="docutils literal"><span class="pre">--readonly</span></span></p></li>
</ul>
<p>Make the initial connection read-only, as if by the <em>--readonly</em>
option of the <span class="docutils literal">connect</span> command.</p>
<ul class="simple">
<li><p><span class="docutils literal"><span class="pre">-t</span></span>, <span class="docutils literal"><span class="pre">--timing</span></span></p></li>
</ul>
<p>Output elapsed time information for each command.</p>
<ul class="simple">
<li><p><span class="docutils literal"><span class="pre">-v</span></span>, <span class="docutils literal"><span class="pre">--version[=short]</span></span></p></li>
</ul>
<p>Ignore all other arguments, and prints the version of the libvirt library
virsh is coming from</p>
<ul class="simple">
<li><p><span class="docutils literal"><span class="pre">-V</span></span>, <span class="docutils literal"><span class="pre">--version=long</span></span></p></li>
</ul>
<p>Ignore all other arguments, and prints the version of the libvirt library
virsh is coming from and which options and driver are compiled in.</p>
</div>
<div class="section" id="notes">
<h1><a class="toc-backref" href="#id3">NOTES</a></h1>
<p>Most <span class="docutils literal">virsh</span> operations rely upon the libvirt library being able to
connect to an already running libvirtd service.  This can usually be
done using the command <span class="docutils literal">service libvirtd start</span>.</p>
<p>Most <span class="docutils literal">virsh</span> commands require root privileges to run due to the
communications channels used to talk to the hypervisor.  Running as
non root will return an error.</p>
<p>Most <span class="docutils literal">virsh</span> commands act synchronously, except maybe shutdown,
setvcpus and setmem. In those cases the fact that the <span class="docutils literal">virsh</span>
program returned, may not mean the action is complete and you
must poll periodically to detect that the guest completed the
operation.</p>
<p><span class="docutils literal">virsh</span> strives for backward compatibility.  Although the <span class="docutils literal">help</span>
command only lists the preferred usage of a command, if an older
version of <span class="docutils literal">virsh</span> supported an alternate spelling of a command or
option (such as <em>--tunnelled</em> instead of <em>--tunneled</em>), then
scripts using that older spelling will continue to work.</p>
<p>Several <span class="docutils literal">virsh</span> commands take an optionally scaled integer; if no
scale is provided, then the default is listed in the command (for
historical reasons, some commands default to bytes, while other
commands default to kibibytes).  The following case-insensitive
suffixes can be used to select a specific scale:</p>
<pre class="literal-block">b, byte  byte      1
KB       kilobyte  1,000
k, KiB   kibibyte  1,024
MB       megabyte  1,000,000
M, MiB   mebibyte  1,048,576
GB       gigabyte  1,000,000,000
G, GiB   gibibyte  1,073,741,824
TB       terabyte  1,000,000,000,000
T, TiB   tebibyte  1,099,511,627,776
PB       petabyte  1,000,000,000,000,000
P, PiB   pebibyte  1,125,899,906,842,624
EB       exabyte   1,000,000,000,000,000,000
E, EiB   exbibyte  1,152,921,504,606,846,976</pre>
</div>
<div class="section" id="generic-commands">
<h1><a class="toc-backref" href="#id4">GENERIC COMMANDS</a></h1>
<p>The following commands are generic i.e. not specific to a domain.</p>
<div class="section" id="help">
<h2><a class="toc-backref" href="#id5">help</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">help [command-or-group]</pre>
<p>This lists each of the virsh commands.  When used without options, all
commands are listed, one per line, grouped into related categories,
displaying the keyword for each group.</p>
<p>To display only commands for a specific group, give the keyword for that
group as an option.  For example:</p>
<p><strong>Example 1:</strong></p>
<pre class="literal-block">virsh # help host

Host and Hypervisor (help keyword 'host'):
    capabilities                   capabilities
    cpu-models                     show the CPU models for an architecture
    connect                        (re)connect to hypervisor
    freecell                       NUMA free memory
    hostname                       print the hypervisor hostname
    qemu-attach                    Attach to existing QEMU process
    qemu-monitor-command           QEMU Monitor Command
    qemu-agent-command             QEMU Guest Agent Command
    sysinfo                        print the hypervisor sysinfo
    uri                            print the hypervisor canonical URI</pre>
<p>To display detailed information for a specific command, give its name as the
option instead.  For example:</p>
<p><strong>Example 2:</strong></p>
<pre class="literal-block">virsh # help list
  NAME
    list - list domains

  SYNOPSIS
    list [--inactive] [--all]

  DESCRIPTION
    Returns list of domains.

  OPTIONS
    --inactive       list inactive domains
    --all            list inactive &amp; active domains</pre>
</div>
<div class="section" id="quit-exit">
<h2><a class="toc-backref" href="#id6">quit, exit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">quit
exit</pre>
<p>quit this interactive terminal</p>
</div>
<div class="section" id="version">
<h2><a class="toc-backref" href="#id7">version</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">version [--daemon]</pre>
<p>Will print out the major version info about what this built from.
If <em>--daemon</em> is specified then the version of the libvirt daemon
is included in the output.</p>
<p><strong>Example:</strong></p>
<pre class="literal-block">$ virsh version
Compiled against library: libvirt 1.2.3
Using library: libvirt 1.2.3
Using API: QEMU 1.2.3
Running hypervisor: QEMU 2.0.50

$ virsh version --daemon
Compiled against library: libvirt 1.2.3
Using library: libvirt 1.2.3
Using API: QEMU 1.2.3
Running hypervisor: QEMU 2.0.50
Running against daemon: 1.2.6</pre>
</div>
<div class="section" id="cd">
<h2><a class="toc-backref" href="#id8">cd</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">cd [directory]</pre>
<p>Will change current directory to <em>directory</em>.  The default directory
for the <span class="docutils literal">cd</span> command is the home directory or, if there is no <em>HOME</em>
variable in the environment, the root directory.</p>
<p>This command is only available in interactive mode.</p>
</div>
<div class="section" id="pwd">
<h2><a class="toc-backref" href="#id9">pwd</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pwd</pre>
<p>Will print the current directory.</p>
</div>
<div class="section" id="connect">
<h2><a class="toc-backref" href="#id10">connect</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">connect [URI] [--readonly]</pre>
<p>(Re)-Connect to the hypervisor. When the shell is first started, this
is automatically run with the <em>URI</em> parameter requested by the <span class="docutils literal"><span class="pre">-c</span></span>
option on the command line. The <em>URI</em> parameter specifies how to
connect to the hypervisor. The URI docs
<a class="reference external" href="https://libvirt.org/uri.html">https://libvirt.org/uri.html</a> list the
values supported, but the most common are:</p>
<ul>
<li><p>xen:///system</p>
<p>this is used to connect to the local Xen hypervisor</p>
</li>
<li><p>qemu:///system</p>
<p>connect locally as root to the daemon supervising QEMU and KVM domains</p>
</li>
<li><p>qemu:///session</p>
<p>connect locally as a normal user to his own set of QEMU and KVM domains</p>
</li>
<li><p>lxc:///system</p>
<p>connect to a local linux container</p>
</li>
</ul>
<p>To find the currently used URI, check the <em>uri</em> command documented below.</p>
<p>For remote access see the URI docs
<a class="reference external" href="https://libvirt.org/uri.html">https://libvirt.org/uri.html</a> on how
to make URIs. The <em>--readonly</em> option allows for read-only connection</p>
</div>
<div class="section" id="uri">
<h2><a class="toc-backref" href="#id11">uri</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">uri</pre>
<p>Prints the hypervisor canonical URI, can be useful in shell mode.</p>
</div>
<div class="section" id="hostname">
<h2><a class="toc-backref" href="#id12">hostname</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">hostname</pre>
<p>Print the hypervisor hostname.</p>
</div>
<div class="section" id="sysinfo">
<h2><a class="toc-backref" href="#id13">sysinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">sysinfo</pre>
<p>Print the XML representation of the hypervisor sysinfo, if available.</p>
</div>
<div class="section" id="nodeinfo">
<h2><a class="toc-backref" href="#id14">nodeinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodeinfo</pre>
<p>Returns basic information about the node, like number and type of CPU,
and size of the physical memory. The output corresponds to virNodeInfo
structure. Specifically, the &quot;CPU socket(s)&quot; field means number of CPU
sockets per NUMA cell. The information libvirt displays is dependent
upon what each architecture may provide.</p>
</div>
<div class="section" id="nodecpumap">
<h2><a class="toc-backref" href="#id15">nodecpumap</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodecpumap [--pretty]</pre>
<p>Displays the node's total number of CPUs, the number of online CPUs
and the list of online CPUs.</p>
<p>With <em>--pretty</em> the online CPUs are printed as a range instead of a list.</p>
</div>
<div class="section" id="nodecpustats">
<h2><a class="toc-backref" href="#id16">nodecpustats</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodecpustats [cpu] [--percent]</pre>
<p>Returns cpu stats of the node.
If <em>cpu</em> is specified, this will print the specified cpu statistics only.
If <em>--percent</em> is specified, this will print the percentage of each kind
of cpu statistics during 1 second.</p>
</div>
<div class="section" id="nodememstats">
<h2><a class="toc-backref" href="#id17">nodememstats</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodememstats [cell]</pre>
<p>Returns memory stats of the node.
If <em>cell</em> is specified, this will print the specified cell statistics only.</p>
</div>
<div class="section" id="nodesevinfo">
<h2><a class="toc-backref" href="#id18">nodesevinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodesevinfo</pre>
<p>Reports information about the AMD SEV launch security features for
the node, if any. Some of this information is also reported in the
domain capabilities XML document.</p>
</div>
<div class="section" id="nodesuspend">
<h2><a class="toc-backref" href="#id19">nodesuspend</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodesuspend [target] [duration]</pre>
<p>Puts the node (host machine) into a system-wide sleep state and schedule
the node's Real-Time-Clock interrupt to resume the node after the time
duration specified by <em>duration</em> is out.
<em>target</em> specifies the state to which the host will be suspended to, it
can be &quot;mem&quot; (suspend to RAM), &quot;disk&quot; (suspend to disk), or &quot;hybrid&quot;
(suspend to both RAM and disk).  <em>duration</em> specifies the time duration
in seconds for which the host has to be suspended, it should be at least
60 seconds.</p>
</div>
<div class="section" id="node-memory-tune">
<h2><a class="toc-backref" href="#id20">node-memory-tune</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">node-memory-tune [shm-pages-to-scan] [shm-sleep-millisecs] [shm-merge-across-nodes]</pre>
<p>Allows you to display or set the node memory parameters.
<em>shm-pages-to-scan</em> can be used to set the number of pages to scan
before the shared memory service goes to sleep; <em>shm-sleep-millisecs</em>
can be used to set the number of millisecs the shared memory service should
sleep before next scan; <em>shm-merge-across-nodes</em> specifies if pages from
different numa nodes can be merged. When set to 0, only pages which physically
reside in the memory area of same NUMA node can be merged. When set to 1,
pages from all nodes can be merged. Default to 1.</p>
<p><span class="docutils literal">Note</span>: Currently the &quot;shared memory service&quot; only means KSM (Kernel Samepage
Merging).</p>
</div>
<div class="section" id="capabilities">
<h2><a class="toc-backref" href="#id21">capabilities</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">capabilities</pre>
<p>Print an XML document describing the capabilities of the hypervisor
we are currently connected to. This includes a section on the host
capabilities in terms of CPU and features, and a set of description
for each kind of guest which can be virtualized. For a more complete
description see:</p>
<p><a class="reference external" href="https://libvirt.org/formatcaps.html">https://libvirt.org/formatcaps.html</a></p>
<p>The XML also show the NUMA topology information if available.</p>
</div>
<div class="section" id="domcapabilities">
<h2><a class="toc-backref" href="#id22">domcapabilities</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domcapabilities [virttype] [emulatorbin] [arch] [machine]</pre>
<p>Print an XML document describing the domain capabilities for the
hypervisor we are connected to using information either sourced from an
existing domain or taken from the <span class="docutils literal">virsh capabilities</span> output. This may
be useful if you intend to create a new domain and are curious if for
instance it could make use of VFIO by creating a domain for the
hypervisor with a specific emulator and architecture.</p>
<p>Each hypervisor will have different requirements regarding which options
are required and which are optional. A hypervisor can support providing
a default value for any of the options.</p>
<p>The <em>virttype</em> option specifies the virtualization type used. The value
to be used is either from the 'type' attribute of the &lt;domain/&gt; top
level element from the domain XML or the 'type' attribute found within
each &lt;guest/&gt; element from the <span class="docutils literal">virsh capabilities</span> output.  The
<em>emulatorbin</em> option specifies the path to the emulator. The value to
be used is either the &lt;emulator&gt; element in the domain XML or the
<span class="docutils literal">virsh capabilities</span> output. The <em>arch</em> option specifies the
architecture to be used for the domain. The value to be used is either
the &quot;arch&quot; attribute from the domain's XML &lt;os/&gt; element and &lt;type/&gt;
subelement or the &quot;name&quot; attribute of an &lt;arch/&gt; element from the
<span class="docutils literal">virsh capabililites</span> output. The <em>machine</em> specifies the machine type
for the emulator. The value to be used is either the &quot;machine&quot; attribute
from the domain's XML &lt;os/&gt; element and &lt;type/&gt; subelement or one from a
list of machines from the <span class="docutils literal">virsh capabilities</span> output for a specific
architecture and domain type.</p>
<p>For the QEMU hypervisor, a <em>virttype</em> of either 'qemu' or 'kvm' must be
supplied along with either the <em>emulatorbin</em> or <em>arch</em> in order to
generate output for the default <em>machine</em>.  Supplying a <em>machine</em>
value will generate output for the specific machine.</p>
</div>
<div class="section" id="pool-capabilities">
<h2><a class="toc-backref" href="#id23">pool-capabilities</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-capabilities</pre>
<p>Print an XML document describing the storage pool capabilities for the
connected storage driver. This may be useful if you intend to create a
new storage pool and need to know the available pool types and supported
storage pool source and target volume formats as well as the required
source elements to create the pool.</p>
</div>
<div class="section" id="inject-nmi">
<h2><a class="toc-backref" href="#id24">inject-nmi</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">inject-nmi domain</pre>
<p>Inject NMI to the guest.</p>
</div>
<div class="section" id="list">
<h2><a class="toc-backref" href="#id25">list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">list [--inactive | --all]
     [--managed-save] [--title]
     { [--table] | --name | --uuid | --id }
     [--persistent] [--transient]
     [--with-managed-save] [--without-managed-save]
     [--autostart] [--no-autostart]
     [--with-snapshot] [--without-snapshot]
     [--with-checkpoint] [--without-checkpoint]
     [--state-running] [--state-paused]
     [--state-shutoff] [--state-other]</pre>
<p>Prints information about existing domains.  If no options are
specified it prints out information about running domains.</p>
<p><strong>Example 1:</strong></p>
<p>An example format for the list is as follows:</p>
<pre class="literal-block">``virsh`` list
  Id    Name                           State
----------------------------------------------------
  0     Domain-0                       running
  2     fedora                         paused</pre>
<p>Name is the name of the domain.  ID the domain numeric id.
State is the run state (see below).</p>
<p><strong>STATES</strong></p>
<p>The State field lists what state each domain is currently in. A domain
can be in one of the following possible states:</p>
<ul>
<li><p><span class="docutils literal">running</span></p>
<p>The domain is currently running on a CPU</p>
</li>
<li><p><span class="docutils literal">idle</span></p>
<p>The domain is idle, and not running or runnable.  This can be caused
because the domain is waiting on IO (a traditional wait state) or has
gone to sleep because there was nothing else for it to do.</p>
</li>
<li><p><span class="docutils literal">paused</span></p>
<p>The domain has been paused, usually occurring through the administrator
running <span class="docutils literal">virsh suspend</span>.  When in a paused state the domain will still
consume allocated resources like memory, but will not be eligible for
scheduling by the hypervisor.</p>
</li>
<li><p><span class="docutils literal">in shutdown</span></p>
<p>The domain is in the process of shutting down, i.e. the guest operating system
has been notified and should be in the process of stopping its operations
gracefully.</p>
</li>
<li><p><span class="docutils literal">shut off</span></p>
<p>The domain is not running.  Usually this indicates the domain has been
shut down completely, or has not been started.</p>
</li>
<li><p><span class="docutils literal">crashed</span></p>
<p>The domain has crashed, which is always a violent ending.  Usually
this state can only occur if the domain has been configured not to
restart on crash.</p>
</li>
<li><p><span class="docutils literal">pmsuspended</span></p>
<p>The domain has been suspended by guest power management, e.g. entered
into s3 state.</p>
</li>
</ul>
<p>Normally only active domains are listed. To list inactive domains specify
<em>--inactive</em> or <em>--all</em> to list both active and inactive domains.</p>
<p><strong>Filtering</strong></p>
<p>To further filter the list of domains you may specify one or more of filtering
flags supported by the <span class="docutils literal">list</span> command. These flags are grouped by function.
Specifying one or more flags from a group enables the filter group. Note that
some combinations of flags may yield no results. Supported filtering flags and
groups:</p>
<div class="section" id="persistence">
<h3>Persistence</h3>
<p>Flag <em>--persistent</em> is used to include persistent guests in the returned
list. To include transient guests specify <em>--transient</em>.</p>
</div>
<div class="section" id="existence-of-managed-save-image">
<h3>Existence of managed save image</h3>
<p>To list domains having a managed save image specify flag
<em>--with-managed-save</em>. For domains that don't have a managed save image
specify <em>--without-managed-save</em>.</p>
</div>
<div class="section" id="domain-state">
<h3>Domain state</h3>
<p>The following filter flags select a domain by its state:
<em>--state-running</em> for running domains, <em>--state-paused</em>  for paused domains,
<em>--state-shutoff</em> for turned off domains and <em>--state-other</em> for all
other states as a fallback.</p>
</div>
<div class="section" id="autostarting-domains">
<h3>Autostarting domains</h3>
<p>To list autostarting domains use the flag <em>--autostart</em>. To list domains with
this feature disabled use <em>--no-autostart</em>.</p>
</div>
<div class="section" id="snapshot-existence">
<h3>Snapshot existence</h3>
<p>Domains that have snapshot images can be listed using flag <em>--with-snapshot</em>,
domains without a snapshot <em>--without-snapshot</em>.</p>
</div>
<div class="section" id="checkpoint-existence">
<h3>Checkpoint existence</h3>
<p>Domains that have checkpoints can be listed using flag <em>--with-checkpoint</em>,
domains without a checkpoint <em>--without-checkpoint</em>.</p>
<p>When talking to older servers, this command is forced to use a series of API
calls with an inherent race, where a domain might not be listed or might appear
more than once if it changed state between calls while the list was being
collected.  Newer servers do not have this problem.</p>
<p>If <em>--managed-save</em> is specified, then domains that have managed save state
(only possible if they are in the <span class="docutils literal">shut off</span> state, so you need to specify
<em>--inactive</em> or <em>--all</em> to actually list them) will instead show as <span class="docutils literal">saved</span>
in the listing. This flag is usable only with the default <em>--table</em> output.
Note that this flag does not filter the list of domains.</p>
<p>If <em>--name</em> is specified, domain names are printed instead of the
table formatted one per line. If <em>--uuid</em> is specified domain's UUID's
are printed instead of names. If <em>--id</em> is specified then domain's ID's
are printed indead of names. However, it is possible to combine
<em>--name</em>, <em>--uuid</em> and <em>--id</em> to select only desired fields for
printing. Flag <em>--table</em> specifies that the legacy table-formatted
output should be used, but it is mutually exclusive with <em>--name</em>,
<em>--uuid</em> and <em>--id</em>. This is the default and will be used if neither of
<em>--name</em>, <em>--uuid</em> or <em>--id</em> is specified. If neither <em>--name</em> nor <em>--uuid</em> is
specified, but <em>--id</em> is, then only active domains are listed, even with the
<em>--all</em> parameter as otherwise the output would just contain bunch of lines
with just <em>-1</em>.</p>
<p>If <em>--title</em> is specified, then the short domain description (title) is
printed in an extra column. This flag is usable only with the default
<em>--table</em> output.</p>
<p><strong>Example 2:</strong></p>
<pre class="literal-block">$ virsh list --title
  Id    Name        State      Title
 -------------------------------------------
  0     Domain-0    running    Mailserver 1
  2     fedora      paused</pre>
</div>
</div>
<div class="section" id="freecell">
<h2><a class="toc-backref" href="#id26">freecell</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">freecell [{ [--cellno] cellno | --all }]</pre>
<p>Prints the available amount of memory on the machine or within a NUMA
cell.  The freecell command can provide one of three different
displays of available memory on the machine depending on the options
specified.  With no options, it displays the total free memory on the
machine.  With the --all option, it displays the free memory in each
cell and the total free memory on the machine.  Finally, with a
numeric argument or with --cellno plus a cell number it will display
the free memory for the specified cell only.</p>
</div>
<div class="section" id="freepages">
<h2><a class="toc-backref" href="#id27">freepages</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">freepages [{ [--cellno] cellno [--pagesize] pagesize |     --all }]</pre>
<p>Prints the available amount of pages within a NUMA cell. <em>cellno</em> refers
to the NUMA cell you're interested in. <em>pagesize</em> is a scaled integer (see
<span class="docutils literal">NOTES</span> above).  Alternatively, if <em>--all</em> is used, info on each possible
combination of NUMA cell and page size is printed out.</p>
</div>
<div class="section" id="allocpages">
<h2><a class="toc-backref" href="#id28">allocpages</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">allocpages [--pagesize] pagesize [--pagecount] pagecount [[--cellno] cellno] [--add] [--all]</pre>
<p>Change the size of pages pool of <em>pagesize</em> on the host. If
<em>--add</em> is specified, then <em>pagecount</em> pages are added into the
pool. However, if <em>--add</em> wasn't specified, then the
<em>pagecount</em> is taken as the new absolute size of the pool (this
may be used to free some pages and size the pool down). The
<em>cellno</em> modifier can be used to narrow the modification down to
a single host NUMA cell. On the other end of spectrum lies
<em>--all</em> which executes the modification on all NUMA cells.</p>
</div>
<div class="section" id="cpu-baseline">
<h2><a class="toc-backref" href="#id29">cpu-baseline</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">cpu-baseline FILE [--features] [--migratable]</pre>
<p>Compute baseline CPU which will be supported by all host CPUs given in &lt;file&gt;.
(See <span class="docutils literal"><span class="pre">hypervisor-cpu-baseline</span></span> command to get a CPU which can be provided by a
specific hypervisor.) The list of host CPUs is built by extracting all &lt;cpu&gt;
elements from the &lt;file&gt;. Thus, the &lt;file&gt; can contain either a set of &lt;cpu&gt;
elements separated by new lines or even a set of complete &lt;capabilities&gt;
elements printed by <span class="docutils literal">capabilities</span> command.  If <em>--features</em> is specified,
then the resulting XML description will explicitly include all features that
make up the CPU, without this option features that are part of the CPU model
will not be listed in the XML description.   If <em>--migratable</em> is specified,
features that block migration will not be included in the resulting CPU.</p>
</div>
<div class="section" id="cpu-compare">
<h2><a class="toc-backref" href="#id30">cpu-compare</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">cpu-compare FILE [--error] [--validate]</pre>
<p>Compare CPU definition from XML &lt;file&gt; with host CPU. (See
<span class="docutils literal"><span class="pre">hypervisor-cpu-compare</span></span> command for comparing the CPU definition with the CPU
which a specific hypervisor is able to provide on the host.) The XML &lt;file&gt; may
contain either host or guest CPU definition. The host CPU definition is the
&lt;cpu&gt; element and its contents as printed by <span class="docutils literal">capabilities</span> command. The
guest CPU definition is the &lt;cpu&gt; element and its contents from domain XML
definition or the CPU definition created from the host CPU model found in
domain capabilities XML (printed by <span class="docutils literal">domcapabilities</span> command). In
addition to the &lt;cpu&gt; element itself, this command accepts
full domain XML, capabilities XML, or domain capabilities XML containing
the CPU definition. For more information on guest CPU definition see:
<a class="reference external" href="https://libvirt.org/formatdomain.html#cpu-model-and-topology">https://libvirt.org/formatdomain.html#elementsCPU</a>. If <em>--error</em> is
specified, the command will return an error when the given CPU is
incompatible with host CPU and a message providing more details about the
incompatibility will be printed out. If <em>--validate</em> is specified, validates
the format of the XML document against an internal RNG schema.</p>
</div>
<div class="section" id="cpu-models">
<h2><a class="toc-backref" href="#id31">cpu-models</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">cpu-models arch</pre>
<p>Print the list of CPU models known by libvirt for the specified architecture.
Whether a specific hypervisor is able to create a domain which uses any of
the printed CPU models is a separate question which can be answered by
looking at the domain capabilities XML returned by <span class="docutils literal">domcapabilities</span> command.
Moreover, for some architectures libvirt does not know any CPU models and
the usable CPU models are only limited by the hypervisor. This command will
print that all CPU models are accepted for these architectures and the actual
list of supported CPU models can be checked in the domain capabilities XML.</p>
</div>
<div class="section" id="hypervisor-cpu-compare">
<h2><a class="toc-backref" href="#id32">hypervisor-cpu-compare</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">hypervisor-cpu-compare FILE [virttype] [emulator] [arch] [machine] [--error] [--validate]</pre>
<p>Compare CPU definition from XML &lt;file&gt; with the CPU the hypervisor is able to
provide on the host. (This is different from <span class="docutils literal"><span class="pre">cpu-compare</span></span> which compares the
CPU definition with the host CPU without considering any specific hypervisor
and its abilities.)</p>
<p>The XML <em>FILE</em> may contain either a host or guest CPU definition. The host CPU
definition is the &lt;cpu&gt; element and its contents as printed by the
<span class="docutils literal">capabilities</span> command. The guest CPU definition is the &lt;cpu&gt; element and its
contents from the domain XML definition or the CPU definition created from the
host CPU model found in the domain capabilities XML (printed by the
<span class="docutils literal">domcapabilities</span> command). In addition to the &lt;cpu&gt; element itself, this
command accepts full domain XML, capabilities XML, or domain capabilities XML
containing the CPU definition. For more information on guest CPU definition
see: <a class="reference external" href="https://libvirt.org/formatdomain.html#cpu-model-and-topology">https://libvirt.org/formatdomain.html#elementsCPU</a>.</p>
<p>The <em>virttype</em> option specifies the virtualization type (usable in the 'type'
attribute of the &lt;domain&gt; top level element from the domain XML). <em>emulator</em>
specifies the path to the emulator, <em>arch</em> specifies the CPU architecture, and
<em>machine</em> specifies the machine type. If <em>--error</em> is specified, the command
will return an error when the given CPU is incompatible with the host CPU and a
message providing more details about the incompatibility will be printed out.
If <em>--validate</em> is specified, validates the format of the XML document against
an internal RNG schema.</p>
</div>
<div class="section" id="hypervisor-cpu-baseline">
<h2><a class="toc-backref" href="#id33">hypervisor-cpu-baseline</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">hypervisor-cpu-baseline FILE [virttype] [emulator] [arch] [machine] [--features] [--migratable]</pre>
<p>Compute a baseline CPU which will be compatible with all CPUs defined in an XML
<em>file</em> and with the CPU the hypervisor is able to provide on the host. (This
is different from <span class="docutils literal"><span class="pre">cpu-baseline</span></span> which does not consider any hypervisor
abilities when computing the baseline CPU.)</p>
<p>The XML <em>FILE</em> may contain either host or guest CPU definitions describing the
host CPU model. The host CPU definition is the &lt;cpu&gt; element and its contents
as printed by <span class="docutils literal">capabilities</span> command. The guest CPU definition may be created
from the host CPU model found in domain capabilities XML (printed by
<span class="docutils literal">domcapabilities</span> command). In addition to the &lt;cpu&gt; elements, this command
accepts full capabilities XMLs, or domain capabilities XMLs containing the CPU
definitions. It is recommended to use only the CPU definitions from domain
capabilities, as on some architectures using the host CPU definition may either
fail or provide unexpected results.</p>
<p>When <em>FILE</em> contains only a single CPU definition, the command will print the
same CPU with restrictions imposed by the capabilities of the hypervisor.
Specifically, running th <span class="docutils literal">virsh <span class="pre">hypervisor-cpu-baseline</span></span> command with no
additional options on the result of <span class="docutils literal">virsh domcapabilities</span> will transform the
host CPU model from domain capabilities XML to a form directly usable in domain
XML.</p>
<p>The <em>virttype</em> option specifies the virtualization type (usable in the 'type'
attribute of the &lt;domain&gt; top level element from the domain XML). <em>emulator</em>
specifies the path to the emulator, <em>arch</em> specifies the CPU architecture, and
<em>machine</em> specifies the machine type. If <em>--features</em> is specified, then the
resulting XML description will explicitly include all features that make up the
CPU, without this option features that are part of the CPU model will not be
listed in the XML description. If <em>--migratable</em> is specified, features that
block migration will not be included in the resulting CPU.</p>
</div>
</div>
<div class="section" id="domain-commands">
<h1><a class="toc-backref" href="#id34">DOMAIN COMMANDS</a></h1>
<p>The following commands manipulate domains directly, as stated
previously most commands take domain as the first parameter. The
<em>domain</em> can be specified as a short integer, a name or a full UUID.</p>
<div class="section" id="autostart">
<h2><a class="toc-backref" href="#id35">autostart</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">autostart [--disable] domain</pre>
<p>Configure a domain to be automatically started at boot.</p>
<p>The option <em>--disable</em> disables autostarting.</p>
</div>
<div class="section" id="blkdeviotune">
<h2><a class="toc-backref" href="#id36">blkdeviotune</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">blkdeviotune domain device [[--config] [--live] | [--current]]
   [[total-bytes-sec] | [read-bytes-sec] [write-bytes-sec]]
   [[total-iops-sec] | [read-iops-sec] [write-iops-sec]]
   [[total-bytes-sec-max] | [read-bytes-sec-max] [write-bytes-sec-max]]
   [[total-iops-sec-max] | [read-iops-sec-max] [write-iops-sec-max]]
   [[total-bytes-sec-max-length] |
    [read-bytes-sec-max-length] [write-bytes-sec-max-length]]
   [[total-iops-sec-max-length] |
    [read-iops-sec-max-length] [write-iops-sec-max-length]]
   [size-iops-sec] [group-name]</pre>
<p>Set or query the block disk io parameters for a block device of <em>domain</em>.
<em>device</em> specifies a unique target name (&lt;target dev='name'/&gt;) or source
file (&lt;source file='name'/&gt;) for one of the disk devices attached to
<em>domain</em> (see also <span class="docutils literal">domblklist</span> for listing these names).</p>
<p>If no limit is specified, it will query current I/O limits setting.
Otherwise, alter the limits with these flags:
<em>--total-bytes-sec</em> specifies total throughput limit as a scaled integer, the
default being bytes per second if no suffix is specified.
<em>--read-bytes-sec</em> specifies read throughput limit as a scaled integer, the
default being bytes per second if no suffix is specified.
<em>--write-bytes-sec</em> specifies write throughput limit as a scaled integer, the
default being bytes per second if no suffix is specified.
<em>--total-iops-sec</em> specifies total I/O operations limit per second.
<em>--read-iops-sec</em> specifies read I/O operations limit per second.
<em>--write-iops-sec</em> specifies write I/O operations limit per second.
<em>--total-bytes-sec-max</em> specifies maximum total throughput limit as a scaled
integer, the default being bytes per second if no suffix is specified
<em>--read-bytes-sec-max</em> specifies maximum read throughput limit as a scaled
integer, the default being bytes per second if no suffix is specified.
<em>--write-bytes-sec-max</em> specifies maximum write throughput limit as a scaled
integer, the default being bytes per second if no suffix is specified.
<em>--total-iops-sec-max</em> specifies maximum total I/O operations limit per second.
<em>--read-iops-sec-max</em> specifies maximum read I/O operations limit per second.
<em>--write-iops-sec-max</em> specifies maximum write I/O operations limit per second.
<em>--total-bytes-sec-max-length</em> specifies duration in seconds to allow maximum
total throughput limit.
<em>--read-bytes-sec-max-length</em> specifies duration in seconds to allow maximum
read throughput limit.
<em>--write-bytes-sec-max-length</em> specifies duration in seconds to allow maximum
write throughput limit.
<em>--total-iops-sec-max-length</em> specifies duration in seconds to allow maximum
total I/O operations limit.
<em>--read-iops-sec-max-length</em> specifies duration in seconds to allow maximum
read I/O operations limit.
<em>--write-iops-sec-max-length</em> specifies duration in seconds to allow maximum
write I/O operations limit.
<em>--size-iops-sec</em> specifies size I/O operations limit per second.
<em>--group-name</em> specifies group name to share I/O quota between multiple drives.
For a QEMU domain, if no name is provided, then the default is to have a single
group for each <em>device</em>.</p>
<p>Older versions of virsh only accepted these options with underscore
instead of dash, as in <em>--total_bytes_sec</em>.</p>
<p>Bytes and iops values are independent, but setting only one value (such
as --read-bytes-sec) resets the other two in that category to unlimited.
An explicit 0 also clears any limit.  A non-zero value for a given total
cannot be mixed with non-zero values for read or write.</p>
<p>It is up to the hypervisor to determine how to handle the length values.
For the QEMU hypervisor, if an I/O limit value or maximum value is set,
then the default value of 1 second will be displayed. Supplying a 0 will
reset the value back to the default.</p>
<p>If <em>--live</em> is specified, affect a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
When setting the disk io parameters both <em>--live</em> and <em>--config</em> flags may be
given, but <em>--current</em> is exclusive. For querying only one of <em>--live</em>,
<em>--config</em> or <em>--current</em> can be specified. If no flag is specified, behavior
is different depending on hypervisor.</p>
</div>
<div class="section" id="blkiotune">
<h2><a class="toc-backref" href="#id37">blkiotune</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">blkiotune domain [--weight weight] [--device-weights device-weights]
   [--device-read-iops-sec device-read-iops-sec]
   [--device-write-iops-sec device-write-iops-sec]
   [--device-read-bytes-sec device-read-bytes-sec]
   [--device-write-bytes-sec device-write-bytes-sec]
   [[--config] [--live] | [--current]]</pre>
<p>Display or set the blkio parameters. QEMU/KVM supports <em>--weight</em>.
<em>--weight</em> is in range [100, 1000]. After kernel 2.6.39, the value
could be in the range [10, 1000].</p>
<p><span class="docutils literal"><span class="pre">device-weights</span></span> is a single string listing one or more device/weight
pairs, in the format of /path/to/device,weight,/path/to/device,weight.
Each weight is in the range [100, 1000], [10, 1000] after kernel 2.6.39,
or the value 0 to remove that device from per-device listings.
Only the devices listed in the string are modified;
any existing per-device weights for other devices remain unchanged.</p>
<p><span class="docutils literal"><span class="pre">device-read-iops-sec</span></span> is a single string listing one or more device/read_iops_sec
pairs, int the format of /path/to/device,read_iops_sec,/path/to/device,read_iops_sec.
Each read_iops_sec is a number which type is unsigned int, value 0 to remove that
device from per-device listing.
Only the devices listed in the string are modified;
any existing per-device read_iops_sec for other devices remain unchanged.</p>
<p><span class="docutils literal"><span class="pre">device-write-iops-sec</span></span> is a single string listing one or more device/write_iops_sec
pairs, int the format of /path/to/device,write_iops_sec,/path/to/device,write_iops_sec.
Each write_iops_sec is a number which type is unsigned int, value 0 to remove that
device from per-device listing.
Only the devices listed in the string are modified;
any existing per-device write_iops_sec for other devices remain unchanged.</p>
<p><span class="docutils literal"><span class="pre">device-read-bytes-sec</span></span> is a single string listing one or more device/read_bytes_sec
pairs, int the format of /path/to/device,read_bytes_sec,/path/to/device,read_bytes_sec.
Each read_bytes_sec is a number which type is unsigned long long, value 0 to remove
that device from per-device listing.
Only the devices listed in the string are modified;
any existing per-device read_bytes_sec for other devices remain unchanged.</p>
<p><span class="docutils literal"><span class="pre">device-write-bytes-sec</span></span> is a single string listing one or more device/write_bytes_sec
pairs, int the format of /path/to/device,write_bytes_sec,/path/to/device,write_bytes_sec.
Each write_bytes_sec is a number which type is unsigned long long, value 0 to remove
that device from per-device listing.
Only the devices listed in the string are modified;
any existing per-device write_bytes_sec for other devices remain unchanged.</p>
<p>If <em>--live</em> is specified, affect a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. If no flag is specified, behavior is different depending
on hypervisor.</p>
</div>
<div class="section" id="blockcommit">
<h2><a class="toc-backref" href="#id38">blockcommit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">blockcommit domain path [bandwidth] [--bytes] [base]
   [--shallow] [top] [--delete] [--keep-relative]
   [--wait [--async] [--verbose]] [--timeout seconds]
   [--active] [{--pivot | --keep-overlay}]</pre>
<p>Reduce the length of a backing image chain, by committing changes at the
top of the chain (snapshot or delta files) into backing images.  By
default, this command attempts to flatten the entire chain.  If <em>base</em>
and/or <em>top</em> are specified as files within the backing chain, then the
operation is constrained to committing just that portion of the chain;
<em>--shallow</em> can be used instead of <em>base</em> to specify the immediate
backing file of the resulting top image to be committed.  The files
being committed are rendered invalid, possibly as soon as the operation
starts; using the <em>--delete</em> flag will attempt to remove these invalidated
files at the successful completion of the commit operation. When the
<em>--keep-relative</em> flag is used, the backing file paths will be kept relative.</p>
<p>When <em>top</em> is omitted or specified as the active image, it is also
possible to specify <em>--active</em> to trigger a two-phase active commit. In
the first phase, <em>top</em> is copied into <em>base</em> and the job can only be
canceled, with top still containing data not yet in base. In the second
phase, <em>top</em> and <em>base</em> remain identical until a call to <span class="docutils literal">blockjob</span>
with the <em>--abort</em> flag (keeping top as the active image that tracks
changes from that point in time) or the <em>--pivot</em> flag (making base
the new active image and invalidating top).</p>
<p>By default, this command returns as soon as possible, and data for
the entire disk is committed in the background; the progress of the
operation can be checked with <span class="docutils literal">blockjob</span>.  However, if <em>--wait</em> is
specified, then this command will block until the operation completes
(or for <em>--active</em>, enters the second phase), or until the operation
is canceled because the optional <em>timeout</em> in seconds elapses
or SIGINT is sent (usually with <span class="docutils literal"><span class="pre">Ctrl-C</span></span>).  Using <em>--verbose</em> along
with <em>--wait</em> will produce periodic status updates.  If job cancellation
is triggered, <em>--async</em> will return control to the user as fast as
possible, otherwise the command may continue to block a little while
longer until the job is done cleaning up.  Using <em>--pivot</em> is shorthand
for combining <em>--active</em> <em>--wait</em> with an automatic <span class="docutils literal">blockjob</span>
<em>--pivot</em>; and using <em>--keep-overlay</em> is shorthand for combining
<em>--active</em> <em>--wait</em> with an automatic <span class="docutils literal">blockjob</span> <em>--abort</em>.</p>
<p><em>path</em> specifies fully-qualified path of the disk; it corresponds
to a unique target name (&lt;target dev='name'/&gt;) or source file (&lt;source
file='name'/&gt;) for one of the disk devices attached to <em>domain</em> (see
also <span class="docutils literal">domblklist</span> for listing these names).
<em>bandwidth</em> specifies copying bandwidth limit in MiB/s, although for
QEMU, it may be non-zero only for an online domain. For further information
on the <em>bandwidth</em> argument see the corresponding section for the <span class="docutils literal">blockjob</span>
command.</p>
</div>
<div class="section" id="blockcopy">
<h2><a class="toc-backref" href="#id39">blockcopy</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">blockcopy domain path { dest [format] [--blockdev] | --xml file }
   [--shallow] [--reuse-external] [bandwidth]
   [--wait [--async] [--verbose]] [{--pivot | --finish}]
   [--timeout seconds] [granularity] [buf-size] [--bytes]
   [--transient-job] [--synchronous-writes] [--print-xml]</pre>
<p>Copy a disk backing image chain to a destination.  Either <em>dest</em> as
the destination file name, or <em>--xml</em> with the name of an XML file containing
a top-level &lt;disk&gt; element describing the destination, must be present.
Additionally, if <em>dest</em> is given, <em>format</em> should be specified to declare
the format of the destination (if <em>format</em> is omitted, then libvirt
will reuse the format of the source, or with <em>--reuse-external</em> will
be forced to probe the destination format, which could be a potential
security hole).  The command supports <em>--raw</em> as a boolean flag synonym for
<em>--format=raw</em>.  When using <em>dest</em>, the destination is treated as a regular
file unless <em>--blockdev</em> is used to signal that it is a block device. By
default, this command flattens the entire chain; but if <em>--shallow</em> is
specified, the copy shares the backing chain.</p>
<p>If <em>--reuse-external</em> is specified, then the destination must exist and have
sufficient space to hold the copy. If <em>--shallow</em> is used in
conjunction with <em>--reuse-external</em> then the pre-created image must have
guest visible contents identical to guest visible contents of the backing
file of the original image. This may be used to modify the backing file
names on the destination.</p>
<p>By default, the copy job runs in the background, and consists of two
phases.  Initially, the job must copy all data from the source, and
during this phase, the job can only be canceled to revert back to the
source disk, with no guarantees about the destination.  After this phase
completes, both the source and the destination remain mirrored until a
call to <span class="docutils literal">blockjob</span> with the <em>--abort</em> and <em>--pivot</em> flags pivots over
to the copy, or a call without <em>--pivot</em> leaves the destination as a
faithful copy of that point in time.  However, if <em>--wait</em> is specified,
then this command will block until the mirroring phase begins, or cancel
the operation if the optional <em>timeout</em> in seconds elapses or SIGINT is
sent (usually with <span class="docutils literal"><span class="pre">Ctrl-C</span></span>).  Using <em>--verbose</em> along with <em>--wait</em>
will produce periodic status updates.  Using <em>--pivot</em> (similar to
<span class="docutils literal">blockjob</span> <em>--pivot</em>) or <em>--finish</em> (similar to <span class="docutils literal">blockjob</span> <em>--abort</em>)
implies <em>--wait</em>, and will additionally end the job cleanly rather than
leaving things in the mirroring phase.  If job cancellation is triggered
by timeout or by <em>--finish</em>, <em>--async</em> will return control to the user
as fast as possible, otherwise the command may continue to block a little
while longer until the job has actually cancelled.</p>
<p><em>path</em> specifies fully-qualified path of the disk.
<em>bandwidth</em> specifies copying bandwidth limit in MiB/s. Specifying a negative
value is interpreted as an unsigned long long value that might be essentially
unlimited, but more likely would overflow; it is safer to use 0 for that
purpose. For further information on the <em>bandwidth</em> argument see the
corresponding section for the <span class="docutils literal">blockjob</span> command.
Specifying <em>granularity</em> allows fine-tuning of the granularity that will be
copied when a dirty region is detected; larger values trigger less
I/O overhead but may end up copying more data overall (the default value is
usually correct); hypervisors may restrict this to be a power of two or fall
within a certain range. Specifying <em>buf-size</em> will control how much data can
be simultaneously in-flight during the copy; larger values use more memory but
may allow faster completion (the default value is usually correct).</p>
<p><em>--transient-job</em> allows specifying that the user does not require the job to
be recovered if the VM crashes or is turned off before the job completes. This
flag removes the restriction of copy jobs to transient domains if that
restriction is applied by the hypervisor.</p>
<p>If <em>--synchronous-writes</em> is specified the block job will wait for guest writes
to be propagated both to the original image and to the destination of the copy
so that it's guaranteed that the job converges if the destination storage is
slower. This may impact performance of writes while the blockjob is running.</p>
<p>If <em>--print-xml</em> is specified, then the XML used to start the block copy job
is printed instead of starting the job.</p>
</div>
<div class="section" id="blockjob">
<h2><a class="toc-backref" href="#id40">blockjob</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">blockjob domain path { [--abort] [--async] [--pivot] |
   [--info] [--raw] [--bytes] | [bandwidth] }</pre>
<p>Manage active block operations.  There are three mutually-exclusive modes:
<em>--info</em>, <em>bandwidth</em>, and <em>--abort</em>.  <em>--async</em> and <em>--pivot</em> imply
abort mode; <em>--raw</em> implies info mode; and if no mode was given, <em>--info</em>
mode is assumed.</p>
<p><em>path</em> specifies fully-qualified path of the disk; it corresponds
to a unique target name (&lt;target dev='name'/&gt;) or source file (&lt;source
file='name'/&gt;) for one of the disk devices attached to <em>domain</em> (see
also <span class="docutils literal">domblklist</span> for listing these names).</p>
<p>In <em>--abort</em> mode, the active job on the specified disk will
be aborted.  If <em>--async</em> is also specified, this command will return
immediately, rather than waiting for the cancellation to complete.  If
<em>--pivot</em> is specified, this requests that an active copy or active
commit job be pivoted over to the new image.</p>
<p>In <em>--info</em> mode, the active job information on the specified
disk will be printed.  By default, the output is a single human-readable
summary line; this format may change in future versions.  Adding
<em>--raw</em> lists each field of the struct, in a stable format.  If the
<em>--bytes</em> flag is set, then the command errors out if the server could
not supply bytes/s resolution; when omitting the flag, raw output is
listed in MiB/s and human-readable output automatically selects the
best resolution supported by the server.</p>
<p><em>bandwidth</em> can be used to set bandwidth limit for the active job in MiB/s.
If <em>--bytes</em> is specified then the bandwidth value is interpreted in
bytes/s. Specifying a negative value is interpreted as an unsigned long
value or essentially unlimited. The hypervisor can choose whether to
reject the value or convert it to the maximum value allowed. Optionally a
scaled positive number may be used as bandwidth (see <span class="docutils literal">NOTES</span> above). Using
<em>--bytes</em> with a scaled value permits a finer granularity to be selected.
A scaled value used without <em>--bytes</em> will be rounded down to MiB/s. Note
that the <em>--bytes</em> may be unsupported by the hypervisor.</p>
<p>Note that the progress reported for blockjobs corresponding to a pull-mode
backup don't report progress of the backup but rather usage of temporary
space required for the backup.</p>
</div>
<div class="section" id="blockpull">
<h2><a class="toc-backref" href="#id41">blockpull</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">blockpull domain path [bandwidth] [--bytes] [base]
   [--wait [--verbose] [--timeout seconds] [--async]]
   [--keep-relative] [--compress]</pre>
<p>Populate a disk from its backing image chain. By default, this command
flattens the entire chain; but if <em>base</em> is specified, containing the
name of one of the backing files in the chain, then that file becomes
the new backing file and only the intermediate portion of the chain is
pulled.  Once all requested data from the backing image chain has been
pulled, the disk no longer depends on that portion of the backing chain.</p>
<p>By default, this command returns as soon as possible, and data for
the entire disk is pulled in the background; the progress of the
operation can be checked with <span class="docutils literal">blockjob</span>.  However, if <em>--wait</em> is
specified, then this command will block until the operation completes,
or cancel the operation if the optional <em>timeout</em> in seconds elapses
or SIGINT is sent (usually with <span class="docutils literal"><span class="pre">Ctrl-C</span></span>).  Using <em>--verbose</em> along
with <em>--wait</em> will produce periodic status updates.  If job cancellation
is triggered, <em>--async</em> will return control to the user as fast as
possible, otherwise the command may continue to block a little while
longer until the job is done cleaning up.</p>
<p>Using the <em>--keep-relative</em> flag will keep the backing chain names
relative. Using the <em>--compress</em> flag wil turn compression on.</p>
<p><em>path</em> specifies fully-qualified path of the disk; it corresponds
to a unique target name (&lt;target dev='name'/&gt;) or source file (&lt;source
file='name'/&gt;) for one of the disk devices attached to <em>domain</em> (see
also <span class="docutils literal">domblklist</span> for listing these names).
<em>bandwidth</em> specifies copying bandwidth limit in MiB/s. For further information
on the <em>bandwidth</em> argument see the corresponding section for the <span class="docutils literal">blockjob</span>
command.</p>
</div>
<div class="section" id="blockresize">
<h2><a class="toc-backref" href="#id42">blockresize</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">blockresize domain path size</pre>
<p>Resize a block device of domain while the domain is running, <em>path</em>
specifies the absolute path of the block device; it corresponds
to a unique target name (&lt;target dev='name'/&gt;) or source file (&lt;source
file='name'/&gt;) for one of the disk devices attached to <em>domain</em> (see
also <span class="docutils literal">domblklist</span> for listing these names).</p>
<p><em>size</em> is a scaled integer (see <span class="docutils literal">NOTES</span> above) which defaults to KiB
(blocks of 1024 bytes) if there is no suffix.  You must use a suffix of
&quot;B&quot; to get bytes (note that for historical reasons, this differs from
<span class="docutils literal"><span class="pre">vol-resize</span></span> which defaults to bytes without a suffix).</p>
</div>
<div class="section" id="console">
<h2><a class="toc-backref" href="#id43">console</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">console domain [devname] [--safe] [--force]</pre>
<p>Connect the virtual serial console for the guest. The optional
<em>devname</em> parameter refers to the device alias of an alternate
console, serial or parallel device configured for the guest.
If omitted, the primary console will be opened.</p>
<p>If the flag <em>--safe</em> is specified, the connection is only attempted
if the driver supports safe console handling. This flag specifies that
the server has to ensure exclusive access to console devices. Optionally
the <em>--force</em> flag may be specified, requesting to disconnect any existing
sessions, such as in a case of a broken connection.</p>
</div>
<div class="section" id="x-exec">
<h2><a class="toc-backref" href="#id44">x-exec</a></h2>
<pre class="code literal-block"><code>x-exec domain [--shell] [--envs env1,env2,...] [--] [cmd]
[arg1] [arg2] ...</code></pre>
<p>Execute the command <em>cmd</em> with the arguments <em>arg1</em>, <em>arg2</em>, etc. in the
guest. The guest must have the guest agent installed. If <em>--shell</em> is set, the
command is executed in a shell environment. A comma-separated list of
environment variables can be passed to the executed process via the <em>--envs</em>
option.</p>
<p>If <em>cmd</em> is not specified, an interactive shell is run. Other options are not
allowed in this case.</p>
</div>
<div class="section" id="cpu-stats">
<h2><a class="toc-backref" href="#id45">cpu-stats</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">cpu-stats domain [--total] [start] [count]</pre>
<p>Provide cpu statistics information of a domain. The domain should
be running. Default it shows stats for all CPUs, and a total. Use
<em>--total</em> for only the total stats, <em>start</em> for only the per-cpu
stats of the CPUs from <em>start</em>, <em>count</em> for only <em>count</em> CPUs'
stats.</p>
</div>
<div class="section" id="create">
<h2><a class="toc-backref" href="#id46">create</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">create FILE [--console] [--paused] [--autodestroy]
   [--pass-fds N,M,...] [--validate] [--reset-nvram]</pre>
<p>Create a domain from an XML &lt;file&gt;. Optionally, <em>--validate</em> option can be
passed to validate the format of the input XML file against an internal RNG
schema (identical to using virt-xml-validate(1) tool). Domains created using
this command are going to be either transient (temporary ones that will vanish
once destroyed) or existing persistent guests that will run with one-time use
configuration, leaving the persistent XML untouched (this can come handy during
an automated testing of various configurations all based on the original XML).
See the example below for usage demonstration.</p>
<p>The domain will be paused if the <em>--paused</em> option is used
and supported by the driver; otherwise it will be running. If <em>--console</em> is
requested, attach to the console after creation.
If <em>--autodestroy</em> is requested, then the guest will be automatically
destroyed when virsh closes its connection to libvirt, or otherwise
exits.</p>
<p>If <em>--pass-fds</em> is specified, the argument is a comma separated list
of open file descriptors which should be pass on into the guest. The
file descriptors will be re-numbered in the guest, starting from 3. This
is only supported with container based virtualization.</p>
<p>If <em>--reset-nvram</em> is specified, any existing NVRAM file will be deleted
and re-initialized from its pristine template.</p>
<p><strong>Example:</strong></p>
<ol class="arabic">
<li><p>prepare a template from an existing domain (skip directly to 3a if writing
one from scratch)</p>
<pre class="literal-block"># virsh dumpxml &lt;domain&gt; &gt; domain.xml</pre>
</li>
<li><p>edit the template using an editor of your choice and:</p>
<ol class="loweralpha simple">
<li><p>DO CHANGE! &lt;name&gt; and &lt;uuid&gt; (&lt;uuid&gt; can also be removed), or</p></li>
<li><p>DON'T CHANGE! either &lt;name&gt; or &lt;uuid&gt;</p></li>
</ol>
<pre class="literal-block"># $EDITOR domain.xml</pre>
</li>
<li><p>create a domain from domain.xml, depending on whether following 2a or 2b
respectively:</p>
<ol class="loweralpha simple">
<li><p>the domain is going to be transient</p></li>
<li><p>an existing persistent guest will run with a modified one-time
configuration</p></li>
</ol>
<pre class="literal-block"># virsh create domain.xml</pre>
</li>
</ol>
</div>
<div class="section" id="define">
<h2><a class="toc-backref" href="#id47">define</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">define FILE [--validate]</pre>
<p>Define a domain from an XML &lt;file&gt;. Optionally, the format of the input XML
file can be validated against an internal RNG schema with <em>--validate</em>
(identical to using virt-xml-validate(1) tool). The domain definition is
registered but not started.  If domain is already running, the changes will take
effect on the next boot.</p>
</div>
<div class="section" id="desc">
<h2><a class="toc-backref" href="#id48">desc</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">desc domain [[--live] [--config] |
   [--current]] [--title] [--edit] [--new-desc
   New description or title message]</pre>
<p>Show or modify description and title of a domain. These values are user
fields that allow storing arbitrary textual data to allow easy
identification of domains. Title should be short, although it's not enforced.
(See also <span class="docutils literal">metadata</span> that works with XML based domain metadata.)</p>
<p>Flags <em>--live</em> or <em>--config</em> select whether this command works on live
or persistent definitions of the domain. If both <em>--live</em> and <em>--config</em>
are specified, the <em>--config</em> option takes precedence on getting the current
description and both live configuration and config are updated while setting
the description. <em>--current</em> is exclusive and implied if none of these was
specified.</p>
<p>Flag <em>--edit</em> specifies that an editor with the contents of current
description or title should be opened and the contents saved back afterwards.</p>
<p>Flag <em>--title</em> selects operation on the title field instead of description.</p>
<p>If neither of <em>--edit</em> and <em>--new-desc</em> are specified the note or description
is displayed instead of being modified.</p>
</div>
<div class="section" id="destroy">
<h2><a class="toc-backref" href="#id49">destroy</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">destroy domain [--graceful] [--remove-logs]</pre>
<p>Immediately terminate the domain <em>domain</em>.  This doesn't give the domain
OS any chance to react, and it's the equivalent of ripping the power
cord out on a physical machine.  In most cases you will want to use
the <span class="docutils literal">shutdown</span> command instead.  However, this does not delete any
storage volumes used by the guest, and if the domain is persistent, it
can be restarted later.</p>
<p>If <em>domain</em> is transient, then the metadata of any snapshots will
be lost once the guest stops running, but the snapshot contents still
exist, and a new domain with the same name and UUID can restore the
snapshot metadata with <span class="docutils literal"><span class="pre">snapshot-create</span></span>.  Similarly, the metadata of
any checkpoints will be lost, but can be restored with <span class="docutils literal"><span class="pre">checkpoint-create</span></span>.</p>
<p>If <em>--graceful</em> is specified, don't resort to extreme measures
(e.g. SIGKILL) when the guest doesn't stop after a reasonable timeout;
return an error instead.</p>
<p>If <em>--remove-logs</em> is specified, remove per <em>domain</em> log files. Not all
deployment configuration can be supported.</p>
<p>In case of QEMU the flag is only supported if virlogd is used to handle QEMU
process output. Otherwise the flag is ignored.</p>
</div>
<div class="section" id="domblkerror">
<h2><a class="toc-backref" href="#id50">domblkerror</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domblkerror domain</pre>
<p>Show errors on block devices.  This command usually comes handy when
<span class="docutils literal">domstate</span> command says that a domain was paused due to I/O error.
The <span class="docutils literal">domblkerror</span> command lists all block devices in error state and
the error seen on each of them.</p>
</div>
<div class="section" id="domblkinfo">
<h2><a class="toc-backref" href="#id51">domblkinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domblkinfo domain [block-device --all] [--human]</pre>
<p>Get block device size info for a domain.  A <em>block-device</em> corresponds
to a unique target name (&lt;target dev='name'/&gt;) or source file (&lt;source
file='name'/&gt;) for one of the disk devices attached to <em>domain</em> (see
also <span class="docutils literal">domblklist</span> for listing these names). If <em>--human</em> is set, the
output will have a human readable output.
If <em>--all</em> is set, the output will be a table showing all block devices
size info associated with <em>domain</em>.
The <em>--all</em> option takes precedence of the others.</p>
</div>
<div class="section" id="domblklist">
<h2><a class="toc-backref" href="#id52">domblklist</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domblklist domain [--inactive] [--details]</pre>
<p>Print a table showing the brief information of all block devices
associated with <em>domain</em>. If <em>--inactive</em> is specified, query the
block devices that will be used on the next boot, rather than those
currently in use by a running domain. If <em>--details</em> is specified,
disk type and device value will also be printed. Other contexts
that require a block device name (such as <em>domblkinfo</em> or
<em>snapshot-create</em> for disk snapshots) will accept either target
or unique source names printed by this command.</p>
</div>
<div class="section" id="domblkstat">
<h2><a class="toc-backref" href="#id53">domblkstat</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domblkstat domain [block-device] [--human]</pre>
<p>Get device block stats for a running domain.  A <em>block-device</em> corresponds
to a unique target name (&lt;target dev='name'/&gt;) or source file (&lt;source
file='name'/&gt;) for one of the disk devices attached to <em>domain</em> (see
also <span class="docutils literal">domblklist</span> for listing these names). On a LXC or QEMU domain,
omitting the <em>block-device</em> yields device block stats summarily for the
entire domain.</p>
<p>Use <em>--human</em> for a more human readable output.</p>
<p>Availability of these fields depends on hypervisor. Unsupported fields are
missing from the output. Other fields may appear if communicating with a newer
version of libvirtd.</p>
<p>Explanation of fields (fields appear in the following order):</p>
<ul class="simple">
<li><p>rd_req            - count of read operations</p></li>
<li><p>rd_bytes          - count of read bytes</p></li>
<li><p>wr_req            - count of write operations</p></li>
<li><p>wr_bytes          - count of written bytes</p></li>
<li><p>errs              - error count</p></li>
<li><p>flush_operations  - count of flush operations</p></li>
<li><p>rd_total_times    - total time read operations took (ns)</p></li>
<li><p>wr_total_times    - total time write operations took (ns)</p></li>
<li><p>flush_total_times - total time flush operations took (ns)</p></li>
<li><p>&lt;-- other fields provided by hypervisor --&gt;</p></li>
</ul>
</div>
<div class="section" id="blockjob-pause-x">
<h2><a class="toc-backref" href="#id54">blockjob-pause-x</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>blockjob-pause-x domain path</code></pre>
<p>Pause blockjob of <em>domain</em> for disk given by <em>path</em>.</p>
</div>
<div class="section" id="blockjob-resume-x">
<h2><a class="toc-backref" href="#id55">blockjob-resume-x</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>blockjob-resume-x domain path</code></pre>
<p>Resume blockjob of <em>domain</em> for disk given by <em>path</em>.</p>
</div>
<div class="section" id="domblkthreshold">
<h2><a class="toc-backref" href="#id56">domblkthreshold</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domblkthreshold domain dev threshold</pre>
<p>Set the threshold value for delivering the block-threshold event. <em>dev</em>
specifies the disk device target or backing chain element of given device using
the 'target[1]' syntax. <em>threshold</em> is a scaled value of the offset. If the
block device should write beyond that offset the event will be delivered.</p>
</div>
<div class="section" id="domcontrol">
<h2><a class="toc-backref" href="#id57">domcontrol</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domcontrol domain</pre>
<p>Returns state of an interface to VMM used to control a domain.  For
states other than &quot;ok&quot; or &quot;error&quot; the command also prints number of
seconds elapsed since the control interface entered its current state.</p>
</div>
<div class="section" id="domdirtyrate-calc">
<h2><a class="toc-backref" href="#id58">domdirtyrate-calc</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domdirtyrate-calc &lt;domain&gt; [--seconds &lt;sec&gt;]
   --mode=[page-sampling | dirty-bitmap | dirty-ring]</pre>
<p>Calculate an active domain's memory dirty rate which may be expected by
user in order to decide whether it's proper to be migrated out or not.
The <span class="docutils literal">seconds</span> parameter can be used to calculate dirty rate in a
specific time which allows 60s at most now and would be default to 1s
if missing. These three <em>page-sampling, dirty-bitmap, dirty-ring</em> modes
are mutually exclusive and alternative when specify calculation mode,
<em>page-sampling</em> is the default mode if missing. The calculated dirty
rate information is available by calling 'domstats --dirtyrate'.</p>
</div>
<div class="section" id="domdisplay">
<h2><a class="toc-backref" href="#id59">domdisplay</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domdisplay domain [--include-password] [[--type] type] [--all]</pre>
<p>Output a URI which can be used to connect to the graphical display of the
domain via VNC, SPICE or RDP.  The particular graphical display type can
be selected using the <span class="docutils literal">type</span> parameter (e.g. &quot;vnc&quot;, &quot;spice&quot;, &quot;rdp&quot;).  If
<em>--include-password</em> is specified, the SPICE channel password will be
included in the URI. If <em>--all</em> is specified, then all show all possible
graphical displays, for a VM could have more than one graphical displays.</p>
</div>
<div class="section" id="domfsfreeze">
<h2><a class="toc-backref" href="#id60">domfsfreeze</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domfsfreeze domain [[--mountpoint] mountpoint...] [--hyperv-vss]</pre>
<p>Freeze mounted filesystems within a running domain to prepare for consistent
snapshots.</p>
<p>The <em>--mountpoint</em> option takes a parameter <span class="docutils literal">mountpoint</span>, which is a
mount point path of the filesystem to be frozen. This option can occur
multiple times. If this is not specified, every mounted filesystem is frozen.</p>
<p>If <em>--hyperv-vss</em> is specified then freeze is done thru HyperV for Windows guests.
In this case you don't need agent in guest. Note that this option is not compatible
with specifying filesystems to be frozen only all filesystems can be frozen
this way. Also all domain disks should be on hv-scsi controllers.</p>
<p>Note: <span class="docutils literal"><span class="pre">snapshot-create</span></span> command has a <em>--quiesce</em> option to freeze
and thaw the filesystems automatically to keep snapshots consistent.
<span class="docutils literal">domfsfreeze</span> command is only needed when a user wants to utilize the
native snapshot features of storage devices not supported by libvirt.</p>
</div>
<div class="section" id="domfsinfo">
<h2><a class="toc-backref" href="#id61">domfsinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domfsinfo domain</pre>
<p>Show a list of mounted filesystems within the running domain. The list contains
mountpoints, names of a mounted device in the guest, filesystem types, and
unique target names used in the domain XML (&lt;target dev='name'/&gt;).</p>
<p>Note that this command requires a guest agent configured and running in the
domain's guest OS.</p>
</div>
<div class="section" id="domfsthaw">
<h2><a class="toc-backref" href="#id62">domfsthaw</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domfsthaw domain [[--mountpoint] mountpoint...] [--hyperv-vss]</pre>
<p>Thaw mounted filesystems within a running domain, which have been frozen by
domfsfreeze command.</p>
<p>The <em>--mountpoint</em> option takes a parameter <span class="docutils literal">mountpoint</span>, which is a
mount point path of the filesystem to be thawed. This option can occur
multiple times. If this is not specified, every mounted filesystem is thawed.</p>
<p>If <em>--hyperv-vss</em> is specified then thaw is done thru HyperV for Windows guests.
In this case you don't need agent in guest. Note that this option is not compatible
with specifying filesystems to be thawed only all filesystems can be thawed
this way. Also all domain disks should be on hv-scsi controllers.</p>
</div>
<div class="section" id="domfstrim">
<h2><a class="toc-backref" href="#id63">domfstrim</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domfstrim domain [--minimum bytes] [--mountpoint mountPoint]</pre>
<p>Issue a fstrim command on all mounted filesystems within a running
domain. It discards blocks which are not in use by the filesystem.
If <em>--minimum</em> <span class="docutils literal">bytes</span> is specified, it tells guest kernel length
of contiguous free range. Smaller than this may be ignored (this is
a hint and the guest may not respect it). By increasing this value,
the fstrim operation will complete more quickly for filesystems
with badly fragmented free space, although not all blocks will
be discarded.  The default value is zero, meaning &quot;discard
every free block&quot;. Moreover, if a user wants to trim only one mount
point, it can be specified via optional <em>--mountpoint</em> parameter.</p>
</div>
<div class="section" id="domhostname">
<h2><a class="toc-backref" href="#id64">domhostname</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domhostname domain [--source lease|agent]</pre>
<p>Returns the hostname of a domain, if the hypervisor makes it available.</p>
<p>The <em>--source</em> argument specifies what data source to use for the
hostnames, currently 'lease' to read DHCP leases or 'agent' to query
the guest OS via an agent. If unspecified, driver returns the default
method available (some drivers support only one type of source).</p>
</div>
<div class="section" id="domid">
<h2><a class="toc-backref" href="#id65">domid</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domid domain-name-or-uuid</pre>
<p>Convert a domain name (or UUID) to a domain id</p>
</div>
<div class="section" id="domif-getlink">
<h2><a class="toc-backref" href="#id66">domif-getlink</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domif-getlink domain interface-device [--config]</pre>
<p>Query link state of the domain's virtual interface. If <em>--config</em>
is specified, query the persistent configuration, for compatibility
purposes, <em>--persistent</em> is alias of <em>--config</em>.</p>
<p><em>interface-device</em> can be the interface's target name or the MAC address.</p>
</div>
<div class="section" id="domif-setlink">
<h2><a class="toc-backref" href="#id67">domif-setlink</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domif-setlink domain interface-device state [--config]</pre>
<p>Modify link state of the domain's virtual interface. Possible values for
state are &quot;up&quot; and &quot;down&quot;. If <em>--config</em> is specified, only the persistent
configuration of the domain is modified, for compatibility purposes,
<em>--persistent</em> is alias of <em>--config</em>.
<em>interface-device</em> can be the interface's target name or the MAC address.</p>
</div>
<div class="section" id="domifaddr">
<h2><a class="toc-backref" href="#id68">domifaddr</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domifaddr domain [interface] [--full]
   [--source lease|agent|arp]</pre>
<p>Get a list of interfaces of a running domain along with their IP and MAC
addresses, or limited output just for one interface if <em>interface</em> is
specified. Note that <em>interface</em> can be driver dependent, it can be the name
within guest OS or the name you would see in domain XML. Moreover, the whole
command may require a guest agent to be configured for the queried domain under
some hypervisors, notably QEMU.</p>
<p>If <em>--full</em> is specified, the interface name and MAC address is always
displayed when the interface has multiple IP addresses or aliases; otherwise,
only the interface name and MAC address is displayed for the first name and
MAC address with &quot;-&quot; for the others using the same name and MAC address.</p>
<p>The <em>--source</em> argument specifies what data source to use for the
addresses, currently 'lease' to read DHCP leases, 'agent' to query
the guest OS via an agent, or 'arp' to get IP from host's arp tables.
If unspecified, 'lease' is the default.</p>
</div>
<div class="section" id="backup-begin">
<h2><a class="toc-backref" href="#id69">backup-begin</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">backup-begin domain [backupxml] [checkpointxml] [--reuse-external]</pre>
<p>Begin a new backup job. If <em>backupxml</em> is omitted, this defaults to a full
backup using a push model to filenames generated by libvirt; supplying XML
allows fine-tuning such as requesting an incremental backup relative to an
earlier checkpoint, controlling which disks participate or which
filenames are involved, or requesting the use of a pull model backup.
The <em>backup-dumpxml</em> command shows any resulting values assigned by
libvirt. For more information on backup XML, see:
<a class="reference external" href="https://libvirt.org/formatbackup.html">https://libvirt.org/formatbackup.html</a></p>
<p>If <em>--reuse-external</em> is used it instructs libvirt to reuse temporary
and output files provided by the user in <em>backupxml</em>.</p>
<p>If <em>checkpointxml</em> is specified, a second file with a top-level
element of <em>domaincheckpoint</em> is used to create a simultaneous
checkpoint, for doing a later incremental backup relative to the time
the backup was created. See <em>checkpoint-create</em> for more details on
checkpoints.</p>
<p>This command returns as soon as possible, and the backup job runs in
the background; the progress of a push model backup can be checked
with <em>domjobinfo</em> or by waiting for an event with <em>event</em> (the
progress of a pull model backup is under the control of whatever third
party connects to the NBD export). The job is ended with <em>domjobabort</em>.</p>
</div>
<div class="section" id="backup-dumpxml">
<h2><a class="toc-backref" href="#id70">backup-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">backup-dumpxml [--xpath EXPRESSION] [--wrap] domain</pre>
<p>Output XML describing the current backup job.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="domiflist">
<h2><a class="toc-backref" href="#id71">domiflist</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domiflist domain [--inactive]</pre>
<p>Print a table showing the brief information of all virtual interfaces
associated with <em>domain</em>. If <em>--inactive</em> is specified, query the
virtual interfaces that will be used on the next boot, rather than those
currently in use by a running domain. Other contexts that require a MAC
address of virtual interface (such as <em>detach-interface</em> or
<em>domif-setlink</em>) will accept the MAC address printed by this command.</p>
</div>
<div class="section" id="domifstat">
<h2><a class="toc-backref" href="#id72">domifstat</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domifstat domain interface-device</pre>
<p>Get network interface stats for a running domain. The network
interface stats are only available for interfaces that have a
physical source interface. This does not include, for example, a
'user' interface type since it is a virtual LAN with NAT to the
outside world. <em>interface-device</em> can be the interface target by
name or MAC address.</p>
</div>
<div class="section" id="domiftune">
<h2><a class="toc-backref" href="#id73">domiftune</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domiftune domain interface-device [[--config] [--live] | [--current]]
   [*--inbound average,peak,burst,floor*]
   [*--outbound average,peak,burst*]</pre>
<p>Set or query the domain's network interface's bandwidth parameters.
<em>interface-device</em> can be the interface's target name (&lt;target dev='name'/&gt;),
or the MAC address.</p>
<p>If no <em>--inbound</em> or <em>--outbound</em> is specified, this command will
query and show the bandwidth settings. Otherwise, it will set the
inbound or outbound bandwidth. <em>average,peak,burst,floor</em> is the same as
in command <em>attach-interface</em>.  Values for <em>average</em>, <em>peak</em> and <em>floor</em>
are expressed in kilobytes per second, while <em>burst</em> is expressed in kilobytes
in a single burst at <em>peak</em> speed as described in the Network XML
documentation at
<a class="reference external" href="https://libvirt.org/formatnetwork.html#quality-of-service">https://libvirt.org/formatnetwork.html#quality-of-service</a>.</p>
<p>To clear inbound or outbound settings, use <em>--inbound</em> or <em>--outbound</em>
respectfully with average value of zero.</p>
<p>If <em>--live</em> is specified, affect a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. If no flag is specified, behavior is different depending
on hypervisor.</p>
</div>
<div class="section" id="dominfo">
<h2><a class="toc-backref" href="#id74">dominfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">dominfo domain</pre>
<p>Returns basic information about the domain.</p>
</div>
<div class="section" id="domjobabort">
<h2><a class="toc-backref" href="#id75">domjobabort</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domjobabort domain [--postcopy]</pre>
<p>Abort the currently running domain job.</p>
<p>When the job to be aborted is a migration which entered post-copy mode, it
cannot be aborted as none of the hosts involved in migration has a complete
state of the domain. Optional <em>--postcopy</em> can be used to interrupt such
migration although doing so may effectively suspend the domain until the
migration is resumed (see also <em>--postcopy-resume</em> option of <span class="docutils literal">migrate</span>).</p>
</div>
<div class="section" id="domjobinfo">
<h2><a class="toc-backref" href="#id76">domjobinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domjobinfo domain [--completed [--keep-completed]] [--anystats] [--rawstats]</pre>
<p>Returns information about jobs running on a domain. <em>--completed</em> tells
virsh to return information about a recently finished job. Statistics of
a completed job are automatically destroyed once read (unless
<em>--keep-completed</em> is used) or when libvirtd is restarted.</p>
<p>Normally only statistics for running and successful completed jobs are printed.
<em>--anystats</em> can be used to also display statistics for failed jobs.</p>
<p>In case <em>--rawstats</em> is used, all fields are printed as received from the
server without any attempts to interpret the data. The &quot;Job type:&quot; field is
special, since it's reported by the API and not part of stats.</p>
<p>Note that time information returned for completed
migrations may be completely irrelevant unless both source and
destination hosts have synchronized time (i.e., NTP daemon is running
on both of them).</p>
</div>
<div class="section" id="domlaunchsecinfo">
<h2><a class="toc-backref" href="#id77">domlaunchsecinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domlaunchsecinfo domain</pre>
<p>Returns information about the launch security parameters associated
with a running domain.</p>
<p>The set of parameters reported will vary depending on which type of
launch security protection is active. If none is active, no parameters
will be reported.</p>
</div>
<div class="section" id="domsetlaunchsecstate">
<h2><a class="toc-backref" href="#id78">domsetlaunchsecstate</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domsetlaunchsecstate domain --secrethdr hdr-filename
    --secret secret-filename [--set-address address]</pre>
<p>Set a launch security secret in the guest's memory. The guest must have a
launchSecurity type enabled in its configuration and be in a paused state.
On success, the guest can be transitioned to a running state. On failure,
the guest should be destroyed.</p>
<p><em>--secrethdr</em> specifies a filename containing the base64-encoded secret header.
The header includes artifacts needed by the hypervisor firmware to recover the
plain text of the launch secret. <em>--secret</em> specifies the filename containing
the base64-encoded encrypted launch secret.</p>
<p>The <em>--set-address</em> option can be used to specify a physical address within
the guest's memory to set the secret. If not specified, the address will be
determined by the hypervisor.</p>
</div>
<div class="section" id="dommemstat">
<h2><a class="toc-backref" href="#id79">dommemstat</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">dommemstat domain [--period seconds] [[--config] [--live] | [--current]]</pre>
<p>Get memory stats for a running domain.</p>
<p>Availability of these fields depends on hypervisor. Unsupported fields are
missing from the output. Other fields may appear if communicating with a newer
version of libvirtd.</p>
<p>Explanation of fields:</p>
<ul class="simple">
<li><p><span class="docutils literal">swap_in</span>           - The amount of data read from swap space (in KiB)</p></li>
<li><p><span class="docutils literal">swap_out</span>          - The amount of memory written out to swap space (in KiB)</p></li>
<li><p><span class="docutils literal">major_fault</span>       - The number of page faults where disk IO was required</p></li>
<li><p><span class="docutils literal">minor_fault</span>       - The number of other page faults</p></li>
<li><p><span class="docutils literal">unused</span>            - The amount of memory left unused by the system (in KiB)</p></li>
<li><p><span class="docutils literal">available</span>         - The amount of usable memory as seen by the domain (in KiB)</p></li>
<li><p><span class="docutils literal">actual</span>            - Current balloon value (in KiB)</p></li>
<li><p><span class="docutils literal">rss</span>               - Resident Set Size of the running domain's process (in KiB)</p></li>
<li><p><span class="docutils literal">usable</span>            - The amount of memory which can be reclaimed by balloon
without causing host swapping (in KiB)</p></li>
<li><p><span class="docutils literal"><span class="pre">last-update</span></span>       - Timestamp of the last update of statistics (in seconds)</p></li>
<li><p><span class="docutils literal">disk_caches</span>       - The amount of memory that can be reclaimed without
additional I/O, typically disk caches (in KiB)</p></li>
<li><p><span class="docutils literal">hugetlb_pgalloc</span>   - The number of successful huge page allocations initiated
from within the domain</p></li>
<li><p><span class="docutils literal">hugetlb_pgfail</span>    - The number of failed huge page allocations initiated from
within the domain</p></li>
</ul>
<p>For QEMU/KVM with a memory balloon, setting the optional <em>--period</em> to a
value larger than 0 in seconds will allow the balloon driver to return
additional statistics which will be displayed by subsequent <span class="docutils literal">dommemstat</span>
commands. Setting the <em>--period</em> to 0 will stop the balloon driver collection,
but does not clear the statistics in the balloon driver. Requires at least
QEMU/KVM 1.5 to be running on the host.</p>
<p>The <em>--live</em>, <em>--config</em>, and <em>--current</em> flags are only valid when using
the <em>--period</em> option in order to set the collection period for the balloon
driver. If <em>--live</em> is specified, only the running guest collection period
is affected. If <em>--config</em> is specified, affect the next start of a persistent
guest. If <em>--current</em> is specified, it is equivalent to either <em>--live</em>
or <em>--config</em>, depending on the current state of the guest.</p>
<p>Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. If no flag is specified, behavior is different depending
on the guest state.</p>
</div>
<div class="section" id="domname">
<h2><a class="toc-backref" href="#id80">domname</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domname domain-id-or-uuid</pre>
<p>Convert a domain Id (or UUID) to domain name</p>
</div>
<div class="section" id="dompmsuspend">
<h2><a class="toc-backref" href="#id81">dompmsuspend</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">dompmsuspend domain target [--duration]</pre>
<p>Suspend a running domain into one of these states (possible <em>target</em>
values):</p>
<ul class="simple">
<li><p><span class="docutils literal">mem</span> - equivalent of S3 ACPI state</p></li>
<li><p><span class="docutils literal">disk</span> - equivalent of S4 ACPI state</p></li>
<li><p><span class="docutils literal">hybrid</span> - RAM is saved to disk but not powered off</p></li>
</ul>
<p>The <em>--duration</em> argument specifies number of seconds before the domain is
woken up after it was suspended (see also <span class="docutils literal">dompmwakeup</span>). Default is 0 for
unlimited suspend time. (This feature isn't currently supported by any
hypervisor driver and 0 should be used.).</p>
<p>Note that this command requires a guest agent configured and running in the
domain's guest OS.</p>
<p>Beware that at least for QEMU, the domain's process will be terminated when
target disk is used and a new process will be launched when libvirt is asked
to wake up the domain. As a result of this, any runtime changes, such as
device hotplug or memory settings, are lost unless such changes were made
with <em>--config</em> flag.</p>
</div>
<div class="section" id="dompmwakeup">
<h2><a class="toc-backref" href="#id82">dompmwakeup</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">dompmwakeup domain</pre>
<p>Wakeup a domain from pmsuspended state (either suspended by dompmsuspend or
from the guest itself). Injects a wakeup into the guest that is in pmsuspended
state, rather than waiting for the previously requested duration (if any) to
elapse. This operation does not necessarily fail if the domain is running.</p>
</div>
<div class="section" id="domrename">
<h2><a class="toc-backref" href="#id83">domrename</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domrename domain new-name</pre>
<p>Rename a domain. This command changes current domain name to the new name
specified in the second argument.</p>
<p><span class="docutils literal">Note</span>: Domain must be inactive.</p>
</div>
<div class="section" id="domstate">
<h2><a class="toc-backref" href="#id84">domstate</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domstate domain [--reason]</pre>
<p>Returns state about a domain.  <em>--reason</em> tells virsh to also print
reason for the state.</p>
</div>
<div class="section" id="domstats">
<h2><a class="toc-backref" href="#id85">domstats</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domstats [--raw] [--enforce] [--backing] [--nowait] [--state]
   [--cpu-total] [--balloon] [--vcpu] [--interface]
   [--block] [--perf] [--iothread] [--memory] [--dirtyrate]
   [[--list-active] [--list-inactive]
    [--list-persistent] [--list-transient] [--list-running]y
    [--list-paused] [--list-shutoff] [--list-other]] | [domain ...]</pre>
<p>Get statistics for multiple or all domains. Without any argument this
command prints all available statistics for all domains.</p>
<p>The list of domains to gather stats for can be either limited by listing
the domains as a space separated list, or by specifying one of the
filtering flags <em>--list-NNN</em>. (The approaches can't be combined.)</p>
<p>By default some of the returned fields may be converted to more
human friendly values by a set of pretty-printers. To suppress this
behavior use the <em>--raw</em> flag.</p>
<p>The individual statistics groups are selectable via specific flags. By
default all supported statistics groups are returned. Supported
statistics groups flags are: <em>--state</em>, <em>--cpu-total</em>, <em>--balloon</em>,
<em>--vcpu</em>, <em>--interface</em>, <em>--block</em>, <em>--perf</em>, <em>--iothread</em>, <em>--memory</em>,
<em>--dirtyrate</em>.</p>
<p>Note that - depending on the hypervisor type and version or the domain state
- not all of the following statistics may be returned.</p>
<p>When selecting the <em>--state</em> group the following fields are returned:</p>
<ul class="simple">
<li><p><span class="docutils literal">state.state</span> - state of the VM, returned as number from
virDomainState enum</p></li>
<li><p><span class="docutils literal">state.reason</span> - reason for entering given state, returned
as int from virDomain*Reason enum corresponding
to given state</p></li>
</ul>
<p><em>--cpu-total</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">cpu.time</span> - total cpu time spent for this domain in nanoseconds</p></li>
<li><p><span class="docutils literal">cpu.user</span> - user cpu time spent in nanoseconds</p></li>
<li><p><span class="docutils literal">cpu.system</span> - system cpu time spent in nanoseconds</p></li>
<li><p><span class="docutils literal">cpu.haltpoll.success.time</span> - cpu halt polling success time spent in
nanoseconds</p></li>
<li><p><span class="docutils literal">cpu.haltpoll.fail.time</span> - cpu halt polling fail time spent in
nanoseconds</p></li>
<li><p><span class="docutils literal">cpu.cache.monitor.count</span> - the number of cache monitors for this
domain</p></li>
<li><p><span class="docutils literal"><span class="pre">cpu.cache.monitor.&lt;num&gt;.name</span></span> - the name of cache monitor &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">cpu.cache.monitor.&lt;num&gt;.vcpus</span></span> - vcpu list of cache monitor &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">cpu.cache.monitor.&lt;num&gt;.bank.count</span></span> - the number of cache banks
in cache monitor &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">cpu.cache.monitor.&lt;num&gt;.bank.&lt;index&gt;.id</span></span> - host allocated cache id
for bank &lt;index&gt; in cache monitor &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">cpu.cache.monitor.&lt;num&gt;.bank.&lt;index&gt;.bytes</span></span> - the number of bytes
of last level cache that the domain is using on cache bank &lt;index&gt;</p></li>
</ul>
<p><em>--balloon</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">balloon.current</span> - the memory in KiB currently used</p></li>
<li><p><span class="docutils literal">balloon.maximum</span> - the maximum memory in KiB allowed</p></li>
<li><p><span class="docutils literal">balloon.swap_in</span> - the amount of data read from swap space (in KiB)</p></li>
<li><p><span class="docutils literal">balloon.swap_out</span> - the amount of memory written out to swap
space (in KiB)</p></li>
<li><p><span class="docutils literal">balloon.major_fault</span> - the number of page faults when disk IO
was required</p></li>
<li><p><span class="docutils literal">balloon.minor_fault</span> - the number of other page faults</p></li>
<li><p><span class="docutils literal">balloon.unused</span> - the amount of memory left unused by the
system (in KiB)</p></li>
<li><p><span class="docutils literal">balloon.available</span> - the amount of usable memory as seen by
the domain (in KiB)</p></li>
<li><p><span class="docutils literal">balloon.rss</span> - Resident Set Size of running domain's process
(in KiB)</p></li>
<li><p><span class="docutils literal">balloon.usable</span> - the amount of memory which can be reclaimed by
balloon without causing host swapping (in KiB)</p></li>
<li><p><span class="docutils literal"><span class="pre">balloon.last-update</span></span> - timestamp of the last update of statistics
(in seconds)</p></li>
<li><p><span class="docutils literal">balloon.disk_caches</span> - the amount of memory that can be reclaimed
without additional I/O, typically disk (in KiB)</p></li>
<li><p><span class="docutils literal">balloon.hugetlb_pgalloc</span> - the number of successful huge page allocations
from inside the domain via virtio balloon</p></li>
<li><p><span class="docutils literal">balloon.hugetlb_pgfail</span> - the number of failed huge page allocations
from inside the domain via virtio balloon</p></li>
</ul>
<p><em>--vcpu</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">vcpu.current</span> - current number of online virtual CPUs</p></li>
<li><p><span class="docutils literal">vcpu.maximum</span> - maximum number of online virtual CPUs</p></li>
<li><p><span class="docutils literal"><span class="pre">vcpu.&lt;num&gt;.state</span></span> - state of the virtual CPU &lt;num&gt;, as
number from virVcpuState enum</p></li>
<li><p><span class="docutils literal"><span class="pre">vcpu.&lt;num&gt;.time</span></span> - virtual cpu time spent by virtual
CPU &lt;num&gt; (in microseconds)</p></li>
<li><p><span class="docutils literal"><span class="pre">vcpu.&lt;num&gt;.wait</span></span> - virtual cpu time spent by virtual
CPU &lt;num&gt; waiting on I/O (in microseconds)</p></li>
<li><p><span class="docutils literal"><span class="pre">vcpu.&lt;num&gt;.halted</span></span> - virtual CPU &lt;num&gt; is halted: yes or
no (may indicate the processor is idle or even disabled,
depending on the architecture)</p></li>
<li><p><span class="docutils literal"><span class="pre">vcpu.&lt;num&gt;.delay</span></span> - time the vCPU &lt;num&gt; thread was enqueued by the
host scheduler, but was waiting in the queue instead of running.
Exposed to the VM as a steal time.</p></li>
</ul>
<p><em>--interface</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">net.count</span> - number of network interfaces on this domain</p></li>
<li><p><span class="docutils literal"><span class="pre">net.&lt;num&gt;.name</span></span> - name of the interface &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">net.&lt;num&gt;.rx.bytes</span></span> - number of bytes received</p></li>
<li><p><span class="docutils literal"><span class="pre">net.&lt;num&gt;.rx.pkts</span></span> - number of packets received</p></li>
<li><p><span class="docutils literal"><span class="pre">net.&lt;num&gt;.rx.errs</span></span> - number of receive errors</p></li>
<li><p><span class="docutils literal"><span class="pre">net.&lt;num&gt;.rx.drop</span></span> - number of receive packets dropped</p></li>
<li><p><span class="docutils literal"><span class="pre">net.&lt;num&gt;.tx.bytes</span></span> - number of bytes transmitted</p></li>
<li><p><span class="docutils literal"><span class="pre">net.&lt;num&gt;.tx.pkts</span></span> - number of packets transmitted</p></li>
<li><p><span class="docutils literal"><span class="pre">net.&lt;num&gt;.tx.errs</span></span> - number of transmission errors</p></li>
<li><p><span class="docutils literal"><span class="pre">net.&lt;num&gt;.tx.drop</span></span> - number of transmit packets dropped</p></li>
</ul>
<p><em>--perf</em> returns the statistics of all enabled perf events:</p>
<ul class="simple">
<li><p><span class="docutils literal">perf.cmt</span> - the cache usage in Byte currently used</p></li>
<li><p><span class="docutils literal">perf.mbmt</span> - total system bandwidth from one level of cache</p></li>
<li><p><span class="docutils literal">perf.mbml</span> - bandwidth of memory traffic for a memory controller</p></li>
<li><p><span class="docutils literal">perf.cpu_cycles</span> - the count of cpu cycles (total/elapsed)</p></li>
<li><p><span class="docutils literal">perf.instructions</span> - the count of instructions</p></li>
<li><p><span class="docutils literal">perf.cache_references</span> - the count of cache hits</p></li>
<li><p><span class="docutils literal">perf.cache_misses</span> - the count of caches misses</p></li>
<li><p><span class="docutils literal">perf.branch_instructions</span> - the count of branch instructions</p></li>
<li><p><span class="docutils literal">perf.branch_misses</span> - the count of branch misses</p></li>
<li><p><span class="docutils literal">perf.bus_cycles</span> - the count of bus cycles</p></li>
<li><p><span class="docutils literal">perf.stalled_cycles_frontend</span> - the count of stalled frontend
cpu cycles</p></li>
<li><p><span class="docutils literal">perf.stalled_cycles_backend</span> - the count of stalled backend
cpu cycles</p></li>
<li><p><span class="docutils literal">perf.ref_cpu_cycles</span> - the count of ref cpu cycles</p></li>
<li><p><span class="docutils literal">perf.cpu_clock</span> - the count of cpu clock time</p></li>
<li><p><span class="docutils literal">perf.task_clock</span> - the count of task clock time</p></li>
<li><p><span class="docutils literal">perf.page_faults</span> - the count of page faults</p></li>
<li><p><span class="docutils literal">perf.context_switches</span> - the count of context switches</p></li>
<li><p><span class="docutils literal">perf.cpu_migrations</span> - the count of cpu migrations</p></li>
<li><p><span class="docutils literal">perf.page_faults_min</span> - the count of minor page faults</p></li>
<li><p><span class="docutils literal">perf.page_faults_maj</span> - the count of major page faults</p></li>
<li><p><span class="docutils literal">perf.alignment_faults</span> - the count of alignment faults</p></li>
<li><p><span class="docutils literal">perf.emulation_faults</span> - the count of emulation faults</p></li>
</ul>
<p>See the <span class="docutils literal">perf</span> command for more details about each event.</p>
<p><em>--block</em> returns information about disks associated with each
domain.  Using the <em>--backing</em> flag extends this information to
cover all resources in the backing chain, rather than the default
of limiting information to the active layer for each guest disk.
Information listed includes:</p>
<ul class="simple">
<li><p><span class="docutils literal">block.count</span> - number of block devices being listed</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.name</span></span> - name of the target of the block
device &lt;num&gt; (the same name for multiple entries if <em>--backing</em>
is present)</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.backingIndex</span></span> - when <em>--backing</em> is present,
matches up with the &lt;backingStore&gt; index listed in domain XML for
backing files</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.path</span></span> - file source of block device &lt;num&gt;, if
it is a local file or block device</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.rd.reqs</span></span> - number of read requests</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.rd.bytes</span></span> - number of read bytes</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.rd.times</span></span> - total time (ns) spent on reads</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.wr.reqs</span></span> - number of write requests</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.wr.bytes</span></span> - number of written bytes</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.wr.times</span></span> - total time (ns) spent on writes</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.fl.reqs</span></span> - total flush requests</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.fl.times</span></span> - total time (ns) spent on cache flushing</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.errors</span></span> - Xen only: the 'oo_req' value</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.allocation</span></span> - offset of highest written sector in bytes</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.capacity</span></span> - logical size of source file in bytes</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.physical</span></span> - physical size of source file in bytes</p></li>
<li><p><span class="docutils literal"><span class="pre">block.&lt;num&gt;.threshold</span></span> - threshold (in bytes) for delivering the
VIR_DOMAIN_EVENT_ID_BLOCK_THRESHOLD event. See domblkthreshold.</p></li>
</ul>
<p><em>--iothread</em> returns information about IOThreads on the running guest
if supported by the hypervisor.</p>
<p>The &quot;poll-max-ns&quot; for each thread is the maximum nanoseconds to allow
each polling interval to occur. A polling interval is a period of time
allowed for a thread to process data before being the guest gives up
its CPU quantum back to the host. A value set too small will not allow
the IOThread to run long enough on a CPU to process data. A value set
too high will consume too much CPU time per IOThread failing to allow
other threads running on the CPU to get time. The polling interval is
not available for statistical purposes.</p>
<ul class="simple">
<li><dl class="simple">
<dt><span class="docutils literal">iothread.count</span> - maximum number of IOThreads in the subsequent list</dt>
<dd><p>as unsigned int. Each IOThread in the list will
will use it's iothread_id value as the &lt;id&gt;. There
may be fewer &lt;id&gt; entries than the iothread.count
value if the polling values are not supported.</p>
</dd>
</dl>
</li>
<li><p><span class="docutils literal"><span class="pre">iothread.&lt;id&gt;.poll-max-ns</span></span> - maximum polling time in nanoseconds used
by the &lt;id&gt; IOThread. A value of 0 (zero) indicates polling is disabled.</p></li>
<li><p><span class="docutils literal"><span class="pre">iothread.&lt;id&gt;.poll-grow</span></span> - polling time grow value. A value of 0 (zero)
growth is managed by the hypervisor.</p></li>
<li><p><span class="docutils literal"><span class="pre">iothread.&lt;id&gt;.poll-shrink</span></span> - polling time shrink value. A value of
(zero) indicates shrink is managed by hypervisor.</p></li>
</ul>
<p><em>--memory</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">memory.bandwidth.monitor.count</span> - the number of memory bandwidth
monitors for this domain</p></li>
<li><p><span class="docutils literal"><span class="pre">memory.bandwidth.monitor.&lt;num&gt;.name</span></span>  - the name of monitor &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">memory.bandwidth.monitor.&lt;num&gt;.vcpus</span></span> - the vcpu list of monitor &lt;num&gt;</p></li>
<li><dl class="simple">
<dt><span class="docutils literal"><span class="pre">memory.bandwidth.monitor.&lt;num&gt;.node.count</span></span> - the number of memory</dt>
<dd><p>controller in monitor &lt;num&gt;</p>
</dd>
</dl>
</li>
<li><p><span class="docutils literal"><span class="pre">memory.bandwidth.monitor.&lt;num&gt;.node.&lt;index&gt;.id</span></span> - host allocated memory
controller id for controller &lt;index&gt; of monitor &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">memory.bandwidth.monitor.&lt;num&gt;.node.&lt;index&gt;.bytes.local</span></span> - the accumulative
bytes consumed by &#64;vcpus that passing through the memory controller in the
same processor that the scheduled host CPU belongs to.</p></li>
<li><p><span class="docutils literal"><span class="pre">memory.bandwidth.monitor.&lt;num&gt;.node.&lt;index&gt;.bytes.total</span></span> - the total
bytes consumed by &#64;vcpus that passing through all memory controllers, either
local or remote controller.</p></li>
</ul>
<p><em>--dirtyrate</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">dirtyrate.calc_status</span> - the status of last memory dirty rate
calculation, returned as number from virDomainDirtyRateStatus enum.</p></li>
<li><p><span class="docutils literal">dirtyrate.calc_start_time</span> - the start time of last memory dirty
rate calculation.</p></li>
<li><p><span class="docutils literal">dirtyrate.calc_period</span> - the period of last memory dirty rate
calculation.</p></li>
<li><p><span class="docutils literal">dirtyrate.megabytes_per_second</span> - the calculated memory dirty
rate in MiB/s.</p></li>
<li><p><span class="docutils literal">dirtyrate.calc_mode</span> - the calculation mode used last measurement
(<span class="docutils literal"><span class="pre">page-sampling</span></span>/<span class="docutils literal"><span class="pre">dirty-bitmap</span></span>/<span class="docutils literal"><span class="pre">dirty-ring</span></span>)</p></li>
<li><p><span class="docutils literal"><span class="pre">dirtyrate.vcpu.&lt;num&gt;.megabytes_per_second</span></span> - the calculated memory dirty
rate for a virtual cpu in MiB/s</p></li>
</ul>
<p>Selecting a specific statistics groups doesn't guarantee that the
daemon supports the selected group of stats. Flag <em>--enforce</em>
forces the command to fail if the daemon doesn't support the
selected group.</p>
<p>When collecting stats libvirtd may wait for some time if there's
already another job running on given domain for it to finish.
This may cause unnecessary delay in delivering stats. Using
<em>--nowait</em> suppresses this behaviour. On the other hand
some statistics might be missing for such domain.</p>
</div>
<div class="section" id="domtime">
<h2><a class="toc-backref" href="#id86">domtime</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domtime domain { [--now] [--pretty] [--sync] [--time time] }</pre>
<p>Gets or sets the domain's system time. When run without any arguments
(but <em>domain</em>), the current domain's system time is printed out. The
<em>--pretty</em> modifier can be used to print the time in more human
readable form.</p>
<p>When <em>--time</em> <span class="docutils literal">time</span> is specified, the domain's time is
not gotten but set instead. The <em>--now</em> modifier acts like if it was
an alias for <em>--time</em> <span class="docutils literal">$now</span>, which means it sets the time that is
currently on the host virsh is running at. In both cases (setting and
getting), time is in seconds relative to Epoch of 1970-01-01 in UTC.
The <em>--sync</em> modifies the set behavior a bit: The time passed is
ignored, but the time to set is read from domain's RTC instead. Please
note, that some hypervisors may require a guest agent to be configured
in order to get or set the guest time.</p>
</div>
<div class="section" id="domuuid">
<h2><a class="toc-backref" href="#id87">domuuid</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domuuid domain-name-or-id</pre>
<p>Convert a domain name or id to domain UUID</p>
</div>
<div class="section" id="domxml-from-native">
<h2><a class="toc-backref" href="#id88">domxml-from-native</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domxml-from-native format config</pre>
<p>Convert the file <em>config</em> in the native guest configuration format
named by <em>format</em> to a domain XML format. For QEMU/KVM hypervisor,
the <em>format</em> argument must be <span class="docutils literal"><span class="pre">qemu-argv</span></span>. For Xen hypervisor, the
<em>format</em> argument may be <span class="docutils literal"><span class="pre">xen-xm</span></span>, <span class="docutils literal"><span class="pre">xen-xl</span></span>, or <span class="docutils literal"><span class="pre">xen-sxpr</span></span>. For
LXC hypervisor, the <em>format</em> argument must be <span class="docutils literal"><span class="pre">lxc-tools</span></span>. For
VMware/ESX hypervisor, the <em>format</em> argument must be <span class="docutils literal"><span class="pre">vmware-vmx</span></span>.
For the Bhyve hypervisor, the <em>format</em> argument must be <span class="docutils literal"><span class="pre">bhyve-argv</span></span>.</p>
</div>
<div class="section" id="domxml-to-native">
<h2><a class="toc-backref" href="#id89">domxml-to-native</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">domxml-to-native format { [--xml] xml | --domain domain-name-or-id-or-uuid }</pre>
<p>Convert the file <em>xml</em> into domain XML format or convert an existing
<em>--domain</em> to the native guest configuration format named by <em>format</em>.
The <em>xml</em> and <em>--domain</em> arguments are mutually exclusive. For the types
of <em>format</em> argument, refer to <span class="docutils literal"><span class="pre">domxml-from-native</span></span>.</p>
</div>
<div class="section" id="dump">
<h2><a class="toc-backref" href="#id90">dump</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">dump domain corefilepath [--bypass-cache]
   { [--live] | [--crash] | [--reset] }
   [--verbose] [--memory-only] [--format string]</pre>
<p>Dumps the core of a domain to a file for analysis.
If <em>--live</em> is specified, the domain continues to run until the core
dump is complete, rather than pausing up front.
If <em>--crash</em> is specified, the domain is halted with a crashed status,
rather than merely left in a paused state.
If <em>--reset</em> is specified, the domain is reset after successful dump.
Note, these three switches are mutually exclusive.
If <em>--bypass-cache</em> is specified, the save will avoid the file system
cache, although this may slow down the operation.
If <em>--memory-only</em> is specified, the file is elf file, and will only
include domain's memory and cpu common register value. It is very
useful if the domain uses host devices directly.
<em>--format</em> <em>string</em> is used to specify the format of 'memory-only'
dump, and <em>string</em> can be one of: elf, kdump-zlib(kdump-compressed
format with zlib-compressed), kdump-lzo(kdump-compressed format with
lzo-compressed), kdump-snappy(kdump-compressed format with snappy-compressed),
win-dmp(Windows full crashdump format).</p>
<p>The progress may be monitored using <span class="docutils literal">domjobinfo</span> virsh command and canceled
with <span class="docutils literal">domjobabort</span> command (sent by another virsh instance). Another option
is to send SIGINT (usually with <span class="docutils literal"><span class="pre">Ctrl-C</span></span>) to the virsh process running
<span class="docutils literal">dump</span> command. <em>--verbose</em> displays the progress of dump.</p>
<p>NOTE: Some hypervisors may require the user to manually ensure proper
permissions on file and path specified by argument <em>corefilepath</em>.</p>
<p>NOTE: Crash dump in a old kvmdump format is being obsolete and cannot be loaded
and processed by crash utility since its version 6.1.0. A --memory-only option
is required in order to produce valid ELF file which can be later processed by
the crash utility.</p>
</div>
<div class="section" id="dumpxml">
<h2><a class="toc-backref" href="#id91">dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">dumpxml [--inactive] [--security-info] [--update-cpu] [--migratable]
        [--xpath EXPRESSION] [--wrap] domain</pre>
<p>Output the domain information as an XML dump to stdout, this format can be used
by the <span class="docutils literal">create</span> command. Additional options affecting the XML dump may be
used. <em>--inactive</em> tells virsh to dump domain configuration that will be used
on next start of the domain as opposed to the current domain configuration.
Using <em>--security-info</em> will also include security sensitive information
in the XML dump. <em>--update-cpu</em> updates domain CPU requirements according to
host CPU. With <em>--migratable</em> one can request an XML that is suitable for
migrations, i.e., compatible with older libvirt releases and possibly amended
with internal run-time options. This option may automatically enable other
options (<em>--update-cpu</em>, <em>--security-info</em>, ...) as necessary.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="edit">
<h2><a class="toc-backref" href="#id92">edit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">edit domain</pre>
<p>Edit the XML configuration file for a domain, which will affect the
next boot of the guest.</p>
<p>This is equivalent to:</p>
<pre class="literal-block">virsh dumpxml --inactive --security-info domain &gt; domain.xml
vi domain.xml (or make changes with your other text editor)
virsh define domain.xml</pre>
<p>except that it does some error checking.</p>
<p>The editor used can be supplied by the <span class="docutils literal">$VISUAL</span> or <span class="docutils literal">$EDITOR</span> environment
variables, and defaults to <span class="docutils literal">vi</span>.</p>
</div>
<div class="section" id="emulatorpin">
<h2><a class="toc-backref" href="#id93">emulatorpin</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">emulatorpin domain [cpulist] [[--live] [--config]  | [--current]]</pre>
<p>Query or change the pinning of domain's emulator threads to host physical
CPUs.</p>
<p>See <span class="docutils literal">vcpupin</span> for <em>cpulist</em>.</p>
<p>If <em>--live</em> is specified, affect a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given if <em>cpulist</em> is present,
but <em>--current</em> is exclusive.
If no flag is specified, behavior is different depending on hypervisor.</p>
</div>
<div class="section" id="event">
<h2><a class="toc-backref" href="#id94">event</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">event {[domain] { event | --all } [--loop] [--timeout seconds] [--timestamp] | --list}</pre>
<p>Wait for a class of domain events to occur, and print appropriate details
of events as they happen.  The events can optionally be filtered by
<em>domain</em>.  Using <em>--list</em> as the only argument will provide a list
of possible <em>event</em> values known by this client, although the connection
might not allow registering for all these events.  It is also possible
to use <em>--all</em> instead of <em>event</em> to register for all possible event
types at once.</p>
<p>By default, this command is one-shot, and returns success once an event
occurs; you can send SIGINT (usually via <span class="docutils literal"><span class="pre">Ctrl-C</span></span>) to quit immediately.
If <em>--timeout</em> is specified, the command gives up waiting for events
after <em>seconds</em> have elapsed.   With <em>--loop</em>, the command prints all
events until a timeout or interrupt key.</p>
<p>When <em>--timestamp</em> is used, a human-readable timestamp will be printed
before the event.</p>
</div>
<div class="section" id="get-user-sshkeys">
<h2><a class="toc-backref" href="#id95">get-user-sshkeys</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">get-user-sshkeys domain user</pre>
<p>Print SSH authorized keys for given <em>user</em> in the guest <em>domain</em>. Please note,
that an entry in the file has internal structure as defined by <em>sshd(8)</em> and
virsh/libvirt does handle keys as opaque strings, i.e. does not interpret
them.</p>
</div>
<div class="section" id="guest-agent-timeout">
<h2><a class="toc-backref" href="#id96">guest-agent-timeout</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">guest-agent-timeout domain [--timeout value]</pre>
<p>Set how long to wait for a response from guest agent commands. By default,
agent commands block forever waiting for a response. <span class="docutils literal">value</span> must be a
positive value (wait for given amount of seconds) or one of the following
values:</p>
<ul class="simple">
<li><p>-2 - block forever waiting for a result (used when --timeout is omitted),</p></li>
<li><p>-1 - reset timeout to the default value (currently defined as 5 seconds in
libvirt daemon),</p></li>
<li><p>0 - do not wait at all,</p></li>
</ul>
</div>
<div class="section" id="guestinfo">
<h2><a class="toc-backref" href="#id97">guestinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">guestinfo domain [--user] [--os] [--timezone] [--hostname] [--filesystem]
   [--disk] [--interface]</pre>
<p>Print information about the guest from the point of view of the guest agent.
Note that this command requires a guest agent to be configured and running in
the domain's guest OS.</p>
<p>When run without any arguments, this command prints all information types that
are supported by the guest agent at that point, omitting unavailable ones.
Success is always reported in this case.</p>
<p>You can limit the types of information that are returned by specifying one or
more flags.  Available information types flags are <em>--user</em>, <em>--os</em>,
<em>--timezone</em>, <em>--hostname</em>, <em>--filesystem</em>, <em>--disk</em> and <em>--interface</em>.
If an explicitly requested information type is not supported by the guest agent
at that point, the processes will provide an exit code of 1.</p>
<p>Note that depending on the hypervisor type and the version of the guest agent
running within the domain, not all of the following information may be
returned.</p>
<p>When selecting the <em>--user</em> information type, the following fields may be
returned:</p>
<ul class="simple">
<li><p><span class="docutils literal">user.count</span> - the number of active users on this domain</p></li>
<li><p><span class="docutils literal"><span class="pre">user.&lt;num&gt;.name</span></span> - username of user &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">user.&lt;num&gt;.domain</span></span> - domain of the user &lt;num&gt; (may only be present on certain
guets types)</p></li>
<li><p><span class="docutils literal"><span class="pre">user.&lt;num&gt;.login-time</span></span> - the login time of user &lt;num&gt; in milliseconds since
the epoch</p></li>
</ul>
<p><em>--os</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">os.id</span> - a string identifying the operating system</p></li>
<li><p><span class="docutils literal">os.name</span> - the name of the operating system</p></li>
<li><p><span class="docutils literal"><span class="pre">os.pretty-name</span></span> - a pretty name for the operating system</p></li>
<li><p><span class="docutils literal">os.version</span> - the version of the operating system</p></li>
<li><p><span class="docutils literal"><span class="pre">os.version-id</span></span> - the version id of the operating system</p></li>
<li><p><span class="docutils literal"><span class="pre">os.kernel-release</span></span> - the release of the operating system kernel</p></li>
<li><p><span class="docutils literal"><span class="pre">os.kernel-version</span></span> - the version of the operating system kernel</p></li>
<li><p><span class="docutils literal">os.machine</span> - the machine hardware name</p></li>
<li><p><span class="docutils literal">os.variant</span> - a specific variant or edition of the operating system</p></li>
<li><p><span class="docutils literal"><span class="pre">os.variant-id</span></span> - the id for a specific variant or edition of the operating
system</p></li>
</ul>
<p><em>--timezone</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">timezone.name</span> - the name of the timezone</p></li>
<li><p><span class="docutils literal">timezone.offset</span> - the offset to UTC in seconds</p></li>
</ul>
<p><em>--hostname</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">hostname</span> - the hostname of the domain</p></li>
</ul>
<p><em>--filesystem</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">fs.count</span> - the number of filesystems defined on this domain</p></li>
<li><p><span class="docutils literal"><span class="pre">fs.&lt;num&gt;.mountpoint</span></span> - the path to the mount point for filesystem &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">fs.&lt;num&gt;.name</span></span> - device name in the guest (e.g. <span class="docutils literal">sda1</span>) for filesystem &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">fs.&lt;num&gt;.fstype</span></span> - the type of filesystem &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">fs.&lt;num&gt;.total-bytes</span></span> - the total size of filesystem &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">fs.&lt;num&gt;.used-bytes</span></span> - the number of bytes used in filesystem &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">fs.&lt;num&gt;.disk.count</span></span> - the number of disks targeted by filesystem &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">fs.&lt;num&gt;.disk.&lt;num&gt;.alias</span></span> - the device alias of disk &lt;num&gt; (e.g. sda)</p></li>
<li><p><span class="docutils literal"><span class="pre">fs.&lt;num&gt;.disk.&lt;num&gt;.serial</span></span> - the serial number of disk &lt;num&gt;</p></li>
<li><p><span class="docutils literal"><span class="pre">fs.&lt;num&gt;.disk.&lt;num&gt;.device</span></span> - the device node of disk &lt;num&gt;</p></li>
</ul>
<p><em>--disk</em> returns:</p>
<ul class="simple">
<li><p><span class="docutils literal">disk.count</span> - the number of disks defined on this domain</p></li>
<li><p><span class="docutils literal"><span class="pre">disk.&lt;num&gt;.name</span></span> - device node (Linux) or device UNC (Windows)</p></li>
<li><p><span class="docutils literal"><span class="pre">disk.&lt;num&gt;.partition</span></span> - whether this is a partition or disk</p></li>
<li><p><span class="docutils literal"><span class="pre">disk.&lt;num&gt;.dependency.count</span></span> - the number of device dependencies</p></li>
<li><p><span class="docutils literal"><span class="pre">disk.&lt;num&gt;.dependency.&lt;num&gt;.name</span></span> - a dependency name</p></li>
<li><p><span class="docutils literal"><span class="pre">disk.&lt;num&gt;.serial</span></span> -  optional disk serial number</p></li>
<li><p><span class="docutils literal"><span class="pre">disk.&lt;num&gt;.alias</span></span> - the device alias of the disk (e.g. sda)</p></li>
<li><p><span class="docutils literal"><span class="pre">disk.&lt;num&gt;.guest_alias</span></span> - optional alias assigned to the disk</p></li>
</ul>
<p><em>--interface</em> returns:
* <span class="docutils literal">if.count</span> - the number of interfaces defined on this domain
* <span class="docutils literal"><span class="pre">if.&lt;num&gt;.name</span></span> - name in the guest (e.g. <span class="docutils literal">eth0</span>) for interface &lt;num&gt;
* <span class="docutils literal"><span class="pre">if.&lt;num&gt;.hwaddr</span></span> - hardware address in the guest for interface &lt;num&gt;
* <span class="docutils literal"><span class="pre">if.&lt;num&gt;.addr.count</span></span> - the number of IP addresses of interface &lt;num&gt;
* <span class="docutils literal"><span class="pre">if.&lt;num&gt;.addr.&lt;num1&gt;.type</span></span> - the IP address type of addr &lt;num1&gt; (e.g. ipv4)
* <span class="docutils literal"><span class="pre">if.&lt;num&gt;.addr.&lt;num1&gt;.addr</span></span> - the IP address of addr &lt;num1&gt;
* <span class="docutils literal"><span class="pre">if.&lt;num&gt;.addr.&lt;num1&gt;.prefix</span></span> - the prefix of IP address of addr &lt;num1&gt;</p>
</div>
<div class="section" id="guestvcpus">
<h2><a class="toc-backref" href="#id98">guestvcpus</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">guestvcpus domain [[--enable] | [--disable]] [cpulist]</pre>
<p>Query or change state of vCPUs from guest's point of view using the guest agent.
When invoked without <em>cpulist</em> the guest is queried for available guest vCPUs,
their state and possibility to be offlined.</p>
<p>If <em>cpulist</em> is provided then one of <em>--enable</em> or <em>--disable</em> must be
provided too. The desired operation is then executed on the domain.</p>
<p>See <span class="docutils literal">vcpupin</span> for information on <em>cpulist</em>.</p>
</div>
<div class="section" id="iothreadadd">
<h2><a class="toc-backref" href="#id99">iothreadadd</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iothreadadd domain iothread_id [[--config] [--live] | [--current]]</pre>
<p>Add a new IOThread to the domain using the specified <em>iothread_id</em>.
If the <em>iothread_id</em> already exists, the command will fail. The
<em>iothread_id</em> must be greater than zero.</p>
<p>If <em>--live</em> is specified, affect a running guest. If the guest is not
running an error is returned.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.</p>
</div>
<div class="section" id="iothreaddel">
<h2><a class="toc-backref" href="#id100">iothreaddel</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iothreaddel domain iothread_id [[--config] [--live] | [--current]]</pre>
<p>Delete an IOThread from the domain using the specified <em>iothread_id</em>.
If an IOThread is currently assigned to a disk resource such as via the
<span class="docutils literal"><span class="pre">attach-disk</span></span> command, then the attempt to remove the IOThread will fail.
If the <em>iothread_id</em> does not exist an error will occur.</p>
<p>If <em>--live</em> is specified, affect a running guest. If the guest is not
running an error is returned.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.</p>
</div>
<div class="section" id="iothreadinfo">
<h2><a class="toc-backref" href="#id101">iothreadinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iothreadinfo domain [[--live] [--config] | [--current]]</pre>
<p>Display basic domain IOThreads information including the IOThread ID and
the CPU Affinity for each IOThread.</p>
<p>If <em>--live</em> is specified, get the IOThreads data from the running guest. If
the guest is not running, an error is returned.
If <em>--config</em> is specified, get the IOThreads data from the next start of
a persistent guest.
If <em>--current</em> is specified or <em>--live</em> and <em>--config</em> are not specified,
then get the IOThread data based on the current guest state, which can
either be live or offline.</p>
</div>
<div class="section" id="iothreadpin">
<h2><a class="toc-backref" href="#id102">iothreadpin</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iothreadpin domain iothread cpulist [[--live] [--config] | [--current]]</pre>
<p>Change the pinning of a domain IOThread to host physical CPUs. In order
to retrieve a list of all IOThreads, use <span class="docutils literal">iothreadinfo</span>. To pin an
<em>iothread</em> specify the <em>cpulist</em> desired for the IOThread ID as listed
in the <span class="docutils literal">iothreadinfo</span> output.</p>
<p><em>cpulist</em> is a list of physical CPU numbers. Its syntax is a comma
separated list and a special markup using '-' and '^' (ex. '0-4', '0-3,^2') can
also be allowed. The '-' denotes the range and the '^' denotes exclusive.
If you want to reset iothreadpin setting, that is, to pin an <em>iothread</em>
to all physical cpus, simply specify 'r' as a <em>cpulist</em>.</p>
<p>If <em>--live</em> is specified, affect a running guest. If the guest is not running,
an error is returned.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given if <em>cpulist</em> is present,
but <em>--current</em> is exclusive.
If no flag is specified, behavior is different depending on hypervisor.</p>
<p><span class="docutils literal">Note</span>: The expression is sequentially evaluated, so &quot;0-15,^8&quot; is
identical to &quot;9-14,0-7,15&quot; but not identical to &quot;^8,0-15&quot;.</p>
</div>
<div class="section" id="iothreadset">
<h2><a class="toc-backref" href="#id103">iothreadset</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iothreadset domain iothread_id [[--poll-max-ns ns] [--poll-grow factor]
   [--poll-shrink divisor] [--thread-pool-min value]
   [--thread-pool-max value]]
   [[--config] [--live] | [--current]]</pre>
<p>Modifies an existing iothread of the domain using the specified
<em>iothread_id</em>. The <em>--poll-max-ns</em> provides the maximum polling
interval to be allowed for an IOThread in ns. If a 0 (zero) is provided,
then polling for the IOThread is disabled.  The <em>--poll-grow</em> is the
factor by which the current polling time will be adjusted in order to
reach the maximum polling time. If a 0 (zero) is provided, then the
default factor will be used. The <em>--poll-shrink</em> is the quotient
by which the current polling time will be reduced in order to get
below the maximum polling interval. If a 0 (zero) is provided, then
the default quotient will be used. The polling values are purely dynamic
for a running guest. Saving, destroying, stopping, etc. the guest will
result in the polling values returning to hypervisor defaults at the
next start, restore, etc.</p>
<p>The <em>--thread-pool-min</em> and <em>--thread-pool-max</em> options then set lower and
upper bound, respectively of number of threads in worker pool of given
iothread. For changes to an inactive configuration -1 can be specified to
remove corresponding boundary from the domain configuration. For changes to a
running guest it's recommended to set the upper boundary first
(<em>--thread-pool-max</em>) and only after that set the lower boundary
(<em>--thread-pool-min</em>). It is allowed for the lower boundary to be the same as
the upper boundary, however it's not allowed for the upper boundary to be value
of zero.</p>
<p>If <em>--live</em> is specified, affect a running guest. If the guest is not
running an error is returned.
If <em>--current</em> is specified or <em>--live</em> is not specified, then handle
as if <em>--live</em> was specified.  (Where &quot;current&quot; here means whatever the
present guest state is: live or offline.)</p>
</div>
<div class="section" id="managedsave">
<h2><a class="toc-backref" href="#id104">managedsave</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">managedsave domain [--bypass-cache] [{--running | --paused}] [--verbose]</pre>
<p>Save and destroy (stop) a running domain, so it can be restarted from the same
state at a later time.  When the virsh <span class="docutils literal">start</span> command is next run for
the domain, it will automatically be started from this saved state.
If <em>--bypass-cache</em> is specified, the save will avoid the file system
cache, although this may slow down the operation.</p>
<p>The progress may be monitored using <span class="docutils literal">domjobinfo</span> virsh command and canceled
with <span class="docutils literal">domjobabort</span> command (sent by another virsh instance). Another option
is to send SIGINT (usually with <span class="docutils literal"><span class="pre">Ctrl-C</span></span>) to the virsh process running
<span class="docutils literal">managedsave</span> command. <em>--verbose</em> displays the progress of save.</p>
<p>Normally, starting a managed save will decide between running or paused
based on the state the domain was in when the save was done; passing
either the <em>--running</em> or <em>--paused</em> flag will allow overriding which
state the <span class="docutils literal">start</span> should use.</p>
<p>The <span class="docutils literal">dominfo</span> command can be used to query whether a domain currently
has any managed save image.</p>
</div>
<div class="section" id="managedsave-define">
<h2><a class="toc-backref" href="#id105">managedsave-define</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">managedsave-define domain xml [{--running | --paused}]</pre>
<p>Update the domain XML that will be used when <em>domain</em> is later
started. The <em>xml</em> argument must be a file name containing
the alternative XML, with changes only in the host-specific portions of
the domain XML. For example, it can be used to change disk file paths.</p>
<p>The managed save image records whether the domain should be started to a
running or paused state.  Normally, this command does not alter the
recorded state; passing either the <em>--running</em> or <em>--paused</em> flag
will allow overriding which state the <span class="docutils literal">start</span> should use.</p>
</div>
<div class="section" id="managedsave-dumpxml">
<h2><a class="toc-backref" href="#id106">managedsave-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">managedsave-dumpxml [--security-info] [--xpath EXPRESSION] [--wrap] domain</pre>
<p>Extract the domain XML that was in effect at the time the saved state
file <em>file</em> was created with the <span class="docutils literal">managedsave</span> command.  Using
<em>--security-info</em> will also include security sensitive information.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="managedsave-edit">
<h2><a class="toc-backref" href="#id107">managedsave-edit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">managedsave-edit domain [{--running | --paused}]</pre>
<p>Edit the XML configuration associated with a saved state file of a
<em>domain</em> was created by the <span class="docutils literal">managedsave</span> command.</p>
<p>The managed save image records whether the domain should be started to a
running or paused state.  Normally, this command does not alter the
recorded state; passing either the <em>--running</em> or <em>--paused</em> flag
will allow overriding which state the <span class="docutils literal">restore</span> should use.</p>
<p>This is equivalent to:</p>
<pre class="literal-block">virsh managedsave-dumpxml domain-name &gt; state-file.xml
vi state-file.xml (or make changes with your other text editor)
virsh managedsave-define domain-name state-file-xml</pre>
<p>except that it does some error checking.</p>
<p>The editor used can be supplied by the <span class="docutils literal">$VISUAL</span> or <span class="docutils literal">$EDITOR</span> environment
variables, and defaults to <span class="docutils literal">vi</span>.</p>
</div>
<div class="section" id="managedsave-remove">
<h2><a class="toc-backref" href="#id108">managedsave-remove</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">managedsave-remove domain</pre>
<p>Remove the <span class="docutils literal">managedsave</span> state file for a domain, if it exists.  This
ensures the domain will do a full boot the next time it is started.</p>
</div>
<div class="section" id="maxvcpus">
<h2><a class="toc-backref" href="#id109">maxvcpus</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">maxvcpus [type]</pre>
<p>Provide the maximum number of virtual CPUs supported for a guest VM on
this connection.  If provided, the <em>type</em> parameter must be a valid
type attribute for the &lt;domain&gt; element of XML.</p>
</div>
<div class="section" id="memtune">
<h2><a class="toc-backref" href="#id110">memtune</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">memtune domain [--hard-limit size] [--soft-limit size] [--swap-hard-limit size]
   [[--min-guarantee size]|[--min-guarantee-auto-vz]|[--min-guranteee-relative-vz]]
   [[--config] [--live] | [--current]]</pre>
<p>Allows you to display or set the domain memory parameters. Without
flags, the current settings are displayed; with a flag, the
appropriate limit is adjusted if supported by the hypervisor.  LXC and
QEMU/KVM support <em>--hard-limit</em>, <em>--soft-limit</em>, and <em>--swap-hard-limit</em>.
<em>--min-guarantee</em> is supported only by ESX hypervisor.  Each of these
limits are scaled integers (see <span class="docutils literal">NOTES</span> above), with a default of
kibibytes (blocks of 1024 bytes) if no suffix is present. Libvirt rounds
up to the nearest kibibyte.  Some hypervisors require a larger granularity
than KiB, and requests that are not an even multiple will be rounded up.
For example, vSphere/ESX rounds the parameter up to mebibytes (1024 kibibytes).</p>
<p>In Virtuozzo Hybrid Server, <em>--min-guarantee</em> is supported by QEMU/KVM.
The minimum memory guarantee can also be set automatically with the
<em>--min-guarantee-auto-vz</em> flag or as some ratio of current memory using
<em>--min-guranteee-relative-vz</em>. These three parameters are mutually exclusive.</p>
<p>If <em>--live</em> is specified, affect a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. If no flag is specified, behavior is different depending
on hypervisor.</p>
<p>For QEMU/KVM, the parameters are applied to the QEMU process as a whole.
Thus, when counting them, one needs to add up guest RAM, guest video RAM, and
some memory overhead of QEMU itself.  The last piece is hard to determine so
one needs guess and try.</p>
<p>For LXC, the displayed hard_limit value is the current memory setting
from the XML or the results from a <span class="docutils literal">virsh setmem</span> command.</p>
<ul>
<li><p><em>--hard-limit</em></p>
<p>The maximum memory the guest can use.</p>
</li>
<li><p><em>--soft-limit</em></p>
<p>The memory limit to enforce during memory contention.</p>
</li>
<li><p><em>--swap-hard-limit</em></p>
<p>The maximum memory plus swap the guest can use.  This has to be more
than hard-limit value provided.</p>
</li>
<li><p><em>--min-guarantee</em></p>
<p>The guaranteed minimum memory allocation for the guest.</p>
</li>
</ul>
<p>Specifying -1 as a value for these limits is interpreted as unlimited.</p>
</div>
<div class="section" id="metadata">
<h2><a class="toc-backref" href="#id111">metadata</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">metadata domain [[--live] [--config] | [--current]]
   [--edit] [uri] [key] [set] [--remove]</pre>
<p>Show or modify custom XML metadata of a domain. The metadata is a user
defined XML that allows storing arbitrary XML data in the domain definition.
Multiple separate custom metadata pieces can be stored in the domain XML.
The pieces are identified by a private XML namespace provided via the
<em>uri</em> argument. (See also <span class="docutils literal">desc</span> that works with textual metadata of
a domain.)</p>
<p>Flags <em>--live</em> or <em>--config</em> select whether this command works on live
or persistent definitions of the domain. If both <em>--live</em> and <em>--config</em>
are specified, the <em>--config</em> option takes precedence on getting the current
description and both live configuration and config are updated while setting
the description. <em>--current</em> is exclusive and implied if none of these was
specified.</p>
<p>Flag <em>--remove</em> specifies that the metadata element specified by the <em>uri</em>
argument should be removed rather than updated.</p>
<p>Flag <em>--edit</em> specifies that an editor with the metadata identified by the
<em>uri</em> argument should be opened and the contents saved back afterwards.
Otherwise the new contents can be provided via the <em>set</em> argument.</p>
<p>When setting metadata via <em>--edit</em> or <em>set</em> the <em>key</em> argument must be
specified and is used to prefix the custom elements to bind them
to the private namespace.</p>
<p>If neither of <em>--edit</em> and <em>set</em> are specified the XML metadata corresponding
to the <em>uri</em> namespace is displayed instead of being modified.</p>
</div>
<div class="section" id="migrate">
<h2><a class="toc-backref" href="#id112">migrate</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">migrate [--live] [--offline] [--direct] [--p2p [--tunnelled]]
   [--persistent] [--undefinesource] [--suspend] [--copy-storage-all]
   [--copy-storage-inc] [--change-protection] [--unsafe] [--verbose]
   [--rdma-pin-all] [--abort-on-error] [--postcopy]
   [--postcopy-after-precopy] [--postcopy-resume] [--zerocopy]
   domain desturi [migrateuri] [graphicsuri] [listen-address] [dname]
   [--timeout seconds [--timeout-suspend | --timeout-postcopy]]
   [--xml file] [--migrate-disks disk-list] [--disks-port port]
   [--compressed] [--comp-methods method-list]
   [--comp-mt-level] [--comp-mt-threads] [--comp-mt-dthreads]
   [--comp-xbzrle-cache] [--auto-converge] [auto-converge-initial]
   [auto-converge-increment] [--persistent-xml file] [--tls]
   [--postcopy-bandwidth bandwidth]
   [--parallel [--parallel-connections connections]]
   [--bandwidth bandwidth] [--tls-destination hostname]
   [--disks-uri URI] [--copy-storage-synchronous-writes]
   [--release-ram] [--postcopy--start]
   [--shared-workaround]</pre>
<p>Migrate domain to another host.  Add <em>--live</em> for live migration; &lt;--p2p&gt;
for peer-2-peer migration; <em>--direct</em> for direct migration; or <em>--tunnelled</em>
for tunnelled migration.  <em>--offline</em> migrates domain definition without
starting the domain on destination and without stopping it on source host.
Offline migration may be used with inactive domains and it must be used with
<em>--persistent</em> option.</p>
<p><em>--persistent</em> leaves the domain persistent on destination host,
<em>--undefinesource</em> undefines the domain on the source host, and <em>--suspend</em>
leaves the domain paused on the destination host.</p>
<p><em>--copy-storage-all</em> indicates migration with non-shared storage with full
disk copy, <em>--copy-storage-inc</em> indicates migration with non-shared storage
with incremental copy (same base image shared between source and destination).
In both cases the disk images have to exist on destination host, the
<em>--copy-storage-...</em> options only tell libvirt to transfer data from the
images on source host to the images found at the same place on the destination
host. By default only non-shared non-readonly images are transferred. Use
<em>--migrate-disks</em> to explicitly specify a list of disk targets to
transfer via the comma separated <span class="docutils literal"><span class="pre">disk-list</span></span> argument.
With <em>--copy-storage-synchronous-writes</em> flag used the disk data migration will
synchronously handle guest disk writes to both the original source and the
destination to ensure that the disk migration converges at the price of possibly
decreased burst performance.</p>
<p><em>--change-protection</em> enforces that no incompatible configuration changes will
be made to the domain while the migration is underway; this flag is implicitly
enabled when supported by the hypervisor, but can be explicitly used to reject
the migration if the hypervisor lacks change protection support.</p>
<p><em>--verbose</em> displays the progress of migration.</p>
<p><em>--abort-on-error</em> cancels the migration if a soft error (for example I/O error)
happens during the migration.</p>
<p><em>--postcopy</em> enables post-copy logic in migration, but does not actually start
post-copy, i.e., migration is started in pre-copy mode.
Once migration is running, the user may switch to post-copy using the
<span class="docutils literal"><span class="pre">migrate-postcopy</span></span> command sent from another virsh instance or use
<em>--postcopy-after-precopy</em> along with <em>--postcopy</em> to let libvirt
automatically switch to post-copy after the first pass of pre-copy is finished.
The maximum bandwidth consumed during the post-copy phase may be limited using
<em>--postcopy-bandwidth</em>. The maximum bandwidth consumed during the pre-copy phase
may be limited using <em>--bandwidth</em>. In case connection between the hosts breaks
while migration is in post-copy mode, the domain cannot be resumed on either
source or destination host and the <span class="docutils literal">migrate</span> command will report an error
leaving the domain active on both hosts. To recover from such situation repeat
the original <span class="docutils literal">migrate</span> command with an additional <em>--postcopy-resume</em> flag.
If <em>--release-ram</em> is set then memory on source during postcopy phase
will be released as soon as it transfered to destination. With flag
<em>--postcopy-start</em> migration run in postcopy mode right from the
beginning. <em>--shared-workaround</em> apply very special steps to migrate
disks on vstorage which does not allow a file to be opened for write
from to many hosts and even for write on one host and read on another.
The workaround is not possible when postcopy is used.</p>
<p><em>--auto-converge</em> forces convergence during live migration. The initial
guest CPU throttling rate can be set with <em>auto-converge-initial</em>. If the
initial throttling rate is not enough to ensure convergence, the rate is
periodically increased by <em>auto-converge-increment</em>.</p>
<p><em>--rdma-pin-all</em> can be used with RDMA migration (i.e., when <em>migrateuri</em>
starts with rdma://) to tell the hypervisor to pin all domain's memory at once
before migration starts rather than letting it pin memory pages as needed. For
QEMU/KVM this requires hard_limit memory tuning element (in the domain XML) to
be used and set to the maximum memory configured for the domain plus any memory
consumed by the QEMU process itself. Beware of setting the memory limit too
high (and thus allowing the domain to lock most of the host's memory). Doing so
may be dangerous to both the domain and the host itself since the host's kernel
may run out of memory.</p>
<p><em>--zerocopy</em> requests zero-copy mechanism to be used for migrating memory pages.
For QEMU/KVM this means QEMU will be temporarily allowed to lock all guest
pages in host's memory, although only those that are queued for transfer will
be locked at the same time.</p>
<p><span class="docutils literal">Note</span>: Individual hypervisors usually do not support all possible types of
migration. For example, QEMU does not support direct migration.</p>
<p>In some cases libvirt may refuse to migrate the domain because doing so may
lead to potential problems such as data corruption, and thus the migration is
considered unsafe. For QEMU domain, this may happen if the domain uses disks
without explicitly setting cache mode to &quot;none&quot;. Migrating such domains is
unsafe unless the disk images are stored on coherent clustered filesystem,
such as GFS2 or GPFS. If you are sure the migration is safe or you just do not
care, use <em>--unsafe</em> to force the migration.</p>
<p><em>dname</em> is used for renaming the domain to new name during migration, which
also usually can be omitted.  Likewise, <em>--xml</em> <span class="docutils literal">file</span> is usually
omitted, but can be used to supply an alternative XML file for use on
the destination to supply a larger set of changes to any host-specific
portions of the domain XML, such as accounting for naming differences
between source and destination in accessing underlying storage.
If <em>--persistent</em> is enabled, <em>--persistent-xml</em> <span class="docutils literal">file</span> can be used to
supply an alternative XML file which will be used as the persistent guest
definition on the destination host.</p>
<p><em>--timeout</em> <span class="docutils literal">seconds</span> tells virsh to run a specified action when live
migration exceeds that many seconds.  It can only be used with <em>--live</em>.
If <em>--timeout-suspend</em> is specified, the domain will be suspended after
the timeout and the migration will complete offline; this is the default
if no <em>--timeout-\`` option is specified on the command line.  When
*--timeout-postcopy</em> is used, virsh will switch migration from pre-copy
to post-copy upon timeout; migration has to be started with <em>--postcopy</em>
option for this to work.</p>
<p><em>--compressed</em> activates compression, the compression method is chosen
with <em>--comp-methods</em>. Supported methods are &quot;mt&quot; and &quot;xbzrle&quot; and
can be used in any combination. When no methods are specified, a hypervisor
default methods will be used. QEMU defaults to &quot;xbzrle&quot;. Compression methods
can be tuned further. <em>--comp-mt-level</em> sets compression level.
Values are in range from 0 to 9, where 1 is maximum speed and 9 is maximum
compression. <em>--comp-mt-threads</em> and <em>--comp-mt-dthreads</em> set the number
of compress threads on source and the number of decompress threads on target
respectively. <em>--comp-xbzrle-cache</em> sets size of page cache in bytes.</p>
<p>Providing <em>--tls</em> causes the migration to use the host configured TLS setup
(see migrate_tls_x509_cert_dir in /etc/libvirt/qemu.conf) in order to perform
the migration of the domain. Usage requires proper TLS setup for both source
and target. Normally the TLS certificate from the destination host must match
the host's name for TLS verification to succeed. When the certificate does not
match the destination hostname and the expected certificate's hostname is
known, <em>--tls-destination</em> can be used to pass the expected <em>hostname</em> when
starting the migration.</p>
<p><em>--parallel</em> option will cause migration data to be sent over multiple
parallel connections. The number of such connections can be set using
<em>--parallel-connections</em>. Parallel connections may help with saturating the
network link between the source and the target and thus speeding up the
migration.</p>
<p>Running migration can be canceled by interrupting virsh (usually using
<span class="docutils literal"><span class="pre">Ctrl-C</span></span>) or by <span class="docutils literal">domjobabort</span> command sent from another virsh instance.</p>
<p>The <em>desturi</em> and <em>migrateuri</em> parameters can be used to control which
destination the migration uses.  <em>desturi</em> is important for managed
migration, but unused for direct migration; <em>migrateuri</em> is required
for direct migration, but can usually be automatically determined for
managed migration.</p>
<p><span class="docutils literal">Note</span>: The <em>desturi</em> parameter for normal migration and peer2peer migration
has different semantics:</p>
<ul class="simple">
<li><p>normal migration: the <em>desturi</em> is an address of the target host as seen from the client machine.</p></li>
<li><p>peer2peer migration: the <em>desturi</em> is an address of the target host as seen from the source machine.</p></li>
</ul>
<p>In a special circumstance where you require a complete control of the connection
and/or libvirt does not have network access to the remote side you can use a
UNIX transport in the URI and specify a socket path in the query, for example
with the qemu driver you could use this:</p>
<pre class="literal-block">qemu+unix:///system?socket=/path/to/socket</pre>
<p>When <em>migrateuri</em> is not specified, libvirt will automatically determine the
hypervisor specific URI.  Some hypervisors, including QEMU, have an optional
&quot;migration_host&quot; configuration parameter (useful when the host has multiple
network interfaces).  If this is unspecified, libvirt determines a name
by looking up the target host's configured hostname.</p>
<p>There are a few scenarios where specifying <em>migrateuri</em> may help:</p>
<ul class="simple">
<li><p>The configured hostname is incorrect, or DNS is broken.
If a host has a hostname which will not resolve to match one of its public IP addresses, then
libvirt will generate an incorrect URI.  In this case <em>migrateuri</em> should be
explicitly specified, using an IP address, or a correct hostname.</p></li>
<li><p>The host has multiple network interfaces.  If a host has multiple network
interfaces, it might be desirable for the migration data stream to be sent over
a specific interface for either security or performance reasons.  In this case
<em>migrateuri</em> should be explicitly specified, using an IP address associated
with the network to be used.</p></li>
<li><p>The firewall restricts what ports are available.  When libvirt generates a
migration URI, it will pick a port number using hypervisor specific rules.
Some hypervisors only require a single port to be open in the firewalls, while
others require a whole range of port numbers.  In the latter case <em>migrateuri</em>
might be specified to choose a specific port number outside the default range in
order to comply with local firewall policies.</p></li>
<li><p>The <em>desturi</em> uses UNIX transport method.  In this advanced case libvirt
should not guess a <em>migrateuri</em> and it should be specified using
UNIX socket path URI:</p></li>
</ul>
<pre class="literal-block">unix:///path/to/socket</pre>
<p>See <a class="reference external" href="https://libvirt.org/migration.html#uris">https://libvirt.org/migration.html#uris</a> for more details on
migration URIs.</p>
<p>Optional <em>graphicsuri</em> overrides connection parameters used for automatically
reconnecting a graphical clients at the end of migration. If omitted, libvirt
will compute the parameters based on target host IP address. In case the
client does not have a direct access to the network virtualization hosts are
connected to and needs to connect through a proxy, <em>graphicsuri</em> may be used
to specify the address the client should connect to. The URI is formed as
follows:</p>
<pre class="literal-block">protocol://hostname[:port]/[?parameters]</pre>
<p>where protocol is either &quot;spice&quot; or &quot;vnc&quot; and parameters is a list of protocol
specific parameters separated by '&amp;'. Currently recognized parameters are
&quot;tlsPort&quot; and &quot;tlsSubject&quot;. For example,</p>
<pre class="literal-block">spice://target.host.com:1234/?tlsPort=4567</pre>
<p>Optional <em>listen-address</em> sets the listen address that hypervisor on the
destination side should bind to for incoming migration. Both IPv4 and IPv6
addresses are accepted as well as hostnames (the resolving is done on
destination).  Some hypervisors do not support specifying the listen address and
will return an error if this parameter is used. This parameter cannot be used if
<em>desturi</em> uses UNIX transport method.</p>
<p>Optional <em>disks-port</em> sets the port that hypervisor on destination side should
bind to for incoming disks traffic. Currently it is supported only by QEMU.</p>
<p>Optional <em>disks-uri</em> can also be specified (mutually exclusive with
<em>disks-port</em>) to specify what the remote hypervisor should bind/connect to when
migrating disks.  This can be <em>tcp://address:port</em> to specify a listen address
(which overrides <em>--migrate-uri</em> and <em>--listen-address</em> for the disk migration)
and a port or <em>unix:///path/to/socket</em> in case you need the disk migration to
happen over a UNIX socket with that specified path.  In this case you need to
make sure the same socket path is accessible to both source and destination
hypervisors and connecting to the socket on the source (after hypervisor creates
it on the destination) will actually connect to the destination. If you are
using SELinux (at least on the source host) you need to make sure the socket on
the source is accessible to libvirtd/QEMU for connection.  Libvirt cannot change
the context of the existing socket because it is different from the file
representation of the socket and the context is chosen by its creator (usually
by using <em>setsockcreatecon{,_raw}()</em> functions).</p>
</div>
<div class="section" id="migrate-compcache">
<h2><a class="toc-backref" href="#id113">migrate-compcache</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">migrate-compcache domain [--size bytes]</pre>
<p>Sets and/or gets size of the cache (in bytes) used for compressing repeatedly
transferred memory pages during live migration. When called without <em>size</em>,
the command just prints current size of the compression cache. When <em>size</em>
is specified, the hypervisor is asked to change compression cache to <em>size</em>
bytes and then the current size is printed (the result may differ from the
requested size due to rounding done by the hypervisor). The <em>size</em> option
is supposed to be used while the domain is being live-migrated as a reaction
to migration progress and increasing number of compression cache misses
obtained from domjobinfo.</p>
</div>
<div class="section" id="migrate-getmaxdowntime">
<h2><a class="toc-backref" href="#id114">migrate-getmaxdowntime</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">migrate-getmaxdowntime domain</pre>
<p>Get the maximum tolerable downtime for a domain which is being live-migrated to
another host.  This is the number of milliseconds the guest is allowed
to be down at the end of live migration.</p>
</div>
<div class="section" id="migrate-getspeed">
<h2><a class="toc-backref" href="#id115">migrate-getspeed</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">migrate-getspeed domain [--postcopy]</pre>
<p>Get the maximum migration bandwidth (in MiB/s) for a domain. If the
<em>--postcopy</em> option is specified, the command will get the maximum bandwidth
allowed during a post-copy migration phase.</p>
</div>
<div class="section" id="migrate-postcopy">
<h2><a class="toc-backref" href="#id116">migrate-postcopy</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">migrate-postcopy domain</pre>
<p>Switch the current migration from pre-copy to post-copy. This is only
supported for a migration started with <em>--postcopy</em> option.</p>
</div>
<div class="section" id="migrate-setmaxdowntime">
<h2><a class="toc-backref" href="#id117">migrate-setmaxdowntime</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">migrate-setmaxdowntime domain downtime</pre>
<p>Set maximum tolerable downtime for a domain which is being live-migrated to
another host.  The <em>downtime</em> is a number of milliseconds the guest is allowed
to be down at the end of live migration.</p>
</div>
<div class="section" id="migrate-setspeed">
<h2><a class="toc-backref" href="#id118">migrate-setspeed</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">migrate-setspeed domain bandwidth [--postcopy]</pre>
<p>Set the maximum migration bandwidth (in MiB/s) for a domain which is being
migrated to another host. <em>bandwidth</em> is interpreted as an unsigned long
long value. Specifying a negative value results in an essentially unlimited
value being provided to the hypervisor. The hypervisor can choose whether to
reject the value or convert it to the maximum value allowed. If the
<em>--postcopy</em> option is specified, the command will set the maximum bandwidth
allowed during a post-copy migration phase.</p>
</div>
<div class="section" id="numatune">
<h2><a class="toc-backref" href="#id119">numatune</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">numatune domain [--mode mode] [--nodeset nodeset]
   [[--config] [--live] | [--current]]</pre>
<p>Set or get a domain's numa parameters, corresponding to the &lt;numatune&gt;
element of domain XML.  Without flags, the current settings are
displayed.</p>
<p><em>mode</em> can be one of `strict', `interleave', `preferred' and
'restrictive' or any valid number from the virDomainNumatuneMemMode enum
in case the daemon supports it.  For a running domain, the mode can't be
changed, and the nodeset can be changed only if the domain was started with
`restrictive' mode.</p>
<p><em>nodeset</em> is a list of numa nodes used by the host for running the domain.
Its syntax is a comma separated list, with '-' for ranges and '^' for
excluding a node.</p>
<p>If <em>--live</em> is specified, set scheduler information of a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.</p>
<p>For running guests in Linux hosts, the changes made in the domain's
numa parameters does not imply that the guest memory will be moved to a
different nodeset immediately. The memory migration depends on the
guest activity, and the memory of an idle guest will remain in its
previous nodeset for longer. The presence of VFIO devices will also
lock parts of the guest memory in the same nodeset used to start the
guest, regardless of nodeset changes.</p>
</div>
<div class="section" id="perf">
<h2><a class="toc-backref" href="#id120">perf</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">perf domain [--enable eventSpec] [--disable eventSpec]
   [[--config] [--live] | [--current]]</pre>
<p>Get the current perf events setting or enable/disable specific perf
events for a guest domain.</p>
<p>Perf is a performance analyzing tool in Linux, and it can instrument
CPU performance counters, tracepoints, kprobes, and uprobes (dynamic
tracing). Perf supports a list of measurable events, and can measure
events coming from different sources. For instance, some event are
pure kernel counters, in this case they are called software events,
including context-switches, minor-faults, etc.. Now dozens of events
from different sources can be supported by perf.</p>
<p>Currently only QEMU/KVM supports this command. The <em>--enable</em> and <em>--disable</em>
option combined with <span class="docutils literal">eventSpec</span> can be used to enable or disable specific
performance event. <span class="docutils literal">eventSpec</span> is a string list of one or more events
separated by commas. Valid event names are as follows:</p>
<p><strong>Valid perf event names</strong></p>
<ul class="simple">
<li><p><span class="docutils literal">cmt</span> - A PQos (Platform Qos) feature to monitor the
usage of cache by applications running on the platform.</p></li>
<li><p><span class="docutils literal">mbmt</span> - Provides a way to monitor the total system
memory bandwidth between one level of cache and another.</p></li>
<li><p><span class="docutils literal">mbml</span> - Provides a way to limit the amount of data
(bytes/s) send through the memory controller on the socket.</p></li>
<li><p><span class="docutils literal">cache_misses</span> - Provides the count of cache misses by
applications running on the platform.</p></li>
<li><p><span class="docutils literal">cache_references</span> - Provides the count of cache hits by
applications running on th e platform.</p></li>
<li><p><span class="docutils literal">instructions</span> - Provides the count of instructions executed
by applications running on the platform.</p></li>
<li><p><span class="docutils literal">cpu_cycles</span> - Provides the count of cpu cycles
(total/elapsed). May be used with instructions in order to get
a cycles per instruction.</p></li>
<li><p><span class="docutils literal">branch_instructions</span> - Provides the count of branch instructions
executed by applications running on the platform.</p></li>
<li><p><span class="docutils literal">branch_misses</span> - Provides the count of branch misses executed
by applications running on the platform.</p></li>
<li><p><span class="docutils literal">bus_cycles</span> - Provides the count of bus cycles executed
by applications running on the platform.</p></li>
<li><p><span class="docutils literal">stalled_cycles_frontend</span> - Provides the count of stalled cpu
cycles in the frontend of the instruction processor pipeline by
applications running on the platform.</p></li>
<li><p><span class="docutils literal">stalled_cycles_backend</span> - Provides the count of stalled cpu
cycles in the backend of the instruction processor pipeline by
applications running on the platform.</p></li>
<li><p><span class="docutils literal">ref_cpu_cycles</span> -  Provides the count of total cpu cycles
not affected by CPU frequency scaling by applications running
on the platform.</p></li>
<li><p><span class="docutils literal">cpu_clock</span> - Provides the cpu clock time consumed by
applications running on the platform.</p></li>
<li><p><span class="docutils literal">task_clock</span> - Provides the task clock time consumed by
applications running on the platform.</p></li>
<li><p><span class="docutils literal">page_faults</span> - Provides the count of page faults by
applications running on the platform.</p></li>
<li><p><span class="docutils literal">context_switches</span> - Provides the count of context switches
by applications running on the platform.</p></li>
<li><p><span class="docutils literal">cpu_migrations</span> - Provides the count cpu migrations by
applications running on the platform.</p></li>
<li><p><span class="docutils literal">page_faults_min</span> - Provides the count minor page faults
by applications running on the platform.</p></li>
<li><p><span class="docutils literal">page_faults_maj</span> - Provides the count major page faults
by applications running on the platform.</p></li>
<li><p><span class="docutils literal">alignment_faults</span> - Provides the count alignment faults
by applications running on the platform.</p></li>
<li><p><span class="docutils literal">emulation_faults</span> - Provides the count emulation faults
by applications running on the platform.</p></li>
</ul>
<p><span class="docutils literal">Note</span>: The statistics can be retrieved using the <span class="docutils literal">domstats</span> command using
the <em>--perf</em> flag.</p>
<p>If <em>--live</em> is specified, affect a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. If no flag is specified, behavior is different depending
on hypervisor.</p>
</div>
<div class="section" id="reboot">
<h2><a class="toc-backref" href="#id121">reboot</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">reboot domain [--mode MODE-LIST]</pre>
<p>Reboot a domain.  This acts just as if the domain had the <span class="docutils literal">reboot</span>
command run from the console.  The command returns as soon as it has
executed the reboot action, which may be significantly before the
domain actually reboots.</p>
<p>The exact behavior of a domain when it reboots is set by the
<em>on_reboot</em> parameter in the domain's XML definition.</p>
<p>By default the hypervisor will try to pick a suitable shutdown
method. To specify an alternative method, the <em>--mode</em> parameter
can specify a comma separated list which includes <span class="docutils literal">acpi</span>, <span class="docutils literal">agent</span>,
<span class="docutils literal">initctl</span>, <span class="docutils literal">signal</span> and <span class="docutils literal">paravirt</span>. The order in which drivers will
try each mode is undefined, and not related to the order specified to virsh.
For strict control over ordering, use a single mode at a time and
repeat the command.</p>
</div>
<div class="section" id="reset">
<h2><a class="toc-backref" href="#id122">reset</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">reset domain</pre>
<p>Reset a domain immediately without any guest shutdown. <span class="docutils literal">reset</span>
emulates the power reset button on a machine, where all guest
hardware sees the RST line set and reinitializes internal state.</p>
<p><span class="docutils literal">Note</span>: Reset without any guest OS shutdown risks data loss.</p>
</div>
<div class="section" id="restore">
<h2><a class="toc-backref" href="#id123">restore</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">restore state-file [--bypass-cache] [--xml file]
   [{--running | --paused}] [--reset-nvram]</pre>
<p>Restores a domain from a <span class="docutils literal">virsh save</span> state file. See <em>save</em> for more info.</p>
<p>If <em>--bypass-cache</em> is specified, the restore will avoid the file system
cache, although this may slow down the operation.</p>
<p><em>--xml</em> <span class="docutils literal">file</span> is usually omitted, but can be used to supply an
alternative XML file for use on the restored guest with changes only
in the host-specific portions of the domain XML.  For example, it can
be used to account for file naming differences in underlying storage
due to disk snapshots taken after the guest was saved.</p>
<p>Normally, restoring a saved image will use the state recorded in the
save image to decide between running or paused; passing either the
<em>--running</em> or <em>--paused</em> flag will allow overriding which state the
domain should be started in.</p>
<p>If <em>--reset-nvram</em> is specified, any existing NVRAM file will be deleted
and re-initialized from its pristine template.</p>
<p><span class="docutils literal">Note</span>: To avoid corrupting file system contents within the domain, you
should not reuse the saved state file for a second <span class="docutils literal">restore</span> unless you
have also reverted all storage volumes back to the same contents as when
the state file was created.</p>
</div>
<div class="section" id="resume">
<h2><a class="toc-backref" href="#id124">resume</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">resume domain</pre>
<p>Moves a domain out of the suspended state.  This will allow a previously
suspended domain to now be eligible for scheduling by the underlying
hypervisor.</p>
</div>
<div class="section" id="save">
<h2><a class="toc-backref" href="#id125">save</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">save domain state-file [--bypass-cache] [--xml file]
   [{--running | --paused}] [--verbose]</pre>
<p>Saves a running domain (RAM, but not disk state) to a state file so that
it can be restored
later.  Once saved, the domain will no longer be running on the
system, thus the memory allocated for the domain will be free for
other domains to use.  <span class="docutils literal">virsh restore</span> restores from this state file.
If <em>--bypass-cache</em> is specified, the save will avoid the file system
cache, although this may slow down the operation.</p>
<p>The progress may be monitored using <span class="docutils literal">domjobinfo</span> virsh command and canceled
with <span class="docutils literal">domjobabort</span> command (sent by another virsh instance). Another option
is to send SIGINT (usually with <span class="docutils literal"><span class="pre">Ctrl-C</span></span>) to the virsh process running
<span class="docutils literal">save</span> command. <em>--verbose</em> displays the progress of save.</p>
<p>This is roughly equivalent to doing a hibernate on a running computer,
with all the same limitations.  Open network connections may be
severed upon restore, as TCP timeouts may have expired.</p>
<p><em>--xml</em> <span class="docutils literal">file</span> is usually omitted, but can be used to supply an
alternative XML file for use on the restored guest with changes only
in the host-specific portions of the domain XML.  For example, it can
be used to account for file naming differences that are planned to
be made via disk snapshots of underlying storage after the guest is saved.</p>
<p>Normally, restoring a saved image will decide between running or paused
based on the state the domain was in when the save was done; passing
either the <em>--running</em> or <em>--paused</em> flag will allow overriding which
state the <span class="docutils literal">restore</span> should use.</p>
<p>Domain saved state files assume that disk images will be unchanged
between the creation and restore point.  For a more complete system
restore point, where the disk state is saved alongside the memory
state, see the <span class="docutils literal">snapshot</span> family of commands.</p>
</div>
<div class="section" id="save-image-define">
<h2><a class="toc-backref" href="#id126">save-image-define</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">save-image-define file xml [{--running | --paused}]</pre>
<p>Update the domain XML that will be used when <em>file</em> is later
used in the <span class="docutils literal">restore</span> command.  The <em>xml</em> argument must be a file
name containing the alternative XML, with changes only in the
host-specific portions of the domain XML.  For example, it can
be used to account for file naming differences resulting from creating
disk snapshots of underlying storage after the guest was saved.</p>
<p>The save image records whether the domain should be restored to a
running or paused state.  Normally, this command does not alter the
recorded state; passing either the <em>--running</em> or <em>--paused</em> flag
will allow overriding which state the <span class="docutils literal">restore</span> should use.</p>
</div>
<div class="section" id="save-image-dumpxml">
<h2><a class="toc-backref" href="#id127">save-image-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">save-image-dumpxml [--security-info] [--xpath EXPRESSION] [--wrap] file</pre>
<p>Extract the domain XML that was in effect at the time the saved state
file <em>file</em> was created with the <span class="docutils literal">save</span> command.  Using
<em>--security-info</em> will also include security sensitive information.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="save-image-edit">
<h2><a class="toc-backref" href="#id128">save-image-edit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">save-image-edit file [{--running | --paused}]</pre>
<p>Edit the XML configuration associated with a saved state file <em>file</em>
created by the <span class="docutils literal">save</span> command.</p>
<p>The save image records whether the domain should be restored to a
running or paused state.  Normally, this command does not alter the
recorded state; passing either the <em>--running</em> or <em>--paused</em> flag
will allow overriding which state the <span class="docutils literal">restore</span> should use.</p>
<p>This is equivalent to:</p>
<pre class="literal-block">virsh save-image-dumpxml state-file &gt; state-file.xml
vi state-file.xml (or make changes with your other text editor)
virsh save-image-define state-file state-file-xml</pre>
<p>except that it does some error checking.</p>
<p>The editor used can be supplied by the <span class="docutils literal">$VISUAL</span> or <span class="docutils literal">$EDITOR</span> environment
variables, and defaults to <span class="docutils literal">vi</span>.</p>
</div>
<div class="section" id="schedinfo">
<h2><a class="toc-backref" href="#id129">schedinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">schedinfo domain [[--config] [--live] | [--current]] [[--set] parameter=value]...
schedinfo [--weight number] [--cap number] domain</pre>
<p>Allows you to show (and set) the domain scheduler parameters. The parameters
available for each hypervisor are:</p>
<p>LXC (posix scheduler) : cpu_shares, vcpu_period, vcpu_quota</p>
<p>QEMU/KVM (posix scheduler): cpu_shares, vcpu_period, vcpu_quota,
emulator_period, emulator_quota, global_period, global_quota,
iothread_period, iothread_quota</p>
<p>Xen (credit scheduler): weight, cap</p>
<p>ESX (allocation scheduler): reservation, limit, shares</p>
<p>If <em>--live</em> is specified, set scheduler information of a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.</p>
<p><span class="docutils literal">Note</span>: The cpu_shares parameter has a valid value range of 2-262144.</p>
<p><span class="docutils literal">Note</span>: The weight and cap parameters are defined only for the
XEN_CREDIT scheduler.</p>
<p><span class="docutils literal">Note</span>: The vcpu_period, emulator_period, and iothread_period parameters
have a valid value range of 1000-1000000 or 0, and the vcpu_quota,
emulator_quota, and iothread_quota parameters have a valid value range of
1000-17592186044415 or less than 0. The value 0 for
either parameter is the same as not specifying that parameter.</p>
</div>
<div class="section" id="screenshot">
<h2><a class="toc-backref" href="#id130">screenshot</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">screenshot domain [imagefilepath] [--screen screenID]</pre>
<p>Takes a screenshot of a current domain console and stores it into a file.
Optionally, if the hypervisor supports more displays for a domain, <em>screenID</em>
allows specifying which screen will be captured. It is the sequential number
of screen. In case of multiple graphics cards, heads are enumerated before
devices, e.g. having two graphics cards, both with four heads, screen ID 5
addresses the second head on the second card.</p>
</div>
<div class="section" id="send-key">
<h2><a class="toc-backref" href="#id131">send-key</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">send-key domain [--codeset codeset] [--holdtime holdtime] keycode...</pre>
<p>Parse the <em>keycode</em> sequence as keystrokes to send to <em>domain</em>.
Each <em>keycode</em> can either be a numeric value or a symbolic name from
the corresponding codeset.  If <em>--holdtime</em> is given, each keystroke
will be held for that many milliseconds.  The default codeset is
<span class="docutils literal">linux</span>, but use of the <em>--codeset</em> option allows other codesets to
be chosen.</p>
<p>If multiple keycodes are specified, they are all sent simultaneously
to the guest, and they may be received in random order. If you need
distinct keypresses, you must use multiple send-key invocations.</p>
<ul>
<li><p><span class="docutils literal">linux</span></p>
<p>The numeric values are those defined by the Linux generic input
event subsystem. The symbolic names match the corresponding
Linux key constant macro names.</p>
<p>See virkeycode-linux(7) and virkeyname-linux(7)</p>
</li>
<li><p><span class="docutils literal">xt</span></p>
<p>The numeric values are those defined by the original XT keyboard
controller. No symbolic names are provided</p>
<p>See virkeycode-xt(7)</p>
</li>
<li><p><span class="docutils literal">atset1</span></p>
<p>The numeric values are those defined by the AT keyboard controller,
set 1 (aka XT compatible set). Extended keycoes from <span class="docutils literal">atset1</span>
may differ from extended keycodes in the <span class="docutils literal">xt</span> codeset. No symbolic
names are provided</p>
<p>See virkeycode-atset1(7)</p>
</li>
<li><p><span class="docutils literal">atset2</span></p>
<p>The numeric values are those defined by the AT keyboard controller,
set 2. No symbolic names are provided</p>
<p>See virkeycode-atset2(7)</p>
</li>
<li><p><span class="docutils literal">atset3</span></p>
<p>The numeric values are those defined by the AT keyboard controller,
set 3 (aka PS/2 compatible set). No symbolic names are provided</p>
<p>See virkeycode-atset3(7)</p>
</li>
<li><p><span class="docutils literal">os_x</span></p>
<p>The numeric values are those defined by the macOS keyboard input
subsystem. The symbolic names match the corresponding macOS key
constant macro names</p>
<p>See virkeycode-osx(7) and virkeyname-osx(7)</p>
</li>
<li><p><span class="docutils literal">xt_kbd</span></p>
<p>The numeric values are those defined by the Linux KBD device.
These are a variant on the original XT codeset, but often with
different encoding for extended keycodes. No symbolic names are
provided.</p>
<p>See virkeycode-xtkbd(7)</p>
</li>
<li><p><span class="docutils literal">win32</span></p>
<p>The numeric values are those defined by the Win32 keyboard input
subsystem. The symbolic names match the corresponding Win32 key
constant macro names</p>
<p>See virkeycode-win32(7) and virkeyname-win32(7)</p>
</li>
<li><p><span class="docutils literal">usb</span></p>
<p>The numeric values are those defined by the USB HID specification
for keyboard input. No symbolic names are provided</p>
<p>See virkeycode-usb(7)</p>
</li>
<li><p><span class="docutils literal">qnum</span></p>
<p>The numeric values are those defined by the QNUM extension for sending
raw keycodes. These are a variant on the XT codeset, but extended
keycodes have the low bit of the second byte set, instead of the high
bit of the first byte. No symbolic names are provided.</p>
<p>See virkeycode-qnum(7)</p>
</li>
</ul>
<p><strong>Examples:</strong></p>
<pre class="literal-block"># send three strokes 'k', 'e', 'y', using xt codeset. these
# are all pressed simultaneously and may be received by the guest
# in random order
virsh send-key dom --codeset xt 37 18 21

# send one stroke 'right-ctrl+C'
virsh send-key dom KEY_RIGHTCTRL KEY_C

# send a tab, held for 1 second
virsh send-key --holdtime 1000 0xf</pre>
</div>
<div class="section" id="send-process-signal">
<h2><a class="toc-backref" href="#id132">send-process-signal</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">send-process-signal domain-id pid signame</pre>
<p>Send a signal <em>signame</em> to the process identified by <em>pid</em> running in
the virtual domain <em>domain-id</em>. The <em>pid</em> is a process ID in the virtual
domain namespace.</p>
<p>The <em>signame</em> argument may be either an integer signal constant number,
or one of the symbolic names:</p>
<pre class="literal-block">&quot;nop&quot;, &quot;hup&quot;, &quot;int&quot;, &quot;quit&quot;, &quot;ill&quot;,
&quot;trap&quot;, &quot;abrt&quot;, &quot;bus&quot;, &quot;fpe&quot;, &quot;kill&quot;,
&quot;usr1&quot;, &quot;segv&quot;, &quot;usr2&quot;, &quot;pipe&quot;, &quot;alrm&quot;,
&quot;term&quot;, &quot;stkflt&quot;, &quot;chld&quot;, &quot;cont&quot;, &quot;stop&quot;,
&quot;tstp&quot;, &quot;ttin&quot;, &quot;ttou&quot;, &quot;urg&quot;, &quot;xcpu&quot;,
&quot;xfsz&quot;, &quot;vtalrm&quot;, &quot;prof&quot;, &quot;winch&quot;, &quot;poll&quot;,
&quot;pwr&quot;, &quot;sys&quot;, &quot;rt0&quot;, &quot;rt1&quot;, &quot;rt2&quot;, &quot;rt3&quot;,
&quot;rt4&quot;, &quot;rt5&quot;, &quot;rt6&quot;, &quot;rt7&quot;, &quot;rt8&quot;, &quot;rt9&quot;,
&quot;rt10&quot;, &quot;rt11&quot;, &quot;rt12&quot;, &quot;rt13&quot;, &quot;rt14&quot;, &quot;rt15&quot;,
&quot;rt16&quot;, &quot;rt17&quot;, &quot;rt18&quot;, &quot;rt19&quot;, &quot;rt20&quot;, &quot;rt21&quot;,
&quot;rt22&quot;, &quot;rt23&quot;, &quot;rt24&quot;, &quot;rt25&quot;, &quot;rt26&quot;, &quot;rt27&quot;,
&quot;rt28&quot;, &quot;rt29&quot;, &quot;rt30&quot;, &quot;rt31&quot;, &quot;rt32&quot;</pre>
<p>The symbol name may optionally be prefixed with <span class="docutils literal">sig</span> or <span class="docutils literal">sig_</span> and
may be in uppercase or lowercase.</p>
<p><strong>Examples:</strong></p>
<pre class="literal-block">virsh send-process-signal myguest 1 15
virsh send-process-signal myguest 1 term
virsh send-process-signal myguest 1 sigterm
virsh send-process-signal myguest 1 SIG_HUP</pre>
</div>
<div class="section" id="set-lifecycle-action">
<h2><a class="toc-backref" href="#id133">set-lifecycle-action</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">set-lifecycle-action domain type action
   [[--config] [--live] | [--current]]</pre>
<p>Set the lifecycle <em>action</em> for specified lifecycle <em>type</em>.
The valid types are &quot;poweroff&quot;, &quot;reboot&quot; and &quot;crash&quot;, and for each of
them valid <em>action</em> is one of &quot;destroy&quot;, &quot;restart&quot;, &quot;rename-restart&quot;,
&quot;preserve&quot;.  For <em>type</em> &quot;crash&quot;, additional actions &quot;coredump-destroy&quot;
and &quot;coredump-restart&quot; are supported.</p>
</div>
<div class="section" id="set-user-password">
<h2><a class="toc-backref" href="#id134">set-user-password</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">set-user-password domain user password [--encrypted]</pre>
<p>Set the password for the <em>user</em> account in the guest domain.</p>
<p>If <em>--encrypted</em> is specified, the password is assumed to be already
encrypted by the method required by the guest OS.</p>
<p>For QEMU/KVM, this requires the guest agent to be configured
and running.</p>
</div>
<div class="section" id="set-user-sshkeys">
<h2><a class="toc-backref" href="#id135">set-user-sshkeys</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">set-user-sshkeys domain user [--file FILE] [{--reset | --remove}]</pre>
<p>Append keys read from <em>FILE</em> into <em>user</em>'s SSH authorized keys file in the
guest <em>domain</em>.  In the <em>FILE</em> keys must be on separate lines and each line
must follow authorized keys format as defined by <em>sshd(8)</em>.</p>
<p>If <em>--reset</em> is specified, then the guest authorized keys file content is
removed before appending new keys. As a special case, if <em>--reset</em> is provided
and no <em>FILE</em> was provided then no new keys are added and the authorized keys
file is cleared out.</p>
<p>If <em>--remove</em> is specified, then instead of adding any new keys then keys read
from <em>FILE</em> are removed from the authorized keys file. It is not considered an
error if the key does not exist in the file.</p>
</div>
<div class="section" id="setmaxmem">
<h2><a class="toc-backref" href="#id136">setmaxmem</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">setmaxmem domain size [[--config] [--live] | [--current]]</pre>
<p>Change the maximum memory allocation limit for a guest domain.
If <em>--live</em> is specified, affect a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. If no flag is specified, behavior is different depending
on hypervisor.</p>
<p>Some hypervisors such as QEMU/KVM don't support live changes (especially
increasing) of the maximum memory limit.  Even persistent configuration changes
might not be performed with some hypervisors/configuration (e.g. on NUMA enabled
domains on QEMU).  For complex configuration changes use command <span class="docutils literal">edit</span>
instead).</p>
<p><em>size</em> is a scaled integer (see <span class="docutils literal">NOTES</span> above); it defaults to kibibytes
(blocks of 1024 bytes) unless you provide a suffix (and the older option
name <em>--kilobytes</em> is available as a deprecated synonym) .  Libvirt rounds
up to the nearest kibibyte.  Some hypervisors require a larger granularity
than KiB, and requests that are not an even multiple will be rounded up.
For example, vSphere/ESX rounds the parameter up to mebibytes (1024 kibibytes).</p>
</div>
<div class="section" id="setmem">
<h2><a class="toc-backref" href="#id137">setmem</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">setmem domain size [[--config] [--live] | [--current]]</pre>
<p>Change the memory allocation for a guest domain.
If <em>--live</em> is specified, perform a memory balloon of a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. If no flag is specified, behavior is different depending
on hypervisor.</p>
<p><em>size</em> is a scaled integer (see <span class="docutils literal">NOTES</span> above); it defaults to kibibytes
(blocks of 1024 bytes) unless you provide a suffix (and the older option
name <em>--kilobytes</em> is available as a deprecated synonym) .  Libvirt rounds
up to the nearest kibibyte.  Some hypervisors require a larger granularity
than KiB, and requests that are not an even multiple will be rounded up.
For example, vSphere/ESX rounds the parameter up to mebibytes (1024 kibibytes).</p>
<p>For Xen, you can only adjust the memory of a running domain if the domain is
paravirtualized or running the PV balloon driver.</p>
<p>For LXC, the value being set is the cgroups value for limit_in_bytes or the
maximum amount of user memory (including file cache). When viewing memory
inside the container, this is the /proc/meminfo &quot;MemTotal&quot; value. When viewing
the value from the host, use the <span class="docutils literal">virsh memtune</span> command. In order to view
the current memory in use and the maximum value allowed to set memory, use
the <span class="docutils literal">virsh dominfo</span> command.</p>
</div>
<div class="section" id="setvcpus">
<h2><a class="toc-backref" href="#id138">setvcpus</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">setvcpus domain count [--maximum] [[--config] [--live] | [--current]] [--guest] [--hotpluggable]</pre>
<p>Change the number of virtual CPUs active in a guest domain.  By default,
this command works on active guest domains.  To change the settings for an
inactive guest domain, use the <em>--config</em> flag.</p>
<p>The <em>count</em> value may be limited by host, hypervisor, or a limit coming
from the original description of the guest domain. For Xen, you can only
adjust the virtual CPUs of a running domain if the domain is paravirtualized.</p>
<p>If the <em>--config</em> flag is specified, the change is made to the stored XML
configuration for the guest domain, and will only take effect when the guest
domain is next started.</p>
<p>If <em>--live</em> is specified, the guest domain must be active, and the change
takes place immediately.  Both the <em>--config</em> and <em>--live</em> flags may be
specified together if supported by the hypervisor.  If this command is run
before the guest has finished booting, the guest may fail to process
the change.</p>
<p>If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.</p>
<p>When no flags are given, the <em>--live</em>
flag is assumed and the guest domain must be active.  In this situation it
is up to the hypervisor whether the <em>--config</em> flag is also assumed, and
therefore whether the XML configuration is adjusted to make the change
persistent.</p>
<p>If <em>--guest</em> is specified, then the count of cpus is modified in the guest
instead of the hypervisor. This flag is usable only for live domains
and may require guest agent to be configured in the guest.</p>
<p>To allow adding vcpus to persistent definitions that can be later hotunplugged
after the domain is booted it is necessary to specify the <em>--hotpluggable</em>
flag. Vcpus added to live domains supporting vcpu unplug are automatically
marked as hotpluggable.</p>
<p>The <em>--maximum</em> flag controls the maximum number of virtual cpus that can
be hot-plugged the next time the domain is booted.  As such, it must only be
used with the <em>--config</em> flag, and not with the <em>--live</em> or the <em>--current</em>
flag. Note that it may not be possible to change the maximum vcpu count if
the processor topology is specified for the guest.</p>
</div>
<div class="section" id="setvcpu">
<h2><a class="toc-backref" href="#id139">setvcpu</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">setvcpu domain vcpulist [--enable] | [--disable]
   [[--live] [--config] | [--current]]</pre>
<p>Change state of individual vCPUs using hot(un)plug mechanism.</p>
<p>See <span class="docutils literal">vcpupin</span> for information on format of <em>vcpulist</em>. Hypervisor drivers may
require that <em>vcpulist</em> contains exactly vCPUs belonging to one hotpluggable
entity. This is usually just a single vCPU but certain architectures such as
ppc64 require a full core to be specified at once.</p>
<p>Note that hypervisors may refuse to disable certain vcpus such as vcpu 0 or
others.</p>
<p>If <em>--live</em> is specified, affect a running domain.
If <em>--config</em> is specified, affect the next startup of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.  This is the
default. Both <em>--live</em> and <em>--config</em> flags may be given, but
<em>--current</em> is exclusive.</p>
</div>
<div class="section" id="shutdown">
<h2><a class="toc-backref" href="#id140">shutdown</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">shutdown domain [--mode MODE-LIST]</pre>
<p>Gracefully shuts down a domain.  This coordinates with the domain OS
to perform graceful shutdown, so there is no guarantee that it will
succeed, and may take a variable length of time depending on what
services must be shutdown in the domain.</p>
<p>The exact behavior of a domain when it shuts down is set by the
<em>on_poweroff</em> parameter in the domain's XML definition.</p>
<p>If <em>domain</em> is transient, then the metadata of any snapshots and
checkpoints will be lost once the guest stops running, but the underlying
contents still exist, and a new domain with the same name and UUID can
restore the snapshot metadata with <span class="docutils literal"><span class="pre">snapshot-create</span></span>, and the checkpoint
metadata with <span class="docutils literal"><span class="pre">checkpoint-create</span></span>.</p>
<p>By default the hypervisor will try to pick a suitable shutdown
method. To specify an alternative method, the <em>--mode</em> parameter
can specify a comma separated list which includes <span class="docutils literal">acpi</span>, <span class="docutils literal">agent</span>,
<span class="docutils literal">initctl</span>, <span class="docutils literal">signal</span> and <span class="docutils literal">paravirt</span>. The order in which drivers will
try each mode is undefined, and not related to the order specified to virsh.
For strict control over ordering, use a single mode at a time and
repeat the command.</p>
</div>
<div class="section" id="start">
<h2><a class="toc-backref" href="#id141">start</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">start domain-name-or-uuid [--console] [--paused]
   [--autodestroy] [--bypass-cache] [--force-boot]
   [--pass-fds N,M,...] [--reset-nvram] [--x-exportable]</pre>
<p>Start a (previously defined) inactive domain, either from the last
<span class="docutils literal">managedsave</span> state, or via a fresh boot if no managedsave state is
present.  The domain will be paused if the <em>--paused</em> option is
used and supported by the driver; otherwise it will be running.
If <em>--console</em> is requested, attach to the console after creation.
If <em>--autodestroy</em> is requested, then the guest will be automatically
destroyed when virsh closes its connection to libvirt, or otherwise
exits.  If <em>--bypass-cache</em> is specified, and managedsave state exists,
the restore will avoid the file system cache, although this may slow
down the operation.  If <em>--force-boot</em> is specified, then any
managedsave state is discarded and a fresh boot occurs.</p>
<p>If <em>--pass-fds</em> is specified, the argument is a comma separated list
of open file descriptors which should be pass on into the guest. The
file descriptors will be re-numbered in the guest, starting from 3. This
is only supported with container based virtualization.</p>
<p>If <em>--reset-nvram</em> is specified, any existing NVRAM file will be deleted
and re-initialized from its pristine template.</p>
<p><em>--x-exportable</em> is currently required to export disks in the write
mode using <em>x-block-export-start</em>. See <em>x-block-export-start</em> for details.</p>
</div>
<div class="section" id="suspend">
<h2><a class="toc-backref" href="#id142">suspend</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">suspend domain</pre>
<p>Suspend a running domain. It is kept in memory but won't be scheduled
anymore.</p>
</div>
<div class="section" id="ttyconsole">
<h2><a class="toc-backref" href="#id143">ttyconsole</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">ttyconsole domain</pre>
<p>Output the device used for the TTY console of the domain. If the information
is not available the processes will provide an exit code of 1.</p>
</div>
<div class="section" id="undefine">
<h2><a class="toc-backref" href="#id144">undefine</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">undefine domain [--managed-save] [--snapshots-metadata]
   [--checkpoints-metadata] [--nvram] [--keep-nvram]
   [ {--storage volumes | --remove-all-storage
      [--delete-storage-volume-snapshots]} --wipe-storage]</pre>
<p>Undefine a domain. If the domain is running, this converts it to a
transient domain, without stopping it. If the domain is inactive,
the domain configuration is removed.</p>
<p>The <em>--managed-save</em> flag guarantees that any managed save image (see
the <span class="docutils literal">managedsave</span> command) is also cleaned up.  Without the flag, attempts
to undefine a domain with a managed save image will fail.</p>
<p>The <em>--snapshots-metadata</em> flag guarantees that any snapshots (see the
<span class="docutils literal"><span class="pre">snapshot-list</span></span> command) are also cleaned up when undefining an inactive
domain.  Without the flag, attempts to undefine an inactive domain with
snapshot metadata will fail.  If the domain is active, this flag is
ignored.</p>
<p>The <em>--checkpoints-metadata</em> flag guarantees that any checkpoints (see the
<span class="docutils literal"><span class="pre">checkpoint-list</span></span> command) are also cleaned up when undefining an inactive
domain.  Without the flag, attempts to undefine an inactive domain with
checkpoint metadata will fail.  If the domain is active, this flag is
ignored.</p>
<p><em>--nvram</em> and <em>--keep-nvram</em> specify accordingly to delete or keep nvram
(/domain/os/nvram/) file. If the domain has an nvram file and the flags are
omitted, the undefine will fail.</p>
<p>The <em>--storage</em> flag takes a parameter <span class="docutils literal">volumes</span>, which is a comma separated
list of volume target names or source paths of storage volumes to be removed
along with the undefined domain. Volumes can be undefined and thus removed only
on inactive domains. Volume deletion is only attempted after the domain is
undefined; if not all of the requested volumes could be deleted, the
error message indicates what still remains behind. If a volume path is not
found in the domain definition, it's treated as if the volume was successfully
deleted. Only volumes managed by libvirt in storage pools can be removed this
way.
(See <span class="docutils literal">domblklist</span> for list of target names associated to a domain).
Example: --storage vda,/path/to/storage.img</p>
<p>The <em>--remove-all-storage</em> flag specifies that all of the domain's storage
volumes should be deleted.</p>
<p>The <em>--delete-storage-volume-snapshots</em> (previously <em>--delete-snapshots</em>)
flag specifies that any snapshots associated with
the storage volume should be deleted as well. Requires the
<em>--remove-all-storage</em> flag to be provided. Not all storage drivers
support this option, presently only rbd. Using this when also removing volumes
handled by a storage driver which does not support the flag will result in
failure.</p>
<p>The flag <em>--wipe-storage</em> specifies that the storage volumes should be
wiped before removal.</p>
<p>NOTE: For an inactive domain, the domain name or UUID must be used as the
<em>domain</em>.</p>
</div>
<div class="section" id="vcpucount">
<h2><a class="toc-backref" href="#id145">vcpucount</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vcpucount domain  [{--maximum | --active}
   {--config | --live | --current}] [--guest]</pre>
<p>Print information about the virtual cpu counts of the given
<em>domain</em>.  If no flags are specified, all possible counts are
listed in a table; otherwise, the output is limited to just the
numeric value requested.  For historical reasons, the table
lists the label &quot;current&quot; on the rows that can be queried in isolation
via the <em>--active</em> flag, rather than relating to the <em>--current</em> flag.</p>
<p><em>--maximum</em> requests information on the maximum cap of vcpus that a
domain can add via <span class="docutils literal">setvcpus</span>, while <em>--active</em> shows the current
usage; these two flags cannot both be specified.  <em>--config</em>
requires a persistent guest and requests information regarding the next
time the domain will be booted, <em>--live</em> requires a running domain and
lists current values, and <em>--current</em> queries according to the current
state of the domain (corresponding to <em>--live</em> if running, or
<em>--config</em> if inactive); these three flags are mutually exclusive.</p>
<p>If <em>--guest</em> is specified, then the count of cpus is reported from
the perspective of the guest. This flag is usable only for live domains
and may require guest agent to be configured in the guest.</p>
</div>
<div class="section" id="vcpuinfo">
<h2><a class="toc-backref" href="#id146">vcpuinfo</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vcpuinfo domain [--pretty]</pre>
<p>Returns basic information about the domain virtual CPUs, like the number of
vCPUs, the running time, the affinity to physical processors.</p>
<p>With <em>--pretty</em>, cpu affinities are shown as ranges.</p>
<p><strong>Example:</strong></p>
<pre class="literal-block">$ virsh vcpuinfo fedora
VCPU:           0
CPU:            0
State:          running
CPU time:       7,0s
CPU Affinity:   yyyy

VCPU:           1
CPU:            1
State:          running
CPU time:       0,7s
CPU Affinity:   yyyy</pre>
<p><span class="docutils literal">STATES</span></p>
<p>The State field displays the current operating state of a virtual CPU</p>
<ul>
<li><p><span class="docutils literal">offline</span></p>
<p>The virtual CPU is offline and not usable by the domain.
This state is not supported by all hypervisors.</p>
</li>
<li><p><span class="docutils literal">running</span></p>
<p>The virtual CPU is available to the domain and is operating.</p>
</li>
<li><p><span class="docutils literal">blocked</span></p>
<p>The virtual CPU is available to the domain but is waiting for a resource.
This state is not supported by all hypervisors, in which case <em>running</em>
may be reported instead.</p>
</li>
<li><p><span class="docutils literal">no state</span></p>
<p>The virtual CPU state could not be determined. This could happen if
the hypervisor is newer than virsh.</p>
</li>
<li><p><span class="docutils literal">N/A</span></p>
<p>There's no information about the virtual CPU state available. This can
be the case if the domain is not running or the hypervisor does
not report the virtual CPU state.</p>
</li>
</ul>
</div>
<div class="section" id="vcpupin">
<h2><a class="toc-backref" href="#id147">vcpupin</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vcpupin domain [vcpu] [cpulist] [[--live] [--config] | [--current]]</pre>
<p>Query or change the pinning of domain VCPUs to host physical CPUs.  To
pin a single <em>vcpu</em>, specify <em>cpulist</em>; otherwise, you can query one
<em>vcpu</em> or omit <em>vcpu</em> to list all at once.</p>
<p><em>cpulist</em> is a list of physical CPU numbers. Its syntax is a comma
separated list and a special markup using '-' and '^' (ex. '0-4', '0-3,^2') can
also be allowed. The '-' denotes the range and the '^' denotes exclusive.
For pinning the <em>vcpu</em> to all physical cpus specify 'r' as a <em>cpulist</em>.
If <em>--live</em> is specified, affect a running guest.
If <em>--config</em> is specified, affect the next start of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given if <em>cpulist</em> is present,
but <em>--current</em> is exclusive.
If no flag is specified, behavior is different depending on hypervisor.</p>
<p><span class="docutils literal">Note</span>: The expression is sequentially evaluated, so &quot;0-15,^8&quot; is
identical to &quot;9-14,0-7,15&quot; but not identical to &quot;^8,0-15&quot;.</p>
</div>
<div class="section" id="vncdisplay">
<h2><a class="toc-backref" href="#id148">vncdisplay</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vncdisplay domain</pre>
<p>Output the IP address and port number for the VNC display. If the information
is not available the processes will provide an exit code of 1.</p>
</div>
<div class="section" id="x-block-set-latency-histogram">
<h2><a class="toc-backref" href="#id149">x-block-set-latency-histogram</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>x-block-set-latency-histogram domain disk [boundaries]
[--op operation]</code></pre>
<p>Configure latency histogram parameters for the I/O operation <em>operation</em> on
the disk <em>disk</em> and resets all histogram's bins to zero. <em>operation</em> is one of
<em>read</em>, <em>write</em>, <em>flush</em> or <em>unmap</em>. If <em>operation</em> is omitted, histograms
for all operations are configured. The histogram itself is available
via <em>domstats</em>.</p>
<p><em>boundaries</em> is a comma-separated list of histogram interval boundaries, in
nanoseconds, in ascending order. Boundaries 0 and +inf are implicit and need
not be specified. For example, &quot;10, 50, 100&quot; will configure the histogram with
the intervals [0, 10), [10, 50), [50, 100), and [100, +inf).</p>
<p>If both <em>boundaries</em> and <em>operation</em> are omitted, then histograms for all
operations will be removed, i.e. will not be collected or added to the
<em>domstats</em> output.</p>
</div>
<div class="section" id="x-move-nvram">
<h2><a class="toc-backref" href="#id150">x-move-nvram</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>x-move-nvram domain path [--format format] [--reuse-external]
[[--config] [--live] | [--current]]</code></pre>
<p>Move an NVRAM image to the new <em>path</em>, optionally changing the image format
to <em>format</em>. The NVRAM image is only relocated if the domain is running and an
active configuration is to be updated (the old NVRAM image remains). Otherwise,
the NVRAM path is only updated in domain's persistent configuration.</p>
<p>If <em>--reuse-external</em> is specified, a pre-created NVRAM image at <em>path</em> is
used.</p>
<p>If <em>--live</em> is specified, the running domain is affected.
If <em>--config</em> is specified, the domain is affected on its next startup.
If <em>--current</em> is specified, the current domain state is affected. This is the
default setting. The <em>--live</em> and <em>--config</em> flags may be specified at the
same time, while <em>--current</em> is exclusive.</p>
</div>
<div class="section" id="x-block-snapshot-create">
<h2><a class="toc-backref" href="#id151">x-block-snapshot-create</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>x-block-snapshot-create domain FILE [--quiesce] [--autodelete]
[--checkpoint] [--bypass-cache]</code></pre>
<p>Creates a block snapshot for <em>domain</em> specified in the XML file given by path
<em>FILE</em>. The domain must be running. Compared to ordinary disk snapshots,
deleting a block snapshot does not require a lengthy commit operation and is
done immediately.</p>
<p>If <em>--quiesce</em> is specified, domain filesystems will be frozen before a
snapshot is created. Freezing requires the guest agent to be up and running,
otherwise creating the snapshot will fail.</p>
<p>If <em>--autodelete</em> is specified, then the snapshot will be deleted if the
connection which was used to create it is closed.</p>
<p>If <em>--checkpoint</em> is specified, then a checkpoint will be created for this
point in time. It can later be used to make incremental/differetial backup from
this point. The checkpoint name will be the same as the block snapshot name.
The checkpoint will not be deleted when the block snapshot is deleted.</p>
<p>If <em>--bypass-cache</em> is specified, the snapshot will avoid the file system
cache, although this may slow down the operation.</p>
<p>Currently block snapshots are not persistent while checkpoins are. Currently a
disk can only be in one block snapshot at a time. Having several block
snapshots for different disks is possible. The number of checkpoints for a
disk is not limited.</p>
<p>The list of checkpoints is available in the active XML description of an active
domain. The list is per-disk so different disks can have different
checkpoints. The checkpoints are ordered by creation time. The most recent
checkpoint is at the bottom of the list. Checkpoint metadata is not available.</p>
<p>If an ordinary disk snapshot is created, then checkpoints are only kept on the
top image. Reverting to a snapshot drops the checkpoints. On commiting the top
image, however, the checkpoints are moved to the base image. Thus deleting a
snapshot keeps the checkpoints.</p>
</div>
<div class="section" id="x-block-snapshot-delete">
<h2><a class="toc-backref" href="#id152">x-block-snapshot-delete</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>x-block-snapshot-delete domain snapshot-name</code></pre>
<p>Deletes the block snapshot <em>snapshot-name</em> of the domain <em>domain</em>.</p>
</div>
<div class="section" id="x-block-snapshot-list">
<h2><a class="toc-backref" href="#id153">x-block-snapshot-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>x-block-snapshot-list domain</code></pre>
<p>Lists block snapshots of <em>domain</em>.</p>
</div>
<div class="section" id="x-block-snapshot-dumxpml">
<h2><a class="toc-backref" href="#id154">x-block-snapshot-dumxpml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>x-block-snapshot-dumxpml domain snapshot-name</code></pre>
<p>Dumps the XML description for the block snapshot <em>snapshot-name</em> of the domain
<em>domain</em>.</p>
</div>
<div class="section" id="x-block-checkpoint-remove">
<h2><a class="toc-backref" href="#id155">x-block-checkpoint-remove</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>x-block-checkpoint-remove domain checkpoint-name</code></pre>
<p>Deletes the checkpoint <em>checkpoint-name</em> of the domain <em>domain</em>.</p>
</div>
<div class="section" id="x-block-export-start">
<h2><a class="toc-backref" href="#id156">x-block-export-start</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>x-block-export-start domain FILE</code></pre>
<p>Exports the disks/block snapshots/checkpoints of the domain <em>domain</em> as
described in <em>FILE</em>. Only exporting through the NBD protocol is currently
supported. The domain must be running. Currently block exports are not
persistent.</p>
<p>Block snaphots can be only exported in the read mode. Disks can be exported in
the write mode only if both <em>--paused</em> and <em>--x-exportable</em> are set on domain
start and only before the domain is resumed.</p>
<p>The command can be called multiple times but currently with the same export
address and port. Basically it can be used to add more disks/block
snapshots/checkpoints to an export after the first call.</p>
</div>
<div class="section" id="x-block-export-stop">
<h2><a class="toc-backref" href="#id157">x-block-export-stop</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>x-block-export-stop domain FILE</code></pre>
<p>Deletes disks/block snapshots/checkpoints from the export of the domain
<em>domain</em> as described in <em>FILE</em>. The domain must be running.</p>
<p>The command can be called multiple times do delete exported objects
incrementally.  All of them can also be deleted in a single call.</p>
</div>
<div class="section" id="vz-domain-guest-net-tune">
<h2><a class="toc-backref" href="#id158">vz-domain-guest-net-tune</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="code literal-block"><code>vz-domain-guest-net-tune domain [--hostname hostname]
    [--dns-server servers] [--search-domain domains]
    [[--config] [--live] | [--current]]</code></pre>
<p>Sets guest network parameters for the <em>domain</em>. <em>hostname</em> is a new hostname.
<em>servers</em> is a comma-separated list of DNS servers. <em>domains</em> is
a comma-separated list of search domains for the DNS name.</p>
<p>If <em>--live</em> is specified, affects a running domain.
If <em>--config</em> is specified, affects the next startup of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
The <em>--live</em> and <em>--config</em> flags may be used at the same time,
but <em>--current</em> is exclusive. When no flag is specified, the behavior depends
on the hypervisor driver and is equivalent to <em>--current</em> in case of
the QEMU driver.</p>
</div>
</div>
<div class="section" id="device-commands">
<h1><a class="toc-backref" href="#id159">DEVICE COMMANDS</a></h1>
<p>The following commands manipulate devices associated to domains.
The <em>domain</em> can be specified as a short integer, a name or a full UUID.
To better understand the values allowed as options for the command
reading the documentation at <a class="reference external" href="https://libvirt.org/formatdomain.html">https://libvirt.org/formatdomain.html</a> on the
format of the device sections to get the most accurate set of accepted values.</p>
<div class="section" id="attach-device">
<h2><a class="toc-backref" href="#id160">attach-device</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">attach-device domain FILE [[[--live] [--config] | [--current]] | [--persistent]]</pre>
<p>Attach a device to the domain, using a device definition in an XML
file using a device definition element such as &lt;disk&gt; or &lt;interface&gt;
as the top-level element.  See the documentation at
<a class="reference external" href="https://libvirt.org/formatdomain.html#devices">https://libvirt.org/formatdomain.html#elementsDevices</a> to learn about
libvirt XML format for a device.  If <em>--config</em> is specified the
command alters the persistent guest configuration with the device
attach taking effect the next time libvirt starts the domain.
For cdrom and floppy devices, this command only replaces the media
within an existing device; consider using <span class="docutils literal"><span class="pre">update-device</span></span> for this
usage.  For passthrough host devices, see also <span class="docutils literal"><span class="pre">nodedev-detach</span></span>,
needed if the PCI device does not use managed mode.</p>
<p>If <em>--live</em> is specified, affect a running domain.
If <em>--config</em> is specified, affect the next startup of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. When no flag is specified legacy API is used whose behavior depends
on the hypervisor driver.</p>
<p>For compatibility purposes, <em>--persistent</em> behaves like <em>--config</em> for
an offline domain, and like <em>--live</em> <em>--config</em> for a running domain.</p>
<p><span class="docutils literal">Note</span>: using of partial device definition XML files may lead to unexpected
results as some fields may be autogenerated and thus match devices other than
expected.</p>
</div>
<div class="section" id="attach-disk">
<h2><a class="toc-backref" href="#id161">attach-disk</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">attach-disk domain source target [[[--live] [--config] |
   [--current]] | [--persistent]] [--targetbus bus]
   [--driver driver] [--subdriver subdriver] [--iothread iothread]
   [--cache cache] [--io io] [--type type] [--alias alias]
   [--mode mode] [--sourcetype sourcetype]
   [--source-protocol protocol] [--source-host-name hostname:port]
   [--source-host-transport transport] [--source-host-socket socket]
   [--serial serial] [--wwn wwn] [--rawio] [--address address]
   [--multifunction] [--print-xml]</pre>
<p>Attach a new disk device to the domain.
<em>source</em> is path for the files and devices unless <em>--source-protocol</em>
is specified, in which case <em>source</em> is the name of a network disk.
<em>target</em> controls the bus or device under which the disk is exposed
to the guest OS. It indicates the &quot;logical&quot; device name;
the optional <em>targetbus</em> attribute specifies the type
of disk device to emulate; possible values are driver specific, with typical
values being <em>ide</em>, <em>scsi</em>, <em>virtio</em>, <em>xen</em>, <em>usb</em>, <em>sata</em>, or <em>sd</em>, if
omitted, the bus type is inferred from the style of the device name (e.g.  a
device named 'sda' will typically be exported using a SCSI bus).  <em>driver</em> can
be <em>file</em>, <em>tap</em> or <em>phy</em> for the Xen
hypervisor depending on the kind of access; or <em>qemu</em> for the QEMU emulator.
Further details to the driver can be passed using <em>subdriver</em>. For Xen
<em>subdriver</em> can be <em>aio</em>, while for QEMU subdriver should match the format
of the disk source, such as <em>raw</em> or <em>qcow2</em>.  Hypervisor default will be
used if <em>subdriver</em> is not specified.  However, the default may not be
correct, esp. for QEMU as for security reasons it is configured not to detect
disk formats.  <em>type</em> can indicate <em>lun</em>, <em>cdrom</em> or <em>floppy</em> as
alternative to the disk default, although this use only replaces the media
within the existing virtual cdrom or floppy device; consider using
<span class="docutils literal"><span class="pre">update-device</span></span> for this usage instead.
<em>alias</em> can set user supplied alias.
<em>mode</em> can specify the two specific mode <em>readonly</em> or <em>shareable</em>.
<em>sourcetype</em> can indicate the type of source (block|file|network)
<em>cache</em> can be one of &quot;default&quot;, &quot;none&quot;, &quot;writethrough&quot;, &quot;writeback&quot;,
&quot;directsync&quot; or &quot;unsafe&quot;.
<em>io</em> controls specific policies on I/O; QEMU guests support &quot;threads&quot;,
&quot;native&quot; and &quot;io_uring&quot;.
<em>iothread</em> is the number within the range of domain IOThreads to which
this disk may be attached (QEMU only).
<em>serial</em> is the serial of disk device. <em>wwn</em> is the wwn of disk device.
<em>rawio</em> indicates the disk needs rawio capability.
<em>address</em> is the address of disk device in the form of
pci:domain.bus.slot.function, scsi:controller.bus.unit,
ide:controller.bus.unit, usb:bus.port, sata:controller.bus.unit or
ccw:cssid.ssid.devno. Virtio-ccw devices must have their cssid set to 0xfe.
<em>multifunction</em> indicates specified pci address is a multifunction pci device
address.</p>
<p>There is also support for using a network disk. As specified, the user can
provide a <em>--source-protocol</em> in which case the <em>source</em> parameter will
be interpreted as the source name. <em>--source-protocol</em> must be provided
if the user intends to provide a network disk or host information.
Host information can be provided using the tags
<em>--source-host-name</em>, <em>--source-host-transport</em>, and <em>--source-host-socket</em>,
which respectively denote the name of the host, the host's transport method,
and the socket that the host uses. <em>--source-host-socket</em> and
<em>--source-host-name</em> cannot both be provided, and the user must provide a
<em>--source-host-transport</em> if they want to provide a <em>--source-host-socket</em>.
The <em>--source-host-name</em> parameter supports host:port syntax
if the user wants to provide a port as well.</p>
<p>If <em>--print-xml</em> is specified, then the XML of the disk that would be attached
is printed instead.</p>
<p>If <em>--live</em> is specified, affect a running domain.
If <em>--config</em> is specified, affect the next startup of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. When no flag is specified legacy API is used whose behavior depends
on the hypervisor driver.</p>
<p>For compatibility purposes, <em>--persistent</em> behaves like <em>--config</em> for
an offline domain, and like <em>--live</em> <em>--config</em> for a running domain.
Likewise, <em>--shareable</em> is an alias for <em>--mode shareable</em>.</p>
</div>
<div class="section" id="attach-interface">
<h2><a class="toc-backref" href="#id162">attach-interface</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">attach-interface domain type source [[[--live]
   [--config] | [--current]] | [--persistent]]
   [--target target] [--mac mac] [--script script] [--model model]
   [--inbound average,peak,burst,floor] [--outbound average,peak,burst]
   [--alias alias] [--managed] [--print-xml]
   [--source-mode mode]</pre>
<p>Attach a new network interface to the domain.</p>
<p><span class="docutils literal">type</span> can be one of the:</p>
<p><em>network</em> to indicate connection via a libvirt virtual network,</p>
<p><em>bridge</em> to indicate connection via a bridge device on the host,</p>
<p><em>direct</em> to indicate connection directly to one of the host's network
interfaces or bridges,</p>
<p><em>hostdev</em> to indicate connection using a passthrough of PCI device
on the host,</p>
<p><em>vhostuser</em> to indicate connection using a virtio transport protocol.</p>
<p><span class="docutils literal">source</span> indicates the source of the connection.  The source depends
on the type of the interface:</p>
<p><em>network</em> name of the virtual network,</p>
<p><em>bridge</em> the name of the bridge device,</p>
<p><em>direct</em> the name of the host's interface or bridge,</p>
<p><em>hostdev</em> the PCI address of the host's interface formatted
as domain:bus:slot.function.</p>
<p><em>vhostuser</em> the path to UNIX socket (control plane)</p>
<p><span class="docutils literal"><span class="pre">--target</span></span> is used to specify the tap/macvtap device to be used to
connect the domain to the source.  Names starting with 'vnet' are
considered as auto-generated and are blanked out/regenerated each
time the interface is attached.</p>
<p><span class="docutils literal"><span class="pre">--mac</span></span> specifies the MAC address of the network interface; if a MAC
address is not given, a new address will be automatically generated
(and stored in the persistent configuration if &quot;--config&quot; is given on
the command line).</p>
<p><span class="docutils literal"><span class="pre">--script</span></span> is used to specify a path to a custom script to be called
while attaching to a bridge - this will be called instead of the default
script not in addition to it.  This is valid only for interfaces of
<em>bridge</em> type and only for Xen domains.</p>
<p><span class="docutils literal"><span class="pre">--model</span></span> specifies the network device model to be presented to the
domain.</p>
<p><span class="docutils literal">alias</span> can set user supplied alias.</p>
<p><span class="docutils literal"><span class="pre">--inbound</span></span> and <span class="docutils literal"><span class="pre">--outbound</span></span> control the bandwidth of the
interface.  At least one from the <em>average</em>, <em>floor</em> pair must be
specified.  The other two <em>peak</em> and <em>burst</em> are optional, so
&quot;average,peak&quot;, &quot;average,,burst&quot;, &quot;average,,,floor&quot;, &quot;average&quot; and
&quot;,,,floor&quot; are also legal.  Values for <em>average</em>, <em>floor</em> and <em>peak</em>
are expressed in kilobytes per second, while <em>burst</em> is expressed in
kilobytes in a single burst at <em>peak</em> speed as described in the
Network XML documentation at
<a class="reference external" href="https://libvirt.org/formatnetwork.html#quality-of-service">https://libvirt.org/formatnetwork.html#quality-of-service</a>.</p>
<p><span class="docutils literal"><span class="pre">--managed</span></span> is usable only for <em>hostdev</em> type and tells libvirt
that the interface should be managed, which means detached and reattached
from/to the host by libvirt.</p>
<p><span class="docutils literal"><span class="pre">--source-mode</span></span> is mandatory for <em>vhostuser</em> interface and accepts values
<em>server</em> and <em>client</em> that control whether hypervisor waits for the other
process to connect, or initiates connection, respectively.</p>
<p>If <span class="docutils literal"><span class="pre">--print-xml</span></span> is specified, then the XML of the interface that would be
attached is printed instead.</p>
<p>If <span class="docutils literal"><span class="pre">--live</span></span> is specified, affect a running domain.
If <span class="docutils literal"><span class="pre">--config</span></span> is specified, affect the next startup of a persistent guest.
If <span class="docutils literal"><span class="pre">--current</span></span> is specified, affect the current domain state, which
can either be live or offline.
Both <span class="docutils literal"><span class="pre">--live</span></span> and <span class="docutils literal"><span class="pre">--config</span></span> flags may be given, but <span class="docutils literal"><span class="pre">--current</span></span> is
exclusive.  When no flag is specified legacy API is used whose behavior
depends on the hypervisor driver.</p>
<p>For compatibility purposes, <span class="docutils literal"><span class="pre">--persistent</span></span> behaves like <span class="docutils literal"><span class="pre">--config</span></span> for
an offline domain, and like <span class="docutils literal"><span class="pre">--live</span></span> <span class="docutils literal"><span class="pre">--config</span></span> for a running domain.</p>
<p><span class="docutils literal">Note</span>: the optional target value is the name of a device to be created
as the back-end on the node.  If not provided a device named &quot;vnetN&quot; or &quot;vifN&quot;
will be created automatically.</p>
</div>
<div class="section" id="detach-device">
<h2><a class="toc-backref" href="#id163">detach-device</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">detach-device domain FILE [[[--live] [--config] |
   [--current]] | [--persistent]]</pre>
<p>Detach a device from the domain, takes the same kind of XML descriptions
as command <span class="docutils literal"><span class="pre">attach-device</span></span>.
For passthrough host devices, see also <span class="docutils literal"><span class="pre">nodedev-reattach</span></span>, needed if
the device does not use managed mode.</p>
<p><span class="docutils literal">Note</span>: The supplied XML description of the device should be as specific
as its definition in the domain XML. The set of attributes used
to match the device are internal to the drivers. Using a partial definition,
or attempting to detach a device that is not present in the domain XML,
but shares some specific attributes with one that is present,
may lead to unexpected results.</p>
<p><span class="docutils literal">Quirk</span>: Device unplug is asynchronous in most cases and requires guest
cooperation. This means that it's up to the discretion of the guest to disallow
or delay the unplug arbitrarily. As the libvirt API used in this command was
designed as synchronous it returns success after some timeout even if the device
was not unplugged yet to allow further interactions with the domain e.g. if the
guest is unresponsive. Callers which need to make sure that the
device was unplugged can use libvirt events (see virsh event) to be notified
when the device is removed. Note that the event may arrive before the command
returns.</p>
<p>If <em>--live</em> is specified, affect a running domain.
If <em>--config</em> is specified, affect the next startup of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. When no flag is specified legacy API is used whose behavior depends
on the hypervisor driver.</p>
<p>For compatibility purposes, <em>--persistent</em> behaves like <em>--config</em> for
an offline domain, and like <em>--live</em> <em>--config</em> for a running domain.</p>
<p>Note that older versions of virsh used <em>--config</em> as an alias for
<em>--persistent</em>.</p>
</div>
<div class="section" id="detach-device-alias">
<h2><a class="toc-backref" href="#id164">detach-device-alias</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">detach-device-alias domain alias [[[--live] [--config] | [--current]]]]</pre>
<p>Detach a device with given <em>alias</em> from the <em>domain</em>. This command returns
successfully after the unplug request was sent to the hypervisor. The actual
removal of the device is notified asynchronously via libvirt events
(see virsh event).</p>
<p>If <em>--live</em> is specified, affect a running domain.
If <em>--config</em> is specified, affect the next startup of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive.</p>
</div>
<div class="section" id="detach-disk">
<h2><a class="toc-backref" href="#id165">detach-disk</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">detach-disk domain target [[[--live] [--config] |
   [--current]] | [--persistent]] [--print-xml]</pre>
<p>Detach a disk device from a domain. The <em>target</em> is the device as seen
from the domain.</p>
<p>If <em>--live</em> is specified, affect a running domain.
If <em>--config</em> is specified, affect the next startup of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. When no flag is specified legacy API is used whose behavior depends
on the hypervisor driver.</p>
<p>For compatibility purposes, <em>--persistent</em> behaves like <em>--config</em> for
an offline domain, and like <em>--live</em> <em>--config</em> for a running domain.</p>
<p>Note that older versions of virsh used <em>--config</em> as an alias for
<em>--persistent</em>.</p>
<p>If <span class="docutils literal"><span class="pre">--print-xml</span></span> is specified, then the XML which would be used to detach the
disk is printed instead.</p>
<p>Please see documentation for <span class="docutils literal"><span class="pre">detach-device</span></span> for known quirks.</p>
</div>
<div class="section" id="detach-interface">
<h2><a class="toc-backref" href="#id166">detach-interface</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">detach-interface domain type [--mac mac]
   [[[--live] [--config] | [--current]] | [--persistent]]</pre>
<p>Detach a network interface from a domain.
<em>type</em> can be either <em>network</em> to indicate a physical network device or
<em>bridge</em> to indicate a bridge to a device. It is recommended to use the
<em>mac</em> option to distinguish between the interfaces if more than one are
present on the domain.</p>
<p>If <em>--live</em> is specified, affect a running domain.
If <em>--config</em> is specified, affect the next startup of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. When no flag is specified legacy API is used whose behavior depends
on the hypervisor driver.</p>
<p>For compatibility purposes, <em>--persistent</em> behaves like <em>--config</em> for
an offline domain, and like <em>--live</em> <em>--config</em> for a running domain.</p>
<p>Note that older versions of virsh used <em>--config</em> as an alias for
<em>--persistent</em>.</p>
<p>Please see documentation for <span class="docutils literal"><span class="pre">detach-device</span></span> for known quirks.</p>
</div>
<div class="section" id="update-device">
<h2><a class="toc-backref" href="#id167">update-device</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">update-device domain file [--force] [[[--live]
   [--config] | [--current]] | [--persistent]]</pre>
<p>Update the characteristics of a device associated with <em>domain</em>,
based on the device definition in an XML <em>file</em>.  The <em>--force</em> option
can be used to force device update, e.g., to eject a CD-ROM even if it is
locked/mounted in the domain. See the documentation at
<a class="reference external" href="https://libvirt.org/formatdomain.html#devices">https://libvirt.org/formatdomain.html#elementsDevices</a> to learn about
libvirt XML format for a device.</p>
<p>If <em>--live</em> is specified, affect a running domain.
If <em>--config</em> is specified, affect the next startup of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. Not specifying any flag is the same as specifying <em>--current</em>.</p>
<p>For compatibility purposes, <em>--persistent</em> behaves like <em>--config</em> for
an offline domain, and like <em>--live</em> <em>--config</em> for a running domain.</p>
<p>Note that older versions of virsh used <em>--config</em> as an alias for
<em>--persistent</em>.</p>
<p><span class="docutils literal">Note</span>: using of partial device definition XML files may lead to unexpected
results as some fields may be autogenerated and thus match devices other than
expected.</p>
</div>
<div class="section" id="update-memory-device">
<h2><a class="toc-backref" href="#id168">update-memory-device</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">update-memory-device domain [--print-xml] [[--alias alias] | [--node node]]
  [[--live] [--config] | [--current]]
  [--requested-size size]</pre>
<p>This command finds <span class="docutils literal">&lt;memory/&gt;</span> device inside given <em>domain</em>, changes
requested values and passes updated device XML to daemon. If <em>--print-xml</em> is
specified then the device is not changed, but the updated device XML is printed
to stdout.  If there are more than one <span class="docutils literal">&lt;memory/&gt;</span> devices in <em>domain</em> use
<em>--alias</em> or <em>--node</em> to select the desired one.</p>
<p>If <em>--live</em> is specified, affect a running domain.
If <em>--config</em> is specified, affect the next startup of a persistent guest.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. Not specifying any flag is the same as specifying <em>--current</em>.</p>
<p>If <em>--requested-size</em> is specified then <span class="docutils literal">&lt;requested/&gt;</span> under memory target is
changed to requested <em>size</em> (as scaled integer, see <span class="docutils literal">NOTES</span> above). It
defaults to kibibytes if no suffix is provided. The option is valid only for
<span class="docutils literal"><span class="pre">virtio-mem</span></span> memory device model.</p>
</div>
<div class="section" id="change-media">
<h2><a class="toc-backref" href="#id169">change-media</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">change-media domain path [--eject] [--insert]
   [--update] [source] [--force] [[--live] [--config] |
   [--current]] [--print-xml] [--block]</pre>
<p>Change media of CDROM or floppy drive. <em>path</em> can be the fully-qualified path
or the unique target name (&lt;target dev='hdc'&gt;) of the disk device. <em>source</em>
specifies the path of the media to be inserted or updated. The <em>--block</em> flag
allows setting the backing type in case a block device is used as media for the
CDROM or floppy drive instead of a file.</p>
<p><em>--eject</em> indicates the media will be ejected.
<em>--insert</em> indicates the media will be inserted. <em>source</em> must be specified.
If the device has source (e.g. &lt;source file='media'&gt;), and <em>source</em> is not
specified, <em>--update</em> is equal to <em>--eject</em>. If the device has no source,
and <em>source</em> is specified, <em>--update</em> is equal to <em>--insert</em>. If the device
has source, and <em>source</em> is specified, <em>--update</em> behaves like combination
of <em>--eject</em> and <em>--insert</em>.
If none of <em>--eject</em>, <em>--insert</em>, and <em>--update</em> is specified, <em>--update</em>
is used by default.
The <em>--force</em> option can be used to force media changing.
If <em>--live</em> is specified, alter live configuration of running guest.
If <em>--config</em> is specified, alter persistent configuration, effect observed
on next startup of the guest.
<em>--current</em> can be either or both of <em>live</em> and <em>config</em>, depends on
the hypervisor's implementation.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. If no flag is specified, behavior is different depending
on hypervisor.
If <em>--print-xml</em> is specified, the XML that would be used to change media is
printed instead of changing the media.</p>
</div>
</div>
<div class="section" id="nodedev-commands">
<h1><a class="toc-backref" href="#id170">NODEDEV COMMANDS</a></h1>
<p>The following commands manipulate host devices that are intended to be
passed through to guest domains via &lt;hostdev&gt; elements in a domain's
&lt;devices&gt; section.  A node device key is generally specified by the bus
name followed by its address, using underscores between all components,
such as pci_0000_00_02_1, usb_1_5_3, or net_eth1_00_27_13_6a_fe_00.
The <span class="docutils literal"><span class="pre">nodedev-list</span></span> gives the full list of host devices that are known
to libvirt, although this includes devices that cannot be assigned to
a guest (for example, attempting to detach the PCI device that controls
the host's hard disk controller where the guest's disk images live could
cause the host system to lock up or reboot).</p>
<p>For more information on node device definition see:
<a class="reference external" href="https://libvirt.org/formatnode.html">https://libvirt.org/formatnode.html</a>.</p>
<p>Passthrough devices cannot be simultaneously used by the host and its
guest domains, nor by multiple active guests at once.  If the
&lt;hostdev&gt; description of a PCI device includes the attribute <span class="docutils literal"><span class="pre">managed='yes'</span></span>,
and the hypervisor driver supports it, then the device is in managed mode, and
attempts to use that passthrough device in an active guest will
automatically behave as if <span class="docutils literal"><span class="pre">nodedev-detach</span></span> (guest start, device
hot-plug) and <span class="docutils literal"><span class="pre">nodedev-reattach</span></span> (guest stop, device hot-unplug) were
called at the right points.  If a PCI device is not marked as managed,
then it must manually be detached before guests can use it, and manually
reattached to be returned to the host.  Also, if a device is manually detached,
then the host does not regain control of the device without a matching
reattach, even if the guests use the device in managed mode.</p>
<div class="section" id="nodedev-create">
<h2><a class="toc-backref" href="#id171">nodedev-create</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-create FILE</pre>
<p>Create a device on the host node that can then be assigned to virtual
machines. Normally, libvirt is able to automatically determine which
host nodes are available for use, but this allows registration of
host hardware that libvirt did not automatically detect.  <em>file</em>
contains xml for a top-level &lt;device&gt; description of a node device.</p>
</div>
<div class="section" id="nodedev-destroy">
<h2><a class="toc-backref" href="#id172">nodedev-destroy</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-destroy device</pre>
<p>Destroy (stop) a device on the host. <em>device</em> can be either device
name or wwn pair in &quot;wwnn,wwpn&quot; format (only works for vHBA currently).
Note that this makes libvirt quit managing a host device, and may even
make that device unusable by the rest of the physical host until a reboot.</p>
</div>
<div class="section" id="nodedev-define">
<h2><a class="toc-backref" href="#id173">nodedev-define</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-define FILE</pre>
<p>Define an inactive persistent device or modify an existing persistent one from
the XML <em>FILE</em>.</p>
</div>
<div class="section" id="nodedev-undefine">
<h2><a class="toc-backref" href="#id174">nodedev-undefine</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-undefine device</pre>
<p>Undefine the configuration for a persistent device. If the device is active,
make it transient.</p>
</div>
<div class="section" id="nodedev-start">
<h2><a class="toc-backref" href="#id175">nodedev-start</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-start device</pre>
<p>Start a (previously defined) inactive device.</p>
</div>
<div class="section" id="nodedev-detach">
<h2><a class="toc-backref" href="#id176">nodedev-detach</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-detach nodedev [--driver backend_driver]</pre>
<p>Detach <em>nodedev</em> from the host, so that it can safely be used by
guests via &lt;hostdev&gt; passthrough.  This is reversed with
<span class="docutils literal"><span class="pre">nodedev-reattach</span></span>, and is done automatically for managed devices.</p>
<p>Different backend drivers expect the device to be bound to different
dummy devices. For example, QEMU's &quot;vfio&quot; backend driver expects the
device to be bound to vfio-pci. The <em>--driver</em> parameter can be used
to specify the desired backend driver.</p>
</div>
<div class="section" id="nodedev-dumpxml">
<h2><a class="toc-backref" href="#id177">nodedev-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-dumpxml [--xpath EXPRESSION] [--wrap] device</pre>
<p>Dump a &lt;device&gt; XML representation for the given node device, including
such information as the device name, which bus owns the device, the
vendor and product id, and any capabilities of the device usable by
libvirt (such as whether device reset is supported). <em>device</em> can
be either device name or wwn pair in &quot;wwnn,wwpn&quot; format (only works
for HBA).</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="nodedev-info">
<h2><a class="toc-backref" href="#id178">nodedev-info</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-info device</pre>
<p>Returns basic information about the <em>device</em> object.</p>
</div>
<div class="section" id="nodedev-list">
<h2><a class="toc-backref" href="#id179">nodedev-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-list [--cap capability] [--tree] [--inactive | --all]</pre>
<p>List all of the devices available on the node that are known by libvirt.
<em>cap</em> is used to filter the list by capability types, the types must be
separated by comma, e.g. --cap pci,scsi. Valid capability types include
'system', 'pci', 'usb_device', 'usb', 'net', 'scsi_host', 'scsi_target',
'scsi', 'storage', 'fc_host', 'vports', 'scsi_generic', 'drm', 'mdev',
'mdev_types', 'ccw', 'css', 'ap_card', 'ap_queue', 'ap_matrix'. By default,
only active devices are listed. <em>--inactive</em> is used to list only inactive
devices, and <em>-all</em> is used to list both active and inactive devices.
If <em>--tree</em> is used, the output is formatted in a tree representing parents of
each node.  <em>--tree</em> is mutually exclusive with all other options.</p>
</div>
<div class="section" id="nodedev-reattach">
<h2><a class="toc-backref" href="#id180">nodedev-reattach</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-reattach nodedev</pre>
<p>Declare that <em>nodedev</em> is no longer in use by any guests, and that
the host can resume normal use of the device.  This is done
automatically for PCI devices in managed mode and USB devices, but
must be done explicitly to match any explicit <span class="docutils literal"><span class="pre">nodedev-detach</span></span>.</p>
</div>
<div class="section" id="nodedev-reset">
<h2><a class="toc-backref" href="#id181">nodedev-reset</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-reset nodedev</pre>
<p>Trigger a device reset for <em>nodedev</em>, useful prior to transferring
a node device between guest passthrough or the host.  Libvirt will
often do this action implicitly when required, but this command
allows an explicit reset when needed.</p>
</div>
<div class="section" id="nodedev-event">
<h2><a class="toc-backref" href="#id182">nodedev-event</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-event {[nodedev] event [--loop] [--timeout seconds] [--timestamp] | --list}</pre>
<p>Wait for a class of node device events to occur, and print appropriate
details of events as they happen.  The events can optionally be filtered
by <em>nodedev</em>.  Using <em>--list</em> as the only argument will provide a list
of possible <em>event</em> values known by this client, although the connection
might not allow registering for all these events.</p>
<p>By default, this command is one-shot, and returns success once an event
occurs; you can send SIGINT (usually via <span class="docutils literal"><span class="pre">Ctrl-C</span></span>) to quit immediately.
If <em>--timeout</em> is specified, the command gives up waiting for events
after <em>seconds</em> have elapsed.   With <em>--loop</em>, the command prints all
events until a timeout or interrupt key.</p>
<p>When <em>--timestamp</em> is used, a human-readable timestamp will be printed
before the event.</p>
</div>
<div class="section" id="nodedev-autostart">
<h2><a class="toc-backref" href="#id183">nodedev-autostart</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nodedev-autostart [--disable] device</pre>
<p>Configure a device to be automatically started when the host machine boots or
the parent device becomes available. With <em>--disable</em>, the device will be set
to manual mode and will no longer be automatically started by the host. This
command is only supported for persistently-defined mediated devices.</p>
</div>
</div>
<div class="section" id="virtual-network-commands">
<h1><a class="toc-backref" href="#id184">VIRTUAL NETWORK COMMANDS</a></h1>
<p>The following commands manipulate networks. Libvirt has the capability to
define virtual networks which can then be used by domains and linked to
actual network devices. For more detailed information about this feature
see the documentation at <a class="reference external" href="https://libvirt.org/formatnetwork.html">https://libvirt.org/formatnetwork.html</a> . Many
of the commands for virtual networks are similar to the ones used for domains,
but the way to name a virtual network is either by its name or UUID.</p>
<div class="section" id="net-autostart">
<h2><a class="toc-backref" href="#id185">net-autostart</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-autostart network [--disable]</pre>
<p>Configure a virtual network to be automatically started at boot.
The <em>--disable</em> option disable autostarting.</p>
</div>
<div class="section" id="net-create">
<h2><a class="toc-backref" href="#id186">net-create</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-create file [--validate]</pre>
<p>Create a transient (temporary) virtual network from an
XML <em>file</em> and instantiate (start) the network.
See the documentation at <a class="reference external" href="https://libvirt.org/formatnetwork.html">https://libvirt.org/formatnetwork.html</a>
to get a description of the XML network format used by libvirt.</p>
<p>Optionally, the format of the input XML file can be validated against an
internal RNG schema with <em>--validate</em>.</p>
</div>
<div class="section" id="net-define">
<h2><a class="toc-backref" href="#id187">net-define</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-define file [--validate]</pre>
<p>Define an inactive persistent virtual network or modify an existing persistent
one from the XML <em>file</em>.
Optionally, the format of the input XML file can be validated against an
internal RNG schema with <em>--validate</em>.</p>
</div>
<div class="section" id="net-destroy">
<h2><a class="toc-backref" href="#id188">net-destroy</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-destroy network</pre>
<p>Destroy (stop) a given transient or persistent virtual network
specified by its name or UUID. This takes effect immediately.</p>
</div>
<div class="section" id="net-dumpxml">
<h2><a class="toc-backref" href="#id189">net-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-dumpxml [--inactive] [--xpath EXPRESSION] [--wrap] network</pre>
<p>Output the virtual network information as an XML dump to stdout.
If <em>--inactive</em> is specified, then physical functions are not
expanded into their associated virtual functions.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="net-edit">
<h2><a class="toc-backref" href="#id190">net-edit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-edit network</pre>
<p>Edit the XML configuration file for a network.</p>
<p>This is equivalent to:</p>
<pre class="literal-block">virsh net-dumpxml --inactive network &gt; network.xml
vi network.xml (or make changes with your other text editor)
virsh net-define network.xml</pre>
<p>except that it does some error checking.</p>
<p>The editor used can be supplied by the <span class="docutils literal">$VISUAL</span> or <span class="docutils literal">$EDITOR</span> environment
variables, and defaults to <span class="docutils literal">vi</span>.</p>
</div>
<div class="section" id="net-event">
<h2><a class="toc-backref" href="#id191">net-event</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-event {[network] event [--loop] [--timeout seconds] [--timestamp] | --list}</pre>
<p>Wait for a class of network events to occur, and print appropriate details
of events as they happen.  The events can optionally be filtered by
<em>network</em>.  Using <em>--list</em> as the only argument will provide a list
of possible <em>event</em> values known by this client, although the connection
might not allow registering for all these events.</p>
<p>By default, this command is one-shot, and returns success once an event
occurs; you can send SIGINT (usually via <span class="docutils literal"><span class="pre">Ctrl-C</span></span>) to quit immediately.
If <em>--timeout</em> is specified, the command gives up waiting for events
after <em>seconds</em> have elapsed.   With <em>--loop</em>, the command prints all
events until a timeout or interrupt key.</p>
<p>When <em>--timestamp</em> is used, a human-readable timestamp will be printed
before the event.</p>
</div>
<div class="section" id="net-info">
<h2><a class="toc-backref" href="#id192">net-info</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-info network</pre>
<p>Returns basic information about the <em>network</em> object.</p>
</div>
<div class="section" id="net-list">
<h2><a class="toc-backref" href="#id193">net-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-list [--inactive | --all]
   { [--table] | --name | --uuid }
   [--persistent] [&lt;--transient&gt;]
   [--autostart] [&lt;--no-autostart&gt;]</pre>
<p>Returns the list of active networks, if <em>--all</em> is specified this will also
include defined but inactive networks, if <em>--inactive</em> is specified only the
inactive ones will be listed. You may also want to filter the returned networks
by <em>--persistent</em> to list the persistent ones, <em>--transient</em> to list the
transient ones, <em>--autostart</em> to list the ones with autostart enabled, and
<em>--no-autostart</em> to list the ones with autostart disabled.</p>
<p>If <em>--name</em> is specified, network names are printed instead of the table
formatted one per line. If <em>--uuid</em> is specified network's UUID's are printed
instead of names. Flag <em>--table</em> specifies that the legacy table-formatted
output should be used. This is the default. All of these are mutually
exclusive.</p>
<p>NOTE: When talking to older servers, this command is forced to use a series of
API calls with an inherent race, where a pool might not be listed or might appear
more than once if it changed state between calls while the list was being
collected.  Newer servers do not have this problem.</p>
</div>
<div class="section" id="net-name">
<h2><a class="toc-backref" href="#id194">net-name</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-name network-UUID</pre>
<p>Convert a network UUID to network name.</p>
</div>
<div class="section" id="net-start">
<h2><a class="toc-backref" href="#id195">net-start</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-start network</pre>
<p>Start a (previously defined) inactive network.</p>
</div>
<div class="section" id="net-undefine">
<h2><a class="toc-backref" href="#id196">net-undefine</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-undefine network</pre>
<p>Undefine the configuration for a persistent network. If the network is active,
make it transient.</p>
</div>
<div class="section" id="net-uuid">
<h2><a class="toc-backref" href="#id197">net-uuid</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-uuid network-name</pre>
<p>Convert a network name to network UUID.</p>
</div>
<div class="section" id="net-update">
<h2><a class="toc-backref" href="#id198">net-update</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-update network command section xml
   [--parent-index index] [[--live] [--config] | [--current]]</pre>
<p>Update the given section of an existing network definition, with the
changes optionally taking effect immediately, without needing to
destroy and re-start the network.</p>
<p><em>command</em> is one of &quot;add-first&quot;, &quot;add-last&quot;, &quot;add&quot; (a synonym for
add-last), &quot;delete&quot;, or &quot;modify&quot;.</p>
<p><em>section</em> is one of &quot;bridge&quot;, &quot;domain&quot;, &quot;ip&quot;, &quot;ip-dhcp-host&quot;,
&quot;ip-dhcp-range&quot;, &quot;forward&quot;, &quot;forward-interface&quot;, &quot;forward-pf&quot;,
&quot;portgroup&quot;, &quot;dns-host&quot;, &quot;dns-txt&quot;, or &quot;dns-srv&quot;, each section being
named by a concatenation of the xml element hierarchy leading to the
element being changed. For example, &quot;ip-dhcp-host&quot; will change a
&lt;host&gt; element that is contained inside a &lt;dhcp&gt; element inside an
&lt;ip&gt; element of the network.</p>
<p><em>xml</em> is either the text of a complete xml element of the type being
changed (e.g. &quot;&lt;host mac=&quot;00:11:22:33:44:55' ip='1.2.3.4'/&gt;&quot;, or the
name of a file that contains a complete xml element. Disambiguation is
done by looking at the first character of the provided text - if the
first character is &quot;&lt;&quot;, it is xml text, if the first character is not
&quot;&lt;&quot;, it is the name of a file that contains the xml text to be used.</p>
<p>The <em>--parent-index</em> option is used to specify which of several
parent elements the requested element is in (0-based). For example, a
dhcp &lt;host&gt; element could be in any one of multiple &lt;ip&gt; elements in
the network; if a parent-index isn't provided, the &quot;most appropriate&quot;
&lt;ip&gt; element will be selected (usually the only one that already has a
&lt;dhcp&gt; element), but if <em>--parent-index</em> is given, that particular
instance of &lt;ip&gt; will get the modification.</p>
<p>If <em>--live</em> is specified, affect a running network.
If <em>--config</em> is specified, affect the next startup of a persistent network.
If <em>--current</em> is specified, it is equivalent to either <em>--live</em> or
<em>--config</em>, depending on the current state of the guest.
Both <em>--live</em> and <em>--config</em> flags may be given, but <em>--current</em> is
exclusive. Not specifying any flag is the same as specifying <em>--current</em>.</p>
</div>
<div class="section" id="net-dhcp-leases">
<h2><a class="toc-backref" href="#id199">net-dhcp-leases</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-dhcp-leases network [mac]</pre>
<p>Get a list of dhcp leases for all network interfaces connected to the given
virtual <em>network</em> or limited output just for one interface if <em>mac</em> is
specified.</p>
</div>
</div>
<div class="section" id="network-port-commands">
<h1><a class="toc-backref" href="#id200">NETWORK PORT COMMANDS</a></h1>
<p>The following commands manipulate network ports. Libvirt virtual networks
have ports created when a virtual machine has a virtual network interface
added. In general there should be no need to use any of the commands
here, since the hypervisor drivers run these commands are the right
point in a virtual machine's lifecycle. They can be useful for debugging
problems and / or recovering from bugs / stale state.</p>
<div class="section" id="net-port-list">
<h2><a class="toc-backref" href="#id201">net-port-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-port-list { [--table] | --uuid } network</pre>
<p>List all network ports recorded against the network.</p>
<p>If <em>--uuid</em> is specified network ports' UUID's are printed
instead of a table. Flag <em>--table</em> specifies that the legacy
table-formatted output should be used. This is the default.
All of these are mutually exclusive.</p>
</div>
<div class="section" id="net-port-create">
<h2><a class="toc-backref" href="#id202">net-port-create</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-port-create network file [--validate]</pre>
<p>Allocate a new network port reserving resources based on the
port description.
Optionally, the format of the input XML file can be validated against an
internal RNG schema with <em>--validate</em>.</p>
</div>
<div class="section" id="net-port-dumpxml">
<h2><a class="toc-backref" href="#id203">net-port-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-port-dumpxml [--xpath EXPRESSION] [--wrap] network port</pre>
<p>Output the network port information as an XML dump to stdout.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="net-port-delete">
<h2><a class="toc-backref" href="#id204">net-port-delete</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">net-port-delete network port</pre>
<p>Delete record of the network port and release its resources</p>
</div>
</div>
<div class="section" id="interface-commands">
<h1><a class="toc-backref" href="#id205">INTERFACE COMMANDS</a></h1>
<p>The following commands manipulate host interfaces.  Often, these host
interfaces can then be used by name within domain &lt;interface&gt; elements
(such as a system-created bridge interface), but there is no
requirement that host interfaces be tied to any particular guest
configuration XML at all.</p>
<p>Many of the commands for host interfaces are similar to the ones used
for domains, and the way to name an interface is either by its name or
its MAC address.  However, using a MAC address for an <em>iface</em>
argument only works when that address is unique (if an interface and a
bridge share the same MAC address, which is often the case, then using
that MAC address results in an error due to ambiguity, and you must
resort to a name instead).</p>
<div class="section" id="iface-bridge">
<h2><a class="toc-backref" href="#id206">iface-bridge</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-bridge interface bridge [--no-stp] [delay] [--no-start]</pre>
<p>Create a bridge device named <em>bridge</em>, and attach the existing
network device <em>interface</em> to the new bridge.  The new bridge
defaults to starting immediately, with STP enabled and a delay of 0;
these settings can be altered with <em>--no-stp</em>, <em>--no-start</em>, and an
integer number of seconds for <em>delay</em>. All IP address configuration
of <em>interface</em> will be moved to the new bridge device.</p>
<p>See also <span class="docutils literal"><span class="pre">iface-unbridge</span></span> for undoing this operation.</p>
</div>
<div class="section" id="iface-define">
<h2><a class="toc-backref" href="#id207">iface-define</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-define file [--validate]</pre>
<p>Define an inactive persistent physical host interface or modify an existing
persistent one from the XML <em>file</em>. Optionally, the format of the input XML
file can be validated against an internal RNG schema with <em>--validate</em>.</p>
</div>
<div class="section" id="iface-destroy">
<h2><a class="toc-backref" href="#id208">iface-destroy</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-destroy interface</pre>
<p>Destroy (stop) a given host interface, such as by running &quot;if-down&quot; to
disable that interface from active use. This takes effect immediately.</p>
</div>
<div class="section" id="iface-dumpxml">
<h2><a class="toc-backref" href="#id209">iface-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-dumpxml [--inactive] [--xpath EXPRESSION] [--wrap] interface</pre>
<p>Output the host interface information as an XML dump to stdout.  If
<em>--inactive</em> is specified, then the output reflects the persistent
state of the interface that will be used the next time it is started.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="iface-edit">
<h2><a class="toc-backref" href="#id210">iface-edit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-edit interface</pre>
<p>Edit the XML configuration file for a host interface.</p>
<p>This is equivalent to:</p>
<pre class="literal-block">virsh iface-dumpxml iface &gt; iface.xml
vi iface.xml (or make changes with your other text editor)
virsh iface-define iface.xml</pre>
<p>except that it does some error checking.</p>
<p>The editor used can be supplied by the <span class="docutils literal">$VISUAL</span> or <span class="docutils literal">$EDITOR</span> environment
variables, and defaults to <span class="docutils literal">vi</span>.</p>
</div>
<div class="section" id="iface-list">
<h2><a class="toc-backref" href="#id211">iface-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-list [--inactive | --all]</pre>
<p>Returns the list of active host interfaces.  If <em>--all</em> is specified
this will also include defined but inactive interfaces.  If
<em>--inactive</em> is specified only the inactive ones will be listed.</p>
</div>
<div class="section" id="iface-name">
<h2><a class="toc-backref" href="#id212">iface-name</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-name interface</pre>
<p>Convert a host interface MAC to interface name, if the MAC address is unique
among the host's interfaces.</p>
<p><em>interface</em> specifies the interface MAC address.</p>
</div>
<div class="section" id="iface-mac">
<h2><a class="toc-backref" href="#id213">iface-mac</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-mac interface</pre>
<p>Convert a host interface name to MAC address.</p>
<p><em>interface</em> specifies the interface name.</p>
</div>
<div class="section" id="iface-start">
<h2><a class="toc-backref" href="#id214">iface-start</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-start interface</pre>
<p>Start a (previously defined) host interface, such as by running &quot;if-up&quot;.</p>
</div>
<div class="section" id="iface-unbridge">
<h2><a class="toc-backref" href="#id215">iface-unbridge</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-unbridge bridge [--no-start]</pre>
<p>Tear down a bridge device named <em>bridge</em>, releasing its underlying
interface back to normal usage, and moving all IP address
configuration from the bridge device to the underlying device.  The
underlying interface is restarted unless <em>--no-start</em> is present;
this flag is present for symmetry, but generally not recommended.</p>
<p>See also <span class="docutils literal"><span class="pre">iface-bridge</span></span> for creating a bridge.</p>
</div>
<div class="section" id="iface-undefine">
<h2><a class="toc-backref" href="#id216">iface-undefine</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-undefine interface</pre>
<p>Undefine the configuration for an inactive host interface.</p>
</div>
<div class="section" id="iface-begin">
<h2><a class="toc-backref" href="#id217">iface-begin</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-begin</pre>
<p>Create a snapshot of current host interface settings, which can later
be committed (<em>iface-commit</em>) or restored (<em>iface-rollback</em>).  If a
snapshot already exists, then this command will fail until the
previous snapshot has been committed or restored.  Undefined behavior
results if any external changes are made to host interfaces outside of
the libvirt API between the beginning of a snapshot and its eventual
commit or rollback.</p>
</div>
<div class="section" id="iface-commit">
<h2><a class="toc-backref" href="#id218">iface-commit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-commit</pre>
<p>Declare all changes since the last <em>iface-begin</em> as working, and
delete the rollback point.  If no interface snapshot has already been
started, then this command will fail.</p>
</div>
<div class="section" id="iface-rollback">
<h2><a class="toc-backref" href="#id219">iface-rollback</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">iface-rollback</pre>
<p>Revert all host interface settings back to the state recorded in the
last <em>iface-begin</em>.  If no interface snapshot has already been
started, then this command will fail.  Rebooting the host also serves
as an implicit rollback point.</p>
</div>
</div>
<div class="section" id="storage-pool-commands">
<h1><a class="toc-backref" href="#id220">STORAGE POOL COMMANDS</a></h1>
<p>The following commands manipulate storage pools. Libvirt has the
capability to manage various storage solutions, including files, raw
partitions, and domain-specific formats, used to provide the storage
volumes visible as devices within virtual machines. For more detailed
information about this feature, see the documentation at
<a class="reference external" href="https://libvirt.org/formatstorage.html">https://libvirt.org/formatstorage.html</a> . Many of the commands for
pools are similar to the ones used for domains.</p>
<div class="section" id="find-storage-pool-sources">
<h2><a class="toc-backref" href="#id221">find-storage-pool-sources</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">find-storage-pool-sources type [srcSpec]</pre>
<p>Returns XML describing all possible available storage pool sources that
could be used to create or define a storage pool of a given <em>type</em>. If
<em>srcSpec</em> is provided, it is a file that contains XML to further restrict
the query for pools.</p>
<p>Not all storage pools support discovery in this manner. Furthermore, for
those that do support discovery, only specific XML elements are required
in order to return valid data, while other elements and even attributes
of some elements are ignored since they are not necessary to find the pool
based on the search criteria. The following lists the supported <em>type</em>
options and the expected minimal XML elements used to perform the search.</p>
<p>For a &quot;netfs&quot; or &quot;gluster&quot; pool, the minimal expected XML required is the
&lt;host&gt; element with a &quot;name&quot; attribute describing the IP address or hostname
to be used to find the pool. The &quot;port&quot; attribute will be ignored as will
any other provided XML elements in <em>srcSpec</em>.</p>
<p>For a &quot;logical&quot; pool, the contents of the <em>srcSpec</em> file are ignored,
although if provided the file must at least exist.</p>
<p>For an &quot;iscsi&quot; or &quot;iscsi-direct&quot; pool,
the minimal expect XML required is the &lt;host&gt; element
with a &quot;name&quot; attribute describing the IP address or hostname to be used to
find the pool (the iSCSI server address). Optionally, the &quot;port&quot; attribute
may be provided, although it will default to 3260. Optionally, an &lt;initiator&gt;
XML element with a &quot;name&quot; attribute may be provided to further restrict the
iSCSI target search to a specific initiator for multi-iqn iSCSI storage pools.</p>
</div>
<div class="section" id="find-pool-sources-as">
<h2><a class="toc-backref" href="#id222">find-pool-sources-as</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">find-storage-pool-sources-as type [host] [port] [initiator]</pre>
<p>Rather than providing <em>srcSpec</em> XML file for <span class="docutils literal"><span class="pre">find-storage-pool-sources</span></span>
use this command option in order to have virsh generate the query XML file
using the optional arguments. The command will return the same output
XML as <span class="docutils literal"><span class="pre">find-storage-pool-sources</span></span>.</p>
<p>Use <em>host</em> to describe a specific host to use for networked storage, such
as netfs, gluster, and iscsi <em>type</em> pools.</p>
<p>Use <em>port</em> to further restrict which networked port to utilize for the
connection if required by the specific storage backend, such as iscsi.</p>
<p>Use <em>initiator</em> to further restrict the iscsi <em>type</em> pool searches to
specific target initiators.</p>
</div>
<div class="section" id="pool-autostart">
<h2><a class="toc-backref" href="#id223">pool-autostart</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-autostart pool-or-uuid [--disable]</pre>
<p>Configure whether <em>pool</em> should automatically start at boot.</p>
</div>
<div class="section" id="pool-build">
<h2><a class="toc-backref" href="#id224">pool-build</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-build pool-or-uuid [--overwrite] [--no-overwrite]</pre>
<p>Build a given pool.</p>
<p>Options <em>--overwrite</em> and <em>--no-overwrite</em> can only be used for
<span class="docutils literal"><span class="pre">pool-build</span></span> a filesystem, disk, or logical pool.</p>
<p>For a file system pool if neither flag is specified, then <span class="docutils literal"><span class="pre">pool-build</span></span>
just makes the target path directory and no attempt to run mkfs on the
target volume device. If <em>--no-overwrite</em> is specified, it probes to
determine if a filesystem already exists on the target device, returning
an error if one exists or using mkfs to format the target device if not.
If <em>--overwrite</em> is specified, mkfs is always executed and any existing
data on the target device is overwritten unconditionally.</p>
<p>For a disk pool, if neither of them is specified or <em>--no-overwrite</em>
is specified, <span class="docutils literal"><span class="pre">pool-build</span></span> will check the target volume device for
existing filesystems or partitions before attempting to write a new
label on the target volume device. If the target volume device already
has a label, the command will fail. If <em>--overwrite</em> is specified,
then no check will be made on the target volume device prior to writing
a new label. Writing of the label uses the pool source format type
or &quot;dos&quot; if not specified.</p>
<p>For a logical pool, if neither of them is specified or <em>--no-overwrite</em>
is specified, <span class="docutils literal"><span class="pre">pool-build</span></span> will check the target volume devices for
existing filesystems or partitions before attempting to initialize
and format each device for usage by the logical pool. If any target
volume device already has a label, the command will fail. If
<em>--overwrite</em> is specified, then no check will be made on the target
volume devices prior to initializing and formatting each device. Once
all the target volume devices are properly formatted via pvcreate,
the volume group will be created using all the devices.</p>
</div>
<div class="section" id="pool-create">
<h2><a class="toc-backref" href="#id225">pool-create</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-create file [--build] [[--overwrite] | [--no-overwrite]]</pre>
<p>Create and start a pool object from the XML <em>file</em>.</p>
<p>[<em>--build</em>] [[<em>--overwrite</em>] | [<em>--no-overwrite</em>]] perform a
<span class="docutils literal"><span class="pre">pool-build</span></span> after creation in order to remove the need for a
follow-up command to build the pool. The <em>--overwrite</em> and
<em>--no-overwrite</em> flags follow the same rules as <span class="docutils literal"><span class="pre">pool-build</span></span>. If
just <em>--build</em> is provided, then <span class="docutils literal"><span class="pre">pool-build</span></span> is called with no flags.</p>
</div>
<div class="section" id="pool-create-as">
<h2><a class="toc-backref" href="#id226">pool-create-as</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-create-as name type
   [--source-host hostname] [--source-path path] [--source-dev path]
   [--source-name name] [--target path] [--source-format format]
   [--source-initiator initiator-iqn]
   [--auth-type authtype --auth-username username
   [--secret-usage usage | --secret-uuid uuid]]
   [--source-protocol-ver ver]
   [[--adapter-name name] | [--adapter-wwnn wwnn --adapter-wwpn wwpn]
   [--adapter-parent parent |
   --adapter-parent-wwnn parent_wwnn adapter-parent-wwpn parent_wwpn |
   --adapter-parent-fabric-wwn parent_fabric_wwn]]
   [--build] [[--overwrite] | [--no-overwrite]] [--print-xml]</pre>
<p>Create and start a pool object <em>name</em> from the raw parameters.  If
<em>--print-xml</em> is specified, then print the XML of the pool object
without creating the pool.  Otherwise, the pool has the specified
<em>type</em>. When using <span class="docutils literal"><span class="pre">pool-create-as</span></span> for a pool of <em>type</em> &quot;disk&quot;,
the existing partitions found on the <em>--source-dev path</em> will be used
to populate the disk pool. Therefore, it is suggested to use
<span class="docutils literal"><span class="pre">pool-define-as</span></span> and <span class="docutils literal"><span class="pre">pool-build</span></span> with the <em>--overwrite</em> in order
to properly initialize the disk pool.</p>
<p>[<em>--source-host hostname</em>] provides the source hostname for pools backed
by storage from a remote server (pool types netfs, iscsi, rbd, sheepdog,
gluster).</p>
<p>[<em>--source-path path</em>] provides the source directory path for pools backed
by directories (pool type dir).</p>
<p>[<em>--source-dev path</em>] provides the source path for pools backed by physical
devices (pool types fs, logical, disk, iscsi, zfs).</p>
<p>[<em>--source-name name</em>] provides the source name for pools backed by storage
from a named element (pool types logical, rbd, sheepdog, gluster).</p>
<p>[<em>--target path</em>] is the path for the mapping of the storage pool into
the host file system.</p>
<p>[<em>--source-format format</em>] provides information about the format of the
pool (pool types fs, netfs, disk, logical).</p>
<p>[<em>--source-initiator initiator-iqn</em>] provides the initiator iqn for iscsi
connection of the pool (pool type iscsi-direct).</p>
<p>[<em>--auth-type authtype</em> <em>--auth-username username</em>
[<em>--secret-usage usage</em> | <em>--secret-uuid uuid</em>]]
provides the elements required to generate authentication credentials for
the storage pool. The <em>authtype</em> is either chap for iscsi <em>type</em> pools or
ceph for rbd <em>type</em> pools. Either the secret <em>usage</em> or <em>uuid</em> value may
be provided, but not both.</p>
<p>[<em>--source-protocol-ver ver</em>] provides the NFS protocol version number used
to contact the server's NFS service via nfs mount option 'nfsvers=n'. It is
expect the <em>ver</em> value is an unsigned integer.</p>
<p>[<em>--adapter-name name</em>] defines the scsi_hostN adapter name to be used for
the scsi_host adapter type pool.</p>
<p>[<em>--adapter-wwnn wwnn</em> <em>--adapter-wwpn wwpn</em> [<em>--adapter-parent parent</em> |
<em>--adapter-parent-wwnn parent_wwnn</em> <em>adapter-parent-wwpn parent_wwpn</em> |
<em>--adapter-parent-fabric-wwn parent_fabric_wwn</em>]]
defines the wwnn and wwpn to be used for the fc_host adapter type pool.
Optionally provide the parent scsi_hostN node device to be used for the
vHBA either by parent name, parent_wwnn and parent_wwpn, or parent_fabric_wwn.
The parent name could change between reboots if the hardware environment
changes, so providing the parent_wwnn and parent_wwpn ensure usage of the
same physical HBA even if the scsi_hostN node device changes. Usage of the
parent_fabric_wwn allows a bit more flexibility to choose an HBA on the
same storage fabric in order to define the pool.</p>
<p>[<em>--build</em>] [[<em>--overwrite</em>] | [<em>--no-overwrite</em>]] perform a
<span class="docutils literal"><span class="pre">pool-build</span></span> after creation in order to remove the need for a
follow-up command to build the pool. The <em>--overwrite</em> and
<em>--no-overwrite</em> flags follow the same rules as <span class="docutils literal"><span class="pre">pool-build</span></span>. If
just <em>--build</em> is provided, then <span class="docutils literal"><span class="pre">pool-build</span></span> is called with no flags.</p>
<p>For a &quot;logical&quot; pool only [<em>--name</em>] needs to be provided. The
[<em>--source-name</em>] if provided must match the Volume Group name.
If not provided, one will be generated using the [<em>--name</em>]. If
provided the [<em>--target</em>] is ignored and a target source is generated
using the [<em>--source-name</em>] (or as generated from the [<em>--name</em>]).</p>
</div>
<div class="section" id="pool-define">
<h2><a class="toc-backref" href="#id227">pool-define</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-define file [--validate]</pre>
<p>Define an inactive persistent storage pool or modify an existing persistent one
from the XML <em>file</em>.
Optionally, the format of the input XML file can be validated against an
internal RNG schema with <em>--validate</em>.</p>
</div>
<div class="section" id="pool-define-as">
<h2><a class="toc-backref" href="#id228">pool-define-as</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-define-as name type
   [--source-host hostname] [--source-path path] [--source-dev path]
   [*--source-name name*] [*--target path*] [*--source-format format*]
   [--source-initiator initiator-iqn]
   [*--auth-type authtype* *--auth-username username*
   [*--secret-usage usage* | *--secret-uuid uuid*]]
   [*--source-protocol-ver ver*]
   [[*--adapter-name name*] | [*--adapter-wwnn* *--adapter-wwpn*]
   [*--adapter-parent parent*]] [*--print-xml*]</pre>
<p>Create, but do not start, a pool object <em>name</em> from the raw parameters.  If
<em>--print-xml</em> is specified, then print the XML of the pool object
without defining the pool.  Otherwise, the pool has the specified
<em>type</em>.</p>
<p>Use the same arguments as <span class="docutils literal"><span class="pre">pool-create-as</span></span>, except for the <em>--build</em>,
<em>--overwrite</em>, and <em>--no-overwrite</em> options.</p>
</div>
<div class="section" id="pool-destroy">
<h2><a class="toc-backref" href="#id229">pool-destroy</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-destroy pool-or-uuid</pre>
<p>Destroy (stop) a given <em>pool</em> object. Libvirt will no longer manage the
storage described by the pool object, but the raw data contained in
the pool is not changed, and can be later recovered with
<span class="docutils literal"><span class="pre">pool-create</span></span>.</p>
</div>
<div class="section" id="pool-delete">
<h2><a class="toc-backref" href="#id230">pool-delete</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-delete pool-or-uuid</pre>
<p>Destroy the resources used by a given <em>pool</em> object. This operation
is non-recoverable.  The <em>pool</em> object will still exist after this
command, ready for the creation of new storage volumes.</p>
</div>
<div class="section" id="pool-dumpxml">
<h2><a class="toc-backref" href="#id231">pool-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-dumpxml [--inactive] [--xpath EXPRESSION] [--wrap] pool-or-uuid</pre>
<p>Returns the XML information about the <em>pool</em> object.
<em>--inactive</em> tells virsh to dump pool configuration that will be used
on next start of the pool as opposed to the current pool configuration.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="pool-edit">
<h2><a class="toc-backref" href="#id232">pool-edit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-edit pool-or-uuid</pre>
<p>Edit the XML configuration file for a storage pool.</p>
<p>This is equivalent to:</p>
<pre class="literal-block">virsh pool-dumpxml pool &gt; pool.xml
vi pool.xml (or make changes with your other text editor)
virsh pool-define pool.xml</pre>
<p>except that it does some error checking.</p>
<p>The editor used can be supplied by the <span class="docutils literal">$VISUAL</span> or <span class="docutils literal">$EDITOR</span> environment
variables, and defaults to <span class="docutils literal">vi</span>.</p>
</div>
<div class="section" id="pool-info">
<h2><a class="toc-backref" href="#id233">pool-info</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-info [--bytes] pool-or-uuid</pre>
<p>Returns basic information about the <em>pool</em> object. If <em>--bytes</em> is specified the sizes
of basic info are not converted to human friendly units.</p>
</div>
<div class="section" id="pool-list">
<h2><a class="toc-backref" href="#id234">pool-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-list [--inactive] [--all]
   [--persistent] [--transient]
   [--autostart] [--no-autostart]
   [[--details] [--uuid]
   [--name] [&lt;type&gt;]</pre>
<p>List pool objects known to libvirt.  By default, only active pools
are listed; <em>--inactive</em> lists just the inactive pools, and <em>--all</em>
lists all pools.</p>
<p>In addition, there are several sets of filtering flags. <em>--persistent</em> is to
list the persistent pools, <em>--transient</em> is to list the transient pools.
<em>--autostart</em> lists the autostarting pools, <em>--no-autostart</em> lists the pools
with autostarting disabled. If <em>--uuid</em> is specified only pool's UUIDs are printed.
If <em>--name</em> is specified only pool's names are printed. If both <em>--name</em>
and <em>--uuid</em> are specified, pool's UUID and names are printed side by side
without any header. Option <em>--details</em> is mutually exclusive with options
<em>--uuid</em> and <em>--name</em>.</p>
<p>You may also want to list pools with specified types using <em>type</em>, the
pool types must be separated by comma, e.g. --type dir,disk. The valid pool
types include 'dir', 'fs', 'netfs', 'logical', 'disk', 'iscsi', 'scsi',
'mpath', 'rbd', 'sheepdog', 'gluster', 'zfs', 'vstorage' and 'iscsi-direct'.</p>
<p>The <em>--details</em> option instructs virsh to additionally
display pool persistence and capacity related information where available.</p>
<p>NOTE: When talking to older servers, this command is forced to use a series of
API calls with an inherent race, where a pool might not be listed or might appear
more than once if it changed state between calls while the list was being
collected.  Newer servers do not have this problem.</p>
</div>
<div class="section" id="pool-name">
<h2><a class="toc-backref" href="#id235">pool-name</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-name uuid</pre>
<p>Convert the <em>uuid</em> to a pool name.</p>
</div>
<div class="section" id="pool-refresh">
<h2><a class="toc-backref" href="#id236">pool-refresh</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-refresh pool-or-uuid</pre>
<p>Refresh the list of volumes contained in <em>pool</em>.</p>
</div>
<div class="section" id="pool-start">
<h2><a class="toc-backref" href="#id237">pool-start</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-start pool-or-uuid [--build] [[--overwrite] | [--no-overwrite]]</pre>
<p>Start the storage <em>pool</em>, which is previously defined but inactive.</p>
<p>[<em>--build</em>] [[<em>--overwrite</em>] | [<em>--no-overwrite</em>]] perform a
<span class="docutils literal"><span class="pre">pool-build</span></span> prior to <span class="docutils literal"><span class="pre">pool-start</span></span> to ensure the pool environment is
in an expected state rather than needing to run the build command prior
to startup. The <em>--overwrite</em> and <em>--no-overwrite</em> flags follow the
same rules as <span class="docutils literal"><span class="pre">pool-build</span></span>. If just <em>--build</em> is provided, then
<span class="docutils literal"><span class="pre">pool-build</span></span> is called with no flags.</p>
<p><span class="docutils literal">Note</span>: A storage pool that relies on remote resources such as an
&quot;iscsi&quot; or a (v)HBA backed &quot;scsi&quot; pool may need to be refreshed multiple
times in order to have all the volumes detected (see <span class="docutils literal"><span class="pre">pool-refresh</span></span>).
This is because the corresponding volume devices may not be present in
the host's filesystem during the initial pool startup or the current
refresh attempt. The number of refresh retries is dependent upon the
network connection and the time the host takes to export the
corresponding devices.</p>
</div>
<div class="section" id="pool-undefine">
<h2><a class="toc-backref" href="#id238">pool-undefine</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-undefine pool-or-uuid</pre>
<p>Undefine the configuration for an inactive <em>pool</em>.</p>
</div>
<div class="section" id="pool-uuid">
<h2><a class="toc-backref" href="#id239">pool-uuid</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-uuid pool</pre>
<p>Returns the UUID of the named <em>pool</em>.</p>
</div>
<div class="section" id="pool-event">
<h2><a class="toc-backref" href="#id240">pool-event</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">pool-event {[pool] event [--loop] [--timeout seconds] [--timestamp] | --list}</pre>
<p>Wait for a class of storage pool events to occur, and print appropriate
details of events as they happen.  The events can optionally be filtered
by <em>pool</em>.  Using <em>--list</em> as the only argument will provide a list
of possible <em>event</em> values known by this client, although the connection
might not allow registering for all these events.</p>
<p>By default, this command is one-shot, and returns success once an event
occurs; you can send SIGINT (usually via <span class="docutils literal"><span class="pre">Ctrl-C</span></span>) to quit immediately.
If <em>--timeout</em> is specified, the command gives up waiting for events
after <em>seconds</em> have elapsed.   With <em>--loop</em>, the command prints all
events until a timeout or interrupt key.</p>
<p>When <em>--timestamp</em> is used, a human-readable timestamp will be printed
before the event.</p>
</div>
</div>
<div class="section" id="volume-commands">
<h1><a class="toc-backref" href="#id241">VOLUME COMMANDS</a></h1>
<div class="section" id="vol-create">
<h2><a class="toc-backref" href="#id242">vol-create</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-create pool-or-uuid FILE [--prealloc-metadata]</pre>
<p>Create a volume from an XML &lt;file&gt;.</p>
<p><em>pool-or-uuid</em> is the name or UUID of the storage pool to create the volume in.</p>
<p><em>FILE</em> is the XML &lt;file&gt; with the volume definition. An easy way to create the
XML &lt;file&gt; is to use the <span class="docutils literal"><span class="pre">vol-dumpxml</span></span> command to obtain the definition of a
pre-existing volume.</p>
<p>[<em>--prealloc-metadata</em>] preallocate metadata (for qcow2 images which don't
support full allocation). This option creates a sparse image file with metadata,
resulting in higher performance compared to images with no preallocation and
only slightly higher initial disk space usage.</p>
<p><strong>Example:</strong></p>
<pre class="literal-block">virsh vol-dumpxml --pool storagepool1 appvolume1 &gt; newvolume.xml
vi newvolume.xml (or make changes with your other text editor)
virsh vol-create differentstoragepool newvolume.xml</pre>
</div>
<div class="section" id="vol-create-from">
<h2><a class="toc-backref" href="#id243">vol-create-from</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-create-from pool-or-uuid FILE vol-name-or-key-or-path
   [--inputpool pool-or-uuid]  [--prealloc-metadata] [--reflink]</pre>
<p>Create a volume, using another volume as input.</p>
<p><em>pool-or-uuid</em> is the name or UUID of the storage pool to create the volume in.</p>
<p><em>FILE</em> is the XML &lt;file&gt; with the volume definition.</p>
<p><em>vol-name-or-key-or-path</em> is the name or key or path of the source volume.</p>
<p><em>--inputpool</em> <em>pool-or-uuid</em> is the name or uuid of the storage pool the
source volume is in.</p>
<p>[<em>--prealloc-metadata</em>] preallocate metadata (for qcow2 images which don't
support full allocation). This option creates a sparse image file with metadata,
resulting in higher performance compared to images with no preallocation and
only slightly higher initial disk space usage.</p>
<p>When <em>--reflink</em> is specified, perform a COW lightweight copy,
where the data blocks are copied only when modified.
If this is not possible, the copy fails.</p>
</div>
<div class="section" id="vol-create-as">
<h2><a class="toc-backref" href="#id244">vol-create-as</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-create-as pool-or-uuid name capacity [--allocation size] [--format string]
   [--backing-vol vol-name-or-key-or-path]
   [--backing-vol-format string] [--prealloc-metadata] [--print-xml]</pre>
<p>Create a volume from a set of arguments unless <em>--print-xml</em> is specified, in
which case just the XML of the volume object is printed out without any actual
object creation.</p>
<p><em>pool-or-uuid</em> is the name or UUID of the storage pool to create the volume
in.</p>
<p><em>name</em> is the name of the new volume. For a disk pool, this must match the
partition name as determined from the pool's source device path and the next
available partition. For example, a source device path of /dev/sdb and there
are no partitions on the disk, then the name must be sdb1 with the next
name being sdb2 and so on.</p>
<p><em>capacity</em> is the size of the volume to be created, as a scaled integer
(see <span class="docutils literal">NOTES</span> above), defaulting to bytes if there is no suffix.</p>
<p><em>--allocation</em> <em>size</em> is the initial size to be allocated in the volume,
also as a scaled integer defaulting to bytes.</p>
<p><em>--format</em> <em>string</em> is used in file based storage pools to specify the volume
file format to use; raw, bochs, qcow, qcow2, vmdk, qed. Use extended for disk
storage pools in order to create an extended partition (other values are
validity checked but not preserved when libvirtd is restarted or the pool
is refreshed).</p>
<p><em>--backing-vol</em> <em>vol-name-or-key-or-path</em> is the source backing
volume to be used if taking a snapshot of an existing volume.</p>
<p><em>--backing-vol-format</em> <em>string</em> is the format of the snapshot backing volume;
raw, bochs, qcow, qcow2, qed, vmdk, host_device. These are, however, meant for
file based storage pools.</p>
<p>[<em>--prealloc-metadata</em>] preallocate metadata (for qcow2 images which don't
support full allocation). This option creates a sparse image file with metadata,
resulting in higher performance compared to images with no preallocation and
only slightly higher initial disk space usage.</p>
</div>
<div class="section" id="vol-clone">
<h2><a class="toc-backref" href="#id245">vol-clone</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-clone vol-name-or-key-or-path name
   [--pool pool-or-uuid] [--prealloc-metadata] [--reflink]</pre>
<p>Clone an existing volume within the parent pool.  Less powerful,
but easier to type, version of <span class="docutils literal"><span class="pre">vol-create-from</span></span>.</p>
<p><em>vol-name-or-key-or-path</em> is the name or key or path of the source volume.</p>
<p><em>name</em> is the name of the new volume.</p>
<p><em>--pool</em> <em>pool-or-uuid</em> is the name or UUID of the storage pool
that contains the source volume and will contain the new volume.
If the source volume name is provided instead of the key or path, then
providing the pool is necessary to find the volume to be cloned; otherwise,
the first volume found by the key or path will be used.</p>
<p>[<em>--prealloc-metadata</em>] preallocate metadata (for qcow2 images which don't
support full allocation). This option creates a sparse image file with metadata,
resulting in higher performance compared to images with no preallocation and
only slightly higher initial disk space usage.</p>
<p>When <em>--reflink</em> is specified, perform a COW lightweight copy,
where the data blocks are copied only when modified.
If this is not possible, the copy fails.</p>
</div>
<div class="section" id="vol-delete">
<h2><a class="toc-backref" href="#id246">vol-delete</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-delete vol-name-or-key-or-path [--pool pool-or-uuid] [--delete-snapshots]</pre>
<p>Delete a given volume.</p>
<p><em>vol-name-or-key-or-path</em> is the volume name or key or path of the volume
to delete.</p>
<p>[<em>--pool</em> <em>pool-or-uuid</em>] is the name or UUID of the storage pool the volume
is in. If the volume name is provided instead of the key or path, then
providing the pool is necessary to find the volume to be deleted; otherwise,
the first volume found by the key or path will be used.</p>
<p>The <em>--delete-snapshots</em> flag specifies that any snapshots associated with
the storage volume should be deleted as well. Not all storage drivers
support this option, presently only rbd.</p>
</div>
<div class="section" id="vol-upload">
<h2><a class="toc-backref" href="#id247">vol-upload</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-upload vol-name-or-key-or-path local-file
   [--pool pool-or-uuid] [--offset bytes]
   [--length bytes] [--sparse]</pre>
<p>Upload the contents of <em>local-file</em> to a storage volume.</p>
<p><em>vol-name-or-key-or-path</em> is the name or key or path of the volume where the
<em>local-file</em> will be uploaded.</p>
<p><em>--pool</em> <em>pool-or-uuid</em> is the name or UUID of the storage pool the volume
is in. If the volume name is provided instead of the key or path, then
providing the pool is necessary to find the volume to be uploaded into;
otherwise, the first volume found by the key or path will be used.</p>
<p><em>--offset</em> is the position in the storage volume at which to start writing
the data. The value must be 0 or larger.</p>
<p><em>--length</em> is an upper bound of the amount of data to be uploaded.
A negative value is interpreted as an unsigned long long value to
essentially include everything from the offset to the end of the volume.</p>
<p>If <em>--sparse</em> is specified, this command will preserve volume sparseness.</p>
<p>An error will occur if the <em>local-file</em> is greater than the specified
<em>length</em>.</p>
<p>See the description for the libvirt virStorageVolUpload API for details
regarding possible target volume and pool changes as a result of the
pool refresh when the upload is attempted.</p>
</div>
<div class="section" id="vol-download">
<h2><a class="toc-backref" href="#id248">vol-download</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-download vol-name-or-key-or-path local-file
   [--pool pool-or-uuid] [--offset bytes] [--length bytes]
   [--sparse]</pre>
<p>Download the contents of a storage volume to <em>local-file</em>.</p>
<p><em>vol-name-or-key-or-path</em> is the name or key or path of the volume to
download into <em>local-file</em>.</p>
<p><em>--pool</em> <em>pool-or-uuid</em> is the name or UUID of the storage pool the volume
is in. If the volume name is provided instead of the key or path, then
providing the pool is necessary to find the volume to be uploaded into;
otherwise, the first volume found by the key or path will be used.</p>
<p><em>--offset</em> is the position in the storage volume at which to start reading
the data. The value must be 0 or larger.</p>
<p><em>--length</em> is an upper bound of the amount of data to be downloaded.
A negative value is interpreted as an unsigned long long value to
essentially include everything from the offset to the end of the volume.</p>
<p>If <em>--sparse</em> is specified, this command will preserve volume sparseness.</p>
</div>
<div class="section" id="vol-wipe">
<h2><a class="toc-backref" href="#id249">vol-wipe</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-wipe vol-name-or-key-or-path [--pool pool-or-uuid] [--algorithm algorithm]</pre>
<p>Wipe a volume, ensure data previously on the volume is not accessible to
future reads.</p>
<p><em>vol-name-or-key-or-path</em> is the name or key or path of the volume to wipe.
It is possible to choose different wiping algorithms instead of re-writing
volume with zeroes.</p>
<p><em>--pool</em> <em>pool-or-uuid</em> is the name or UUID of the storage pool the
volume is in. If the volume name is provided instead of the key or path,
then providing the pool is necessary to find the volume to be wiped;
otherwise, the first volume found by the key or path will be used.</p>
<p>Use the <em>--algorithm</em> switch choosing from the list of the following
algorithms in order to define which algorithm to use for the wipe.</p>
<p><span class="docutils literal">Supported algorithms</span></p>
<ul class="simple">
<li><p>zero       - 1-pass all zeroes</p></li>
<li><p>nnsa       - 4-pass NNSA Policy Letter NAP-14.1-C (XVI-8) for
sanitizing removable and non-removable hard disks:
random x2, 0x00, verify.</p></li>
<li><p>dod        - 4-pass DoD 5220.22-M section 8-306 procedure for
sanitizing removable and non-removable rigid
disks: random, 0x00, 0xff, verify.</p></li>
<li><p>bsi        - 9-pass method recommended by the German Center of
Security in Information Technologies
(<a class="reference external" href="https://www.bsi.bund.de">https://www.bsi.bund.de</a>): 0xff, 0xfe, 0xfd, 0xfb,
0xf7, 0xef, 0xdf, 0xbf, 0x7f.</p></li>
<li><p>gutmann    - The canonical 35-pass sequence described in
Gutmann's paper.</p></li>
<li><p>schneier   - 7-pass method described by Bruce Schneier in
&quot;Applied Cryptography&quot; (1996): 0x00, 0xff, random x5.</p></li>
<li><p>pfitzner7  - Roy Pfitzner's 7-random-pass method: random x7.</p></li>
<li><p>pfitzner33 - Roy Pfitzner's 33-random-pass method: random x33.</p></li>
<li><p>random     - 1-pass pattern: random.</p></li>
<li><p>trim       - 1-pass trimming the volume using TRIM or DISCARD</p></li>
</ul>
<p><span class="docutils literal">Note</span>: The <span class="docutils literal">scrub</span> binary will be used to handle the 'nnsa', 'dod',
'bsi', 'gutmann', 'schneier', 'pfitzner7' and 'pfitzner33' algorithms.
The availability of the algorithms may be limited by the version of
the <span class="docutils literal">scrub</span> binary installed on the host. The 'zero' algorithm will
write zeroes to the entire volume. For some volumes, such as sparse
or rbd volumes, this may result in completely filling the volume with
zeroes making it appear to be completely full. As an alternative, the
'trim' algorithm does not overwrite all the data in a volume, rather
it expects the storage driver to be able to discard all bytes in a
volume. It is up to the storage driver to handle how the discarding
occurs. Not all storage drivers or volume types can support 'trim'.</p>
</div>
<div class="section" id="vol-dumpxml">
<h2><a class="toc-backref" href="#id250">vol-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-dumpxml [--pool pool-or-uuid] [--xpath EXPRESSION] [--wrap]
            vol-name-or-key-or-path</pre>
<p>Output the volume information as an XML dump to stdout.</p>
<p><em>vol-name-or-key-or-path</em> is the name or key or path of the volume
to output the XML.</p>
<p><em>--pool</em> <em>pool-or-uuid</em> is the name or UUID of the storage pool the volume
is in. If the volume name is provided instead of the key or path, then
providing the pool is necessary to find the volume to be uploaded into;
otherwise, the first volume found by the key or path will be used.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="vol-info">
<h2><a class="toc-backref" href="#id251">vol-info</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-info vol-name-or-key-or-path [--pool pool-or-uuid] [--bytes] [--physical]</pre>
<p>Returns basic information about the given storage volume.</p>
<p><em>vol-name-or-key-or-path</em> is the name or key or path of the volume
to return information for.</p>
<p><em>--pool</em> <em>pool-or-uuid</em> is the name or UUID of the storage pool the volume
is in. If the volume name is provided instead of the key or path, then
providing the pool is necessary to find the volume to be uploaded into;
otherwise, the first volume found by the key or path will be used.</p>
<p>If <em>--bytes</em> is specified the sizes are not converted to human friendly
units.</p>
<p>If <em>--physical</em> is specified, then the host physical size is returned
and displayed instead of the allocation value. The physical value for
some file types, such as qcow2 may have a different (larger) physical
value than is shown for allocation. Additionally sparse files will
have different physical and allocation values.</p>
</div>
<div class="section" id="vol-list">
<h2><a class="toc-backref" href="#id252">vol-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-list [--pool pool-or-uuid] [--details]</pre>
<p>Return the list of volumes in the given storage pool.</p>
<p><em>--pool</em> <em>pool-or-uuid</em> is the name or UUID of the storage pool.</p>
<p>The <em>--details</em> option instructs virsh to additionally display volume
type and capacity related information where available.</p>
</div>
<div class="section" id="vol-pool">
<h2><a class="toc-backref" href="#id253">vol-pool</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-pool vol-key-or-path [--uuid]</pre>
<p>Return the pool name or UUID for a given volume. By default, the pool name is
returned.</p>
<p><em>vol-key-or-path</em> is the key or path of the volume to return the pool
information.</p>
<p>If the <em>--uuid</em> option is given, the pool UUID is returned instead.</p>
</div>
<div class="section" id="vol-path">
<h2><a class="toc-backref" href="#id254">vol-path</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-path vol-name-or-key [--pool pool-or-uuid]</pre>
<p>Return the path for a given volume.</p>
<p><em>vol-name-or-key</em> is the name or key of the volume to return the path.</p>
<p><em>--pool</em> <em>pool-or-uuid</em> is the name or UUID of the storage pool the volume
is in. If the volume name is provided instead of the key, then providing
the pool is necessary to find the volume to be uploaded into; otherwise,
the first volume found by the key will be used.</p>
</div>
<div class="section" id="vol-name">
<h2><a class="toc-backref" href="#id255">vol-name</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-name vol-key-or-path</pre>
<p>Return the name for a given volume.</p>
<p><em>vol-key-or-path</em> is the key or path of the volume to return the name.</p>
</div>
<div class="section" id="vol-key">
<h2><a class="toc-backref" href="#id256">vol-key</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-key vol-name-or-path [--pool pool-or-uuid]</pre>
<p>Return the volume key for a given volume.</p>
<p><em>vol-name-or-path</em> is the name or path of the volume to return the
volume key.</p>
<p><em>--pool</em> <em>pool-or-uuid</em> is the name or UUID of the storage pool the volume
is in. If the volume name is provided instead of the path, then providing
the pool is necessary to find the volume to be uploaded into; otherwise,
the first volume found by the path will be used.</p>
</div>
<div class="section" id="vol-resize">
<h2><a class="toc-backref" href="#id257">vol-resize</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">vol-resize vol-name-or-path capacity [--pool pool-or-uuid] [--allocate] [--delta] [--shrink]</pre>
<p>Resize the capacity of the given volume, in bytes.</p>
<p><em>vol-name-or-key-or-path</em> is the name or key or path of the volume
to resize.</p>
<p><em>capacity</em> is a scaled integer (see <span class="docutils literal">NOTES</span> above) for the volume,
which defaults to bytes if there is no suffix.</p>
<p><em>--pool</em> <em>pool-or-uuid</em> is the name or UUID of the storage pool the volume
is in. If the volume name is provided instead of the key or path, then
providing the pool is necessary to find the volume to be uploaded into;
otherwise, the first volume found by the key or path will be used.</p>
<p>The new <em>capacity</em> might be sparse unless <em>--allocate</em> is specified.</p>
<p>Normally, <em>capacity</em> is the new size, but if <em>--delta</em>
is present, then it is added to the existing size.</p>
<p>Attempts to shrink the volume will fail unless <em>--shrink</em> is present.
The <em>capacity</em> cannot be negative unless <em>--shrink</em> is provided, but
a negative sign is not necessary.</p>
<p>This command is only safe for storage volumes not in use by an active
guest; see also <span class="docutils literal">blockresize</span> for live resizing.</p>
</div>
</div>
<div class="section" id="secret-commands">
<h1><a class="toc-backref" href="#id258">SECRET COMMANDS</a></h1>
<p>The following commands manipulate &quot;secrets&quot; (e.g. passwords, passphrases and
encryption keys).  Libvirt can store secrets independently from their use, and
other objects (e.g. volumes or domains) can refer to the secrets for encryption
or possibly other uses.  Secrets are identified using a UUID.  See
<a class="reference external" href="https://libvirt.org/formatsecret.html">https://libvirt.org/formatsecret.html</a> for documentation of the XML format
used to represent properties of secrets.</p>
<div class="section" id="secret-define">
<h2><a class="toc-backref" href="#id259">secret-define</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">secret-define file [--validate]</pre>
<p>Create a secret with the properties specified in <em>file</em>, with no associated
secret value.  If <em>file</em> does not specify a UUID, choose one automatically.
If <em>file</em> specifies a UUID of an existing secret, replace its properties by
properties defined in <em>file</em>, without affecting the secret value.</p>
<p>Optionally, the format of the input XML file can be validated against an
internal RNG schema with <em>--validate</em>.</p>
</div>
<div class="section" id="secret-dumpxml">
<h2><a class="toc-backref" href="#id260">secret-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">secret-dumpxml [--xpath EXPRESSION] [--wrap] secret</pre>
<p>Output properties of <em>secret</em> (specified by its UUID) as an XML dump to stdout.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="secret-event">
<h2><a class="toc-backref" href="#id261">secret-event</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">secret-event {[secret] event [--loop] [--timeout seconds] [--timestamp] | --list}</pre>
<p>Wait for a class of secret events to occur, and print appropriate details
of events as they happen.  The events can optionally be filtered by
<em>secret</em>.  Using <em>--list</em> as the only argument will provide a list
of possible <em>event</em> values known by this client, although the connection
might not allow registering for all these events.</p>
<p>By default, this command is one-shot, and returns success once an event
occurs; you can send SIGINT (usually via <span class="docutils literal"><span class="pre">Ctrl-C</span></span>) to quit immediately.
If <em>--timeout</em> is specified, the command gives up waiting for events
after <em>seconds</em> have elapsed.   With <em>--loop</em>, the command prints all
events until a timeout or interrupt key.</p>
<p>When <em>--timestamp</em> is used, a human-readable timestamp will be printed
before the event.</p>
</div>
<div class="section" id="secret-set-value">
<h2><a class="toc-backref" href="#id262">secret-set-value</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">secret-set-value secret (--file filename [--plain] | --interactive | base64)</pre>
<p>Set the value associated with <em>secret</em> (specified by its UUID) to the value
Base64-encoded value <em>base64</em> or Base-64-encoded contents of file named
<em>filename</em>. Using the <em>--plain</em> flag is together with <em>--file</em> allows one to
use the file contents directly as the secret value.</p>
<p>If <em>--interactive</em> flag is used the secret value is read as a password from the
terminal.</p>
<p>Note that <em>--file</em>, <em>--interactive</em> and <em>base64</em> options are mutually exclusive.</p>
<p>Passing secrets via the <em>base64</em> option on command line is INSECURE and
deprecated. Use the <em>--file</em> option instead.</p>
</div>
<div class="section" id="secret-get-value">
<h2><a class="toc-backref" href="#id263">secret-get-value</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">secret-get-value [--plain] secret</pre>
<p>Output the value associated with <em>secret</em> (specified by its UUID) to stdout,
encoded using Base64.</p>
<p>If the <em>--plain</em> flag is used the value is not base64 encoded, but rather
printed raw. Note that unless virsh is started in quiet mode (<em>virsh -q</em>) it
prints a newline at the end of the command. This newline is not part of the
secret.</p>
</div>
<div class="section" id="secret-undefine">
<h2><a class="toc-backref" href="#id264">secret-undefine</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">secret-undefine secret</pre>
<p>Delete a <em>secret</em> (specified by its UUID), including the associated value, if
any.</p>
</div>
<div class="section" id="secret-list">
<h2><a class="toc-backref" href="#id265">secret-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">secret-list [--ephemeral] [--no-ephemeral]
   [--private] [--no-private]</pre>
<p>Returns the list of secrets. You may also want to filter the returned secrets
by <em>--ephemeral</em> to list the ephemeral ones, <em>--no-ephemeral</em> to list the
non-ephemeral ones, <em>--private</em> to list the private ones, and
<em>--no-private</em> to list the non-private ones.</p>
</div>
</div>
<div class="section" id="snapshot-commands">
<h1><a class="toc-backref" href="#id266">SNAPSHOT COMMANDS</a></h1>
<p>The following commands manipulate domain snapshots.  Snapshots take the
disk, memory, and device state of a domain at a point-of-time, and save it
for future use.  They have many uses, from saving a &quot;clean&quot; copy of an OS
image to saving a domain's state before a potentially destructive operation.
Snapshots are identified with a unique name.  See
<a class="reference external" href="https://libvirt.org/formatsnapshot.html">https://libvirt.org/formatsnapshot.html</a> for documentation of the XML format
used to represent properties of snapshots.</p>
<div class="section" id="snapshot-create">
<h2><a class="toc-backref" href="#id267">snapshot-create</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">snapshot-create domain [xmlfile] {[--redefine [--current]] |
   [--no-metadata] [--halt] [--disk-only] [--reuse-external]
   [--quiesce] [--atomic] [--live]} [--validate]</pre>
<p>Create a snapshot for domain <em>domain</em> with the properties specified in
<em>xmlfile</em>.   Optionally, the <em>--validate</em> option can be passed to
validate the format of the input XML file against an internal RNG
schema (identical to using the virt-xml-validate(1) tool). Normally,
the only properties settable for a domain snapshot
are the &lt;name&gt; and &lt;description&gt; elements, as well as &lt;disks&gt; if
<em>--disk-only</em> is given; the rest of the fields are
ignored, and automatically filled in by libvirt.  If <em>xmlfile</em> is
completely omitted, then libvirt will choose a value for all fields.
The new snapshot will become current, as listed by <span class="docutils literal"><span class="pre">snapshot-current</span></span>.</p>
<p>If <em>--halt</em> is specified, the domain will be left in an inactive state
after the snapshot is created.</p>
<p>If <em>--disk-only</em> is specified, the snapshot will only include disk
content rather than the usual full system snapshot with vm state.  Disk
snapshots are captured faster than full system snapshots, but reverting to a
disk snapshot may require fsck or journal replays, since it is like
the disk state at the point when the power cord is abruptly pulled;
and mixing <em>--halt</em> and <em>--disk-only</em> loses any data that was not
flushed to disk at the time.</p>
<p>If <em>--redefine</em> is specified, then all XML elements produced by
<span class="docutils literal"><span class="pre">snapshot-dumpxml</span></span> are valid; this can be used to migrate snapshot
hierarchy from one machine to another, to recreate hierarchy for the
case of a transient domain that goes away and is later recreated with
the same name and UUID, or to make slight alterations in the snapshot
metadata (such as host-specific aspects of the domain XML embedded in
the snapshot).  When this flag is supplied, the <em>xmlfile</em> argument
is mandatory, and the domain's current snapshot will not be altered
unless the <em>--current</em> flag is also given.</p>
<p>If <em>--no-metadata</em> is specified, then the snapshot data is created,
but any metadata is immediately discarded (that is, libvirt does not
treat the snapshot as current, and cannot revert to the snapshot
unless <em>--redefine</em> is later used to teach libvirt about the
metadata again).</p>
<p>If <em>--reuse-external</em> is specified, and the snapshot XML requests an
external snapshot with a destination of an existing file, then the
destination must exist and be pre-created with correct format and
metadata. The file is then reused; otherwise, a snapshot is refused
to avoid losing contents of the existing files.</p>
<p>If <em>--quiesce</em> is specified, libvirt will try to use guest agent
to freeze and unfreeze domain's mounted file systems. However,
if domain has no guest agent, snapshot creation will fail.
Currently, this requires <em>--disk-only</em> to be passed as well.</p>
<p>If <em>--atomic</em> is specified, libvirt will guarantee that the snapshot
either succeeds, or fails with no changes; not all hypervisors support
this.  If this flag is not specified, then some hypervisors may fail
after partially performing the action, and <span class="docutils literal">dumpxml</span> must be used to
see whether any partial changes occurred.</p>
<p>If <em>--live</em> is specified, libvirt takes the snapshot while
the guest is running. Both disk snapshot and domain memory snapshot are
taken. This increases the size of the memory image of the external
snapshot. This is currently supported only for full system external snapshots.</p>
<p>Existence of snapshot metadata will prevent attempts to <span class="docutils literal">undefine</span>
a persistent guest.  However, for transient domains, snapshot
metadata is silently lost when the domain quits running (whether
by command such as <span class="docutils literal">destroy</span> or by internal guest action).</p>
<p>For now, it is not possible to create snapshots in a domain that has
checkpoints, although this restriction will be lifted in a future
release.</p>
</div>
<div class="section" id="snapshot-create-as">
<h2><a class="toc-backref" href="#id268">snapshot-create-as</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">snapshot-create-as domain {[--print-xml] [--no-metadata]
   [--halt] [--reuse-external]} [name]
   [description] [--disk-only [--quiesce]] [--atomic] [--validate]
   [[--live] [--memspec memspec]] [--diskspec] diskspec]...</pre>
<p>Create a snapshot for domain <em>domain</em> with the given &lt;name&gt; and
&lt;description&gt;; if either value is omitted, libvirt will choose a
value.  If <em>--print-xml</em> is specified, then XML appropriate for
<em>snapshot-create</em> is output, rather than actually creating a snapshot.
Otherwise, if <em>--halt</em> is specified, the domain will be left in an
inactive state after the snapshot is created, and if <em>--disk-only</em>
is specified, the snapshot will not include vm state.</p>
<p>The <em>--memspec</em> option can be used to control whether a full system snapshot
is internal or external.  The <em>--memspec</em> flag is mandatory, followed
by a <span class="docutils literal">memspec</span> of the form <span class="docutils literal"><span class="pre">[file=]name[,snapshot=type]</span></span>, where
type can be <span class="docutils literal">no</span>, <span class="docutils literal">internal</span>, or <span class="docutils literal">external</span>.  To include a literal
comma in <span class="docutils literal">file=name</span>, escape it with a second comma. <em>--memspec</em> cannot
be used together with <em>--disk-only</em>.</p>
<p>The <em>--diskspec</em> option can be used to control how <em>--disk-only</em> and
external full system snapshots create external files.  This option can occur
multiple times, according to the number of &lt;disk&gt; elements in the domain
xml.  Each &lt;diskspec&gt; is in the
form <span class="docutils literal"><span class="pre">disk[,snapshot=type][,driver=type][,stype=type][,file=name]</span></span>.
A <em>diskspec</em> must be provided for disks backed by block devices as libvirt
doesn't auto-generate file names for those.  The optional <span class="docutils literal">stype</span> parameter
allows one to control the type of the source file. Supported values are 'file'
(default) and 'block'. To exclude a disk from an external snapshot use
<span class="docutils literal"><span class="pre">--diskspec</span> disk,snapshot=no</span>.</p>
<p>To include a literal comma in <span class="docutils literal">disk</span> or in <span class="docutils literal">file=name</span>, escape it with a
second comma.  A literal <em>--diskspec</em> must precede each <span class="docutils literal">diskspec</span> unless
all three of <em>domain</em>, <em>name</em>, and <em>description</em> are also present.
For example, a diskspec of &quot;vda,snapshot=external,file=/path/to,,new&quot;
results in the following XML:</p>
<pre class="literal-block">&lt;disk name='vda' snapshot='external'&gt;
  &lt;source file='/path/to,new'/&gt;
&lt;/disk&gt;</pre>
<p>If <em>--reuse-external</em> is specified, and the domain XML or <em>diskspec</em>
option requests an external snapshot with a destination of an existing
file, then the destination must exist and be pre-created with correct
format and metadata. The file is then reused; otherwise, a snapshot
is refused to avoid losing contents of the existing files.</p>
<p>If <em>--quiesce</em> is specified, libvirt will try to use guest agent
to freeze and unfreeze domain's mounted file systems. However,
if domain has no guest agent, snapshot creation will fail.
Currently, this requires <em>--disk-only</em> to be passed as well.</p>
<p>If <em>--no-metadata</em> is specified, then the snapshot data is created,
but any metadata is immediately discarded (that is, libvirt does not
treat the snapshot as current, and cannot revert to the snapshot
unless <span class="docutils literal"><span class="pre">snapshot-create</span></span> is later used to teach libvirt about the
metadata again).</p>
<p>If <em>--atomic</em> is specified, libvirt will guarantee that the snapshot
either succeeds, or fails with no changes; not all hypervisors support
this.  If this flag is not specified, then some hypervisors may fail
after partially performing the action, and <span class="docutils literal">dumpxml</span> must be used to
see whether any partial changes occurred.</p>
<p>If <em>--live</em> is specified, libvirt takes the snapshot while the guest is
running. This increases the size of the memory image of the external
snapshot. This is currently supported only for external full system snapshots.</p>
<p>For now, it is not possible to create snapshots in a domain that has
checkpoints, although this restriction will be lifted in a future
release.</p>
<p>Optionally, the <em>--validate</em> option can be passed to validate XML document
which is internally generated by this command against the internal RNG schema.</p>
</div>
<div class="section" id="snapshot-current">
<h2><a class="toc-backref" href="#id269">snapshot-current</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">snapshot-current domain {[--name] | [--security-info] | [snapshotname]}</pre>
<p>Without <em>snapshotname</em>, this will output the snapshot XML for the domain's
current snapshot (if any).  If <em>--name</em> is specified, just the
current snapshot name instead of the full xml.  Otherwise, using
<em>--security-info</em> will also include security sensitive information in
the XML.</p>
<p>With <em>snapshotname</em>, this is a request to make the existing named
snapshot become the current snapshot, without reverting the domain.</p>
</div>
<div class="section" id="snapshot-edit">
<h2><a class="toc-backref" href="#id270">snapshot-edit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">snapshot-edit domain [snapshotname] [--current] {[--rename] | [--clone]}</pre>
<p>Edit the XML configuration file for <em>snapshotname</em> of a domain.  If
both <em>snapshotname</em> and <em>--current</em> are specified, also force the
edited snapshot to become the current snapshot.  If <em>snapshotname</em>
is omitted, then <em>--current</em> must be supplied, to edit the current
snapshot.</p>
<p>This is equivalent to:</p>
<pre class="literal-block">virsh snapshot-dumpxml dom name &gt; snapshot.xml
vi snapshot.xml (or make changes with your other text editor)
virsh snapshot-create dom snapshot.xml --redefine [--current]</pre>
<p>except that it does some error checking.</p>
<p>The editor used can be supplied by the <span class="docutils literal">$VISUAL</span> or <span class="docutils literal">$EDITOR</span> environment
variables, and defaults to <span class="docutils literal">vi</span>.</p>
<p>If <em>--rename</em> is specified, then the edits can change the snapshot
name.  If <em>--clone</em> is specified, then changing the snapshot name
will create a clone of the snapshot metadata.  If neither is specified,
then the edits must not change the snapshot name.  Note that changing
a snapshot name must be done with care, since the contents of some
snapshots, such as internal snapshots within a single qcow2 file, are
accessible only from the original name.</p>
</div>
<div class="section" id="snapshot-info">
<h2><a class="toc-backref" href="#id271">snapshot-info</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">snapshot-info domain {snapshot | --current}</pre>
<p>Output basic information about a named &lt;snapshot&gt;, or the current snapshot
with <em>--current</em>.</p>
</div>
<div class="section" id="snapshot-list">
<h2><a class="toc-backref" href="#id272">snapshot-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">snapshot-list domain [--metadata] [--no-metadata]
   [{--parent | --roots | [{--tree | --name}]}] [--topological]
   [{[--from] snapshot | --current} [--descendants]]
   [--leaves] [--no-leaves] [--inactive] [--active]
   [--disk-only] [--internal] [--external]</pre>
<p>List all of the available snapshots for the given domain, defaulting
to show columns for the snapshot name, creation time, and domain state.</p>
<p>Normally, table form output is sorted by snapshot name; using
<em>--topological</em> instead sorts so that no child is listed before its
ancestors (although there may be more than one possible ordering with
this property).</p>
<p>If <em>--parent</em> is specified, add a column to the output table giving
the name of the parent of each snapshot.  If <em>--roots</em> is specified,
the list will be filtered to just snapshots that have no parents.
If <em>--tree</em> is specified, the output will be in a tree format, listing
just snapshot names.  These three options are mutually exclusive. If
<em>--name</em> is specified only the snapshot name is printed. This option is
mutually exclusive with <em>--tree</em>.</p>
<p>If <em>--from</em> is provided, filter the list to snapshots which are
children of the given <span class="docutils literal">snapshot</span>; or if <em>--current</em> is provided,
start at the current snapshot.  When used in isolation or with
<em>--parent</em>, the list is limited to direct children unless
<em>--descendants</em> is also present.  When used with <em>--tree</em>, the
use of <em>--descendants</em> is implied.  This option is not compatible
with <em>--roots</em>.  Note that the starting point of <em>--from</em> or
<em>--current</em> is not included in the list unless the <em>--tree</em>
option is also present.</p>
<p>If <em>--leaves</em> is specified, the list will be filtered to just
snapshots that have no children.  Likewise, if <em>--no-leaves</em> is
specified, the list will be filtered to just snapshots with
children.  (Note that omitting both options does no filtering,
while providing both options will either produce the same list
or error out depending on whether the server recognizes the flags).
Filtering options are not compatible with <em>--tree</em>.</p>
<p>If <em>--metadata</em> is specified, the list will be filtered to just
snapshots that involve libvirt metadata, and thus would prevent
<span class="docutils literal">undefine</span> of a persistent guest, or be lost on <span class="docutils literal">destroy</span> of
a transient domain.  Likewise, if <em>--no-metadata</em> is specified,
the list will be filtered to just snapshots that exist without
the need for libvirt metadata.</p>
<p>If <em>--inactive</em> is specified, the list will be filtered to snapshots
that were taken when the domain was shut off.  If <em>--active</em> is
specified, the list will be filtered to snapshots that were taken
when the domain was running, and where the snapshot includes the
memory state to revert to that running state.  If <em>--disk-only</em> is
specified, the list will be filtered to snapshots that were taken
when the domain was running, but where the snapshot includes only
disk state.</p>
<p>If <em>--internal</em> is specified, the list will be filtered to snapshots
that use internal storage of existing disk images.  If <em>--external</em>
is specified, the list will be filtered to snapshots that use external
files for disk images or memory state.</p>
</div>
<div class="section" id="snapshot-dumpxml">
<h2><a class="toc-backref" href="#id273">snapshot-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">snapshot-dumpxml [--security-info] [--xpath EXPRESSION] [--wrap]
                 domain snapshot</pre>
<p>Output the snapshot XML for the domain's snapshot named <em>snapshot</em>.
Using <em>--security-info</em> will also include security sensitive information.
Use <span class="docutils literal"><span class="pre">snapshot-current</span></span> to easily access the XML of the current snapshot.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="snapshot-parent">
<h2><a class="toc-backref" href="#id274">snapshot-parent</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">snapshot-parent domain {snapshot | --current}</pre>
<p>Output the name of the parent snapshot, if any, for the given
<em>snapshot</em>, or for the current snapshot with <em>--current</em>.</p>
</div>
<div class="section" id="snapshot-revert">
<h2><a class="toc-backref" href="#id275">snapshot-revert</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">snapshot-revert domain {snapshot | --current} [{--running | --paused}]
   [--force] [--reset-nvram]</pre>
<p>Revert the given domain to the snapshot specified by <em>snapshot</em>, or to
the current snapshot with <em>--current</em>.  Be aware
that this is a destructive action; any changes in the domain since the last
snapshot was taken will be lost.  Also note that the state of the domain after
snapshot-revert is complete will be the state of the domain at the time
the original snapshot was taken.</p>
<p>Normally, reverting to a snapshot leaves the domain in the state it was
at the time the snapshot was created, except that a disk snapshot with
no vm state leaves the domain in an inactive state.  Passing either the
<em>--running</em> or <em>--paused</em> flag will perform additional state changes
(such as booting an inactive domain, or pausing a running domain).  Since
transient domains cannot be inactive, it is required to use one of these
flags when reverting to a disk snapshot of a transient domain.</p>
<p>Since libvirt 7.10.0 the VM process is always restarted so the following
paragraph is no longer valid. If the snapshot metadata lacks the full
VM XML it's no longer possible to revert to such snapshot.</p>
<p>There are a number of cases where a snapshot revert involves extra risk, which
requires the use of <em>--force</em> to proceed:</p>
<blockquote>
<ul class="simple">
<li><p>One is the case of a snapshot that lacks full domain information for
reverting configuration (such as snapshots created prior to libvirt
0.9.5); since libvirt cannot prove that the current configuration matches
what was in use at the time of the snapshot, supplying <em>--force</em> assures
libvirt that the snapshot is compatible with the current configuration
(and if it is not, the domain will likely fail to run).</p></li>
<li><p>Another is the case of reverting from a running domain to an active
state where a new hypervisor has to be created rather than reusing the
existing hypervisor, because it implies drawbacks such as breaking any
existing VNC or Spice connections; this condition happens with an active
snapshot that uses a provably incompatible configuration, as well as with
an inactive snapshot that is combined with the <em>--start</em> or <em>--pause</em>
flag.</p></li>
<li><p>Also, libvirt will refuse to restore snapshots of inactive QEMU domains
while there is managed saved state. This is because those snapshots do not
contain memory state and will therefore not replace the existing memory
state. This ends up switching a disk underneath a running system and will
likely cause extensive filesystem corruption or crashes due to swap content
mismatches when run.</p></li>
</ul>
</blockquote>
<p>If <em>--reset-nvram</em> is specified, any existing NVRAM file will be deleted
and re-initialized from its pristine template.</p>
</div>
<div class="section" id="snapshot-delete">
<h2><a class="toc-backref" href="#id276">snapshot-delete</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">snapshot-delete domain {snapshot | --current}
   [--metadata] [{--children | --children-only}]</pre>
<p>Delete the snapshot for the domain named <em>snapshot</em>, or the current
snapshot with <em>--current</em>.  If this snapshot
has child snapshots, changes from this snapshot will be merged into the
children.  If <em>--children</em> is passed, then delete this snapshot and any
children of this snapshot.  If <em>--children-only</em> is passed, then delete
any children of this snapshot, but leave this snapshot intact.  These
two flags are mutually exclusive.</p>
<p>If <em>--metadata</em> is specified, then only delete the snapshot metadata
maintained by libvirt, while leaving the snapshot contents intact for
access by external tools; otherwise deleting a snapshot also removes
the data contents from that point in time.</p>
</div>
</div>
<div class="section" id="checkpoint-commands">
<h1><a class="toc-backref" href="#id277">CHECKPOINT COMMANDS</a></h1>
<p>The following commands manipulate domain checkpoints.  Checkpoints serve as
a point in time to identify which portions of a guest's disks have changed
after that time, making it possible to perform incremental and differential
backups.  Checkpoints are identified with a unique name.  See
<a class="reference external" href="https://libvirt.org/formatcheckpoint.html">https://libvirt.org/formatcheckpoint.html</a> for documentation of the XML
format used to represent properties of checkpoints.</p>
<div class="section" id="checkpoint-create">
<h2><a class="toc-backref" href="#id278">checkpoint-create</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">checkpoint-create domain [xmlfile] { --redefine [--redefine-validate] | [--quiesce]}</pre>
<p>Create a checkpoint for domain <em>domain</em> with the properties specified
in <em>xmlfile</em> describing a &lt;domaincheckpoint&gt; top-level element. The
format of the input XML file will be validated against an internal RNG
schema (identical to using the virt-xml-validate(1) tool). If
<em>xmlfile</em> is completely omitted, then libvirt will create a
checkpoint with a name based on the current time.</p>
<p>If <em>--redefine</em> is specified, then all XML elements produced by
<span class="docutils literal"><span class="pre">checkpoint-dumpxml</span></span> are valid; this can be used to migrate
checkpoint hierarchy from one machine to another, to recreate
hierarchy for the case of a transient domain that goes away and is
later recreated with the same name and UUID, or to make slight
alterations in the checkpoint metadata (such as host-specific aspects
of the domain XML embedded in the checkpoint).  When this flag is
supplied, the <em>xmlfile</em> argument is mandatory.</p>
<p>If <em>--redefine-validate</em> is specified along with <em>--redefine</em> the hypervisor
performs validation of metadata associated with the checkpoint stored in places
besides the checkpoint XML. Note that some hypervisors may require that the
domain is running to perform validation.</p>
<p>If <em>--quiesce</em> is specified, libvirt will try to use guest agent
to freeze and unfreeze domain's mounted file systems. However,
if domain has no guest agent, checkpoint creation will fail.</p>
<p>Existence of checkpoint metadata will prevent attempts to <span class="docutils literal">undefine</span>
a persistent guest.  However, for transient domains, checkpoint
metadata is silently lost when the domain quits running (whether
by command such as <span class="docutils literal">destroy</span> or by internal guest action).</p>
<p>For now, it is not possible to create checkpoints in a domain that has
snapshots, although this restriction will be lifted in a future
release.</p>
</div>
<div class="section" id="checkpoint-create-as">
<h2><a class="toc-backref" href="#id279">checkpoint-create-as</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">checkpoint-create-as domain [--print-xml] [name]
   [description] [--quiesce] [--diskspec] diskspec]...</pre>
<p>Create a checkpoint for domain <em>domain</em> with the given &lt;name&gt; and
&lt;description&gt;; if either value is omitted, libvirt will choose a
value.  If <em>--print-xml</em> is specified, then XML appropriate for
<em>checkpoint-create</em> is output, rather than actually creating a
checkpoint.</p>
<p>The <em>--diskspec</em> option can be used to control which guest disks
participate in the checkpoint. This option can occur multiple times,
according to the number of &lt;disk&gt; elements in the domain xml.  Each
&lt;diskspec&gt; is in the form <span class="docutils literal"><span class="pre">disk[,checkpoint=type][,bitmap=name]</span></span>. A
literal <em>--diskspec</em> must precede each <span class="docutils literal">diskspec</span> unless
all three of <em>domain</em>, <em>name</em>, and <em>description</em> are also present.
For example, a diskspec of &quot;vda,checkpoint=bitmap,bitmap=map1&quot;
results in the following XML:</p>
<pre class="literal-block">&lt;disk name='vda' checkpoint='bitmap' bitmap='map1'/&gt;</pre>
<p>If <em>--quiesce</em> is specified, libvirt will try to use guest agent
to freeze and unfreeze domain's mounted file systems. However,
if domain has no guest agent, checkpoint creation will fail.</p>
<p>For now, it is not possible to create checkpoints in a domain that has
snapshots, although this restriction will be lifted in a future
release.</p>
</div>
<div class="section" id="checkpoint-edit">
<h2><a class="toc-backref" href="#id280">checkpoint-edit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">checkpoint-edit domain checkpointname</pre>
<p>Edit the XML configuration file for <em>checkpointname</em> of a domain.</p>
<p>This is equivalent to:</p>
<pre class="literal-block">virsh checkpoint-dumpxml dom name &gt; checkpoint.xml
vi checkpoint.xml (or make changes with your other text editor)
virsh checkpoint-create dom checkpoint.xml --redefine</pre>
<p>except that it does some error checking, including that the edits
should not attempt to change the checkpoint name.</p>
<p>The editor used can be supplied by the <span class="docutils literal">$VISUAL</span> or <span class="docutils literal">$EDITOR</span> environment
variables, and defaults to <span class="docutils literal">vi</span>.</p>
</div>
<div class="section" id="checkpoint-info">
<h2><a class="toc-backref" href="#id281">checkpoint-info</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">checkpoint-info domain checkpoint</pre>
<p>Output basic information about a named &lt;checkpoint&gt;.</p>
</div>
<div class="section" id="checkpoint-list">
<h2><a class="toc-backref" href="#id282">checkpoint-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">checkpoint-list domain [{--parent | --roots |
   [{--tree | --name}]}] [--topological]
   [[--from] checkpoint | [--descendants]]
   [--leaves] [--no-leaves]</pre>
<p>List all of the available checkpoints for the given domain, defaulting
to show columns for the checkpoint name and creation time.</p>
<p>Normally, table form output is sorted by checkpoint name; using
<em>--topological</em> instead sorts so that no child is listed before its
ancestors (although there may be more than one possible ordering with
this property).</p>
<p>If <em>--parent</em> is specified, add a column to the output table giving
the name of the parent of each checkpoint.  If <em>--roots</em> is
specified, the list will be filtered to just checkpoints that have no
parents.  If <em>--tree</em> is specified, the output will be in a tree
format, listing just checkpoint names.  These three options are
mutually exclusive. If <em>--name</em> is specified only the checkpoint name
is printed. This option is mutually exclusive with <em>--tree</em>.</p>
<p>If <em>--from</em> is provided, filter the list to checkpoints which are
children of the given <span class="docutils literal">checkpoint</span>.  When used in isolation or with
<em>--parent</em>, the list is limited to direct children unless
<em>--descendants</em> is also present.  When used with <em>--tree</em>, the use
of <em>--descendants</em> is implied.  This option is not compatible with
<em>--roots</em>.  Note that the starting point of <em>--from</em>
is not included in the list unless the <em>--tree</em> option is also
present.</p>
<p>If <em>--leaves</em> is specified, the list will be filtered to just
checkpoints that have no children.  Likewise, if <em>--no-leaves</em> is
specified, the list will be filtered to just checkpoints with
children.  (Note that omitting both options does no filtering, while
providing both options will either produce the same list or error out
depending on whether the server recognizes the flags).  Filtering
options are not compatible with <em>--tree</em>.</p>
</div>
<div class="section" id="checkpoint-dumpxml">
<h2><a class="toc-backref" href="#id283">checkpoint-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">checkpoint-dumpxml [--security-info] [--no-domain] [--size]
                   [--xpath EXPRESSION] [--wrap] domain checkpoint</pre>
<p>Output the checkpoint XML for the domain's checkpoint named
<em>checkpoint</em>.  Using
<em>--security-info</em> will also include security sensitive information.</p>
<p>Using <em>--size</em> will add XML indicating the current size in bytes of
guest data that has changed since the checkpoint was created (although
remember that guest activity between a size check and actually
creating a backup can result in the backup needing slightly more
space). Note that some hypervisors may require that <em>domain</em> is running when
<em>--size</em> is used.</p>
<p>Using <em>--no-domain</em> will omit the &lt;domain&gt; element from the
output for a more compact view.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="checkpoint-parent">
<h2><a class="toc-backref" href="#id284">checkpoint-parent</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">checkpoint-parent domain checkpoint</pre>
<p>Output the name of the parent checkpoint, if any, for the given
<em>checkpoint</em>.</p>
</div>
<div class="section" id="checkpoint-delete">
<h2><a class="toc-backref" href="#id285">checkpoint-delete</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">checkpoint-delete domain checkpoint
   [--metadata] [{--children | --children-only}]</pre>
<p>Delete the checkpoint for the domain named <em>checkpoint</em>.  The
record of which portions of
the disk changed since the checkpoint are merged into the parent
checkpoint (if any). If <em>--children</em> is passed, then delete this
checkpoint and any children of this checkpoint.  If <em>--children-only</em>
is passed, then delete any children of this checkpoint, but leave this
checkpoint intact. These two flags are mutually exclusive.</p>
<p>If <em>--metadata</em> is specified, then only delete the checkpoint
metadata maintained by libvirt, while leaving the checkpoint contents
intact for access by external tools; otherwise deleting a checkpoint
also removes the ability to perform an incremental backup from that
point in time.</p>
</div>
</div>
<div class="section" id="nwfilter-commands">
<h1><a class="toc-backref" href="#id286">NWFILTER COMMANDS</a></h1>
<p>The following commands manipulate network filters. Network filters allow
filtering of the network traffic coming from and going to virtual machines.
Individual network traffic filters are written in XML and may contain
references to other network filters, describe traffic filtering rules,
or contain both. Network filters are referenced by virtual machines
from within their interface description. A network filter may be referenced
by multiple virtual machines' interfaces.</p>
<div class="section" id="nwfilter-define">
<h2><a class="toc-backref" href="#id287">nwfilter-define</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nwfilter-define xmlfile [--validate]</pre>
<p>Make a new network filter known to libvirt. If a network filter with
the same name already exists, it will be replaced with the new XML.
Any running virtual machine referencing this network filter will have
its network traffic rules adapted. If for any reason the network traffic
filtering rules cannot be instantiated by any of the running virtual
machines, then the new XML will be rejected.</p>
<p>Optionally, the format of the input XML file can be validated against an
internal RNG schema with <em>--validate</em>.</p>
</div>
<div class="section" id="nwfilter-undefine">
<h2><a class="toc-backref" href="#id288">nwfilter-undefine</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nwfilter-undefine nwfilter-name</pre>
<p>Delete a network filter. The deletion will fail if any running virtual
machine is currently using this network filter.</p>
</div>
<div class="section" id="nwfilter-list">
<h2><a class="toc-backref" href="#id289">nwfilter-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nwfilter-list</pre>
<p>List all of the available network filters.</p>
</div>
<div class="section" id="nwfilter-dumpxml">
<h2><a class="toc-backref" href="#id290">nwfilter-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nwfilter-dumpxml [--xpath EXPRESSION] [--wrap] nwfilter-name</pre>
<p>Output the network filter XML.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
<div class="section" id="nwfilter-edit">
<h2><a class="toc-backref" href="#id291">nwfilter-edit</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nwfilter-edit nwfilter-name</pre>
<p>Edit the XML of a network filter.</p>
<p>This is equivalent to:</p>
<pre class="literal-block">virsh nwfilter-dumpxml myfilter &gt; myfilter.xml
vi myfilter.xml (or make changes with your other text editor)
virsh nwfilter-define myfilter.xml</pre>
<p>except that it does some error checking.
The new network filter may be rejected due to the same reason as
mentioned in <em>nwfilter-define</em>.</p>
<p>The editor used can be supplied by the <span class="docutils literal">$VISUAL</span> or <span class="docutils literal">$EDITOR</span> environment
variables, and defaults to <span class="docutils literal">vi</span>.</p>
</div>
</div>
<div class="section" id="nwfilter-binding-commands">
<h1><a class="toc-backref" href="#id292">NWFILTER BINDING COMMANDS</a></h1>
<p>The following commands manipulate network filter bindings. Network filter
bindings track the association between a network port and a network
filter. Generally the bindings are managed automatically by the hypervisor
drivers when adding/removing NICs on a guest.</p>
<p>If an admin is creating/deleting TAP devices for non-guest usage,
however, the network filter binding commands provide a way to make use
of the network filters directly.</p>
<div class="section" id="nwfilter-binding-create">
<h2><a class="toc-backref" href="#id293">nwfilter-binding-create</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nwfilter-binding-create xmlfile [--validate]</pre>
<p>Associate a network port with a network filter. The network filter backend
will immediately attempt to instantiate the filter rules on the port. This
command may be used to associate a filter with a currently running guest
that does not have a filter defined for a specific network port. Since the
bindings are generally automatically managed by the hypervisor, using this
command to define a filter for a network port and then starting the guest
afterwards may prevent the guest from starting if it attempts to use the
network port and finds a filter already defined.</p>
<p>Optionally, the format of the input XML file can be validated against an
internal RNG schema with <em>--validate</em>.</p>
</div>
<div class="section" id="nwfilter-binding-delete">
<h2><a class="toc-backref" href="#id294">nwfilter-binding-delete</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nwfilter-binding-delete port-name</pre>
<p>Disassociate a network port from a network filter. The network filter
backend will immediately tear down the filter rules that exist on the
port. This command may be used to remove the network port binding for
a filter currently in use for the guest while the guest is running
without needing to restart the guest. Restoring the network port binding
filter for the running guest would be accomplished by using
<em>nwfilter-binding-create</em>.</p>
</div>
<div class="section" id="nwfilter-binding-list">
<h2><a class="toc-backref" href="#id295">nwfilter-binding-list</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nwfilter-binding-list</pre>
<p>List all of the network ports which have filters associated with them.</p>
</div>
<div class="section" id="nwfilter-binding-dumpxml">
<h2><a class="toc-backref" href="#id296">nwfilter-binding-dumpxml</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">nwfilter-binding-dumpxml [--xpath EXPRESSION] [--wrap] port-name</pre>
<p>Output the network filter binding XML for the network device called
<span class="docutils literal"><span class="pre">port-name</span></span>.</p>
<p>If the <strong>--xpath</strong> argument provides an XPath expression, it will be
evaluated against the output XML and only those matching nodes will
be printed. The default behaviour is to print each matching node as
a standalone document, however, for ease of additional processing,
the <strong>--wrap</strong> argument will cause the matching node to be wrapped
in a common root node.</p>
</div>
</div>
<div class="section" id="hypervisor-specific-commands">
<h1><a class="toc-backref" href="#id297">HYPERVISOR-SPECIFIC COMMANDS</a></h1>
<p>NOTE: Use of the following commands is <span class="docutils literal">strongly</span> discouraged.  They
can cause libvirt to become confused and do the wrong thing on subsequent
operations.  Once you have used these commands, please do not report
problems to the libvirt developers; the reports will be ignored.  If
you find that these commands are the only way to accomplish something,
then it is better to request that the feature be added as a first-class
citizen in the regular libvirt library.</p>
<div class="section" id="qemu-attach">
<h2><a class="toc-backref" href="#id298">qemu-attach</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">qemu-attach pid</pre>
<p>Attach an externally launched QEMU process to the libvirt QEMU driver.
The QEMU process must have been created with a monitor connection
using the UNIX driver. Ideally the process will also have had the
'-name' argument specified.</p>
<pre class="literal-block">$ qemu-kvm -cdrom ~/demo.iso \
    -monitor unix:/tmp/demo,server,nowait \
    -name foo \
    -uuid cece4f9f-dff0-575d-0e8e-01fe380f12ea  &amp;
$ QEMUPID=$!
$ virsh qemu-attach $QEMUPID</pre>
<p>Not all functions of libvirt are expected to work reliably after
attaching to an externally launched QEMU process. There may be
issues with the guest ABI changing upon migration and device hotplug
or hotunplug may not work. The attached environment should be considered
primarily read-only.</p>
</div>
<div class="section" id="qemu-monitor-command">
<h2><a class="toc-backref" href="#id299">qemu-monitor-command</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">qemu-monitor-command domain { [--hmp] | [--pretty] [--return-value] [--force] }
    [--pass-fds N,M,...] command...</pre>
<p>Send an arbitrary monitor command <em>command</em> to domain <em>domain</em> through the
QEMU monitor.  The results of the command will be printed on stdout.</p>
<p>If more than one argument is provided for <em>command</em>, they are concatenated with
a space in between before passing the single command to the monitor.</p>
<p>Note that libvirt uses the QMP to talk to qemu so <em>command</em> must be valid JSON
in QMP format to work properly. If <em>command</em> is not a JSON object libvirt tries
to wrap it as a JSON object to provide convenient interface such as the groups
of commands with identical handling:</p>
<pre class="literal-block"># simple command
$ virsh qemu-monitor-command VM commandname
$ virsh qemu-monitor-command VM '{&quot;execute&quot;:&quot;commandname&quot;}'

# with arguments
$ virsh qemu-monitor-command VM commandname '&quot;arg1&quot;:123' '&quot;arg2&quot;:&quot;test&quot;'
$ virsh qemu-monitor-command VM commandname '{&quot;arg1&quot;:123,&quot;arg2&quot;:&quot;test&quot;}'
$ virsh qemu-monitor-command VM '{&quot;execute&quot;:&quot;commandname&quot;, &quot;arguments&quot;:{&quot;arg1&quot;:123,&quot;arg2&quot;:&quot;test&quot;}}'</pre>
<p>If <em>--pretty</em> is given the QMP reply is pretty-printed.</p>
<p>If <em>--return-value</em> is given the 'return' key of the QMP response object is
extracted rather than passing through the full reply from QEMU.</p>
<p>If <em>--hmp</em> is passed, the command is considered to be a human monitor command
and libvirt will automatically convert it into QMP and convert the result back.</p>
<p>If <em>--pass-fds</em> is specified, the argument is a comma separated list
of open file descriptors which should be passed on to qemu along with the
command.</p>
<p>If <em>--force</em> is passed, the command will more likely be executed
even if the domain is occupied by another job.</p>
</div>
<div class="section" id="qemu-agent-command">
<h2><a class="toc-backref" href="#id300">qemu-agent-command</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">qemu-agent-command domain [--timeout seconds | --async | --block] command...</pre>
<p>Send an arbitrary guest agent command <em>command</em> to domain <em>domain</em> through
QEMU agent.
<em>--timeout</em>, <em>--async</em> and <em>--block</em> options are exclusive.
<em>--timeout</em> requires timeout seconds <em>seconds</em> and it must be positive.
When <em>--aysnc</em> is given, the command waits for timeout whether success or
failed. And when <em>--block</em> is given, the command waits forever with blocking
timeout.</p>
</div>
<div class="section" id="qemu-monitor-event">
<h2><a class="toc-backref" href="#id301">qemu-monitor-event</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">qemu-monitor-event [domain] [--event event-name]
  [--loop] [--timeout seconds] [--pretty] [--regex] [--no-case]
  [--timestamp]</pre>
<p>Wait for arbitrary QEMU monitor events to occur, and print out the
details of events as they happen.  The events can optionally be filtered
by <em>domain</em> or <em>event-name</em>.  The 'query-events' QMP command can be
used via <em>qemu-monitor-command</em> to learn what events are supported.
If <em>--regex</em> is used, <em>event-name</em> is a basic regular expression
instead of a literal string.  If <em>--no-case</em> is used, <em>event-name</em>
will match case-insensitively.</p>
<p>By default, this command is one-shot, and returns success once an event
occurs; you can send SIGINT (usually via <span class="docutils literal"><span class="pre">Ctrl-C</span></span>) to quit immediately.
If <em>--timeout</em> is specified, the command gives up waiting for events
after <em>seconds</em> have elapsed.  With <em>--loop</em>, the command prints all
events until a timeout or interrupt key.  If <em>--pretty</em> is specified,
any JSON event details are pretty-printed for better legibility.</p>
<p>When <em>--timestamp</em> is used, a human-readable timestamp will be printed
before the event, and the timing information provided by QEMU will be
omitted.</p>
</div>
<div class="section" id="lxc-enter-namespace">
<h2><a class="toc-backref" href="#id302">lxc-enter-namespace</a></h2>
<p><strong>Syntax:</strong></p>
<pre class="literal-block">lxc-enter-namespace domain [--noseclabel] --
   /path/to/binary [arg1, [arg2, ...]]</pre>
<p>Enter the namespace of <em>domain</em> and execute the command <span class="docutils literal">/path/to/binary</span>
passing the requested args. The binary path is relative to the container
root filesystem, not the host root filesystem. The binary will inherit the
environment variables / console visible to virsh. The command will be run
with the same sVirt context and cgroups placement as processes within the
container. This command only works when connected to the LXC hypervisor
driver.  This command succeeds only if <span class="docutils literal">/path/to/binary</span> has 0 exit status.</p>
<p>By default the new process will run with the security label of the new
parent container. Use the <em>--noseclabel</em> option to instead have the
process keep the same security label as <span class="docutils literal">virsh</span>.</p>
</div>
</div>
<div class="section" id="environment">
<h1><a class="toc-backref" href="#id303">ENVIRONMENT</a></h1>
<p>The following environment variables can be set to alter the behaviour
of <span class="docutils literal">virsh</span></p>
<ul>
<li><p>VIRSH_DEBUG=&lt;0 to 4&gt;</p>
<p>Turn on verbose debugging of virsh commands. Valid levels are</p>
<ul>
<li><p>VIRSH_DEBUG=0</p>
<p>DEBUG - Messages at ALL levels get logged</p>
</li>
<li><p>VIRSH_DEBUG=1</p>
<p>INFO - Logs messages at levels INFO, NOTICE, WARNING and ERROR</p>
</li>
<li><p>VIRSH_DEBUG=2</p>
<p>NOTICE - Logs messages at levels NOTICE, WARNING and ERROR</p>
</li>
<li><p>VIRSH_DEBUG=3</p>
<p>WARNING - Logs messages at levels WARNING and ERROR</p>
</li>
<li><p>VIRSH_DEBUG=4</p>
<p>ERROR - Messages at only ERROR level gets logged.</p>
</li>
</ul>
</li>
<li><p>VIRSH_LOG_FILE=``LOGFILE``</p>
<p>The file to log virsh debug messages.</p>
</li>
<li><p>VIRSH_DEFAULT_CONNECT_URI</p>
<p>The hypervisor to connect to by default. Set this to a URI, in the same
format as accepted by the <span class="docutils literal">connect</span> option. This environment variable
is deprecated in favour of the global <span class="docutils literal">LIBVIRT_DEFAULT_URI</span> variable
which serves the same purpose.</p>
</li>
<li><p>LIBVIRT_DEFAULT_URI</p>
<p>The hypervisor to connect to by default. Set this to a URI, in the
same format as accepted by the <span class="docutils literal">connect</span> option. This overrides
the default URI set in any client config file and prevents libvirt
from probing for drivers.</p>
</li>
<li><p>VISUAL</p>
<p>The editor to use by the <span class="docutils literal">edit</span> and related options.</p>
</li>
<li><p>EDITOR</p>
<p>The editor to use by the <span class="docutils literal">edit</span> and related options, if <span class="docutils literal">VISUAL</span>
is not set.</p>
</li>
<li><p>VIRSH_HISTSIZE</p>
<p>The number of commands to remember in the command  history.  The
default value is 500.</p>
</li>
<li><p>LIBVIRT_DEBUG=LEVEL</p>
<p>Turn on verbose debugging of all libvirt API calls. Valid levels are</p>
<ul>
<li><p>LIBVIRT_DEBUG=1</p>
<p>Messages at level DEBUG or above</p>
</li>
<li><p>LIBVIRT_DEBUG=2</p>
<p>Messages at level INFO or above</p>
</li>
<li><p>LIBVIRT_DEBUG=3</p>
<p>Messages at level WARNING or above</p>
</li>
<li><p>LIBVIRT_DEBUG=4</p>
<p>Messages at level ERROR</p>
</li>
</ul>
</li>
</ul>
<p>For further information about debugging options consult
<a class="reference external" href="https://libvirt.org/logging.html">https://libvirt.org/logging.html</a></p>
</div>
<div class="section" id="bugs">
<h1><a class="toc-backref" href="#id304">BUGS</a></h1>
<p>Please report all bugs you discover.  This should be done via either:</p>
<ol class="arabic">
<li><p>the mailing list</p>
<p><a class="reference external" href="https://libvirt.org/contact.html">https://libvirt.org/contact.html</a></p>
</li>
<li><p>the bug tracker</p>
<p><a class="reference external" href="https://libvirt.org/bugs.html">https://libvirt.org/bugs.html</a></p>
</li>
</ol>
<p>Alternatively, you may report bugs to your software distributor / vendor.</p>
</div>
<div class="section" id="authors">
<h1><a class="toc-backref" href="#id305">AUTHORS</a></h1>
<p>Please refer to the AUTHORS file distributed with libvirt.</p>
</div>
<div class="section" id="copyright">
<h1><a class="toc-backref" href="#id306">COPYRIGHT</a></h1>
<p>Copyright (C) 2005, 2007-2015 Red Hat, Inc., and the authors listed in the
libvirt AUTHORS file.</p>
</div>
<div class="section" id="license">
<h1><a class="toc-backref" href="#id307">LICENSE</a></h1>
<p><span class="docutils literal">virsh</span> is distributed under the terms of the GNU LGPL v2+.
This is free software; see the source for copying conditions. There
is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE</p>
</div>
<div class="section" id="see-also">
<h1><a class="toc-backref" href="#id308">SEE ALSO</a></h1>
<p>virt-install(1), virt-xml-validate(1), virt-top(1), virt-df(1),
<a class="reference external" href="https://libvirt.org/">https://libvirt.org/</a></p>
</div>
</div>
</body>
</html>
