.\" Man page generated from reStructuredText.
.
.TH LIBVIRTD 8 "" "" "Virtualization Support"
.SH NAME
libvirtd \- libvirt management daemon
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBlibvirtd\fP [\fIOPTION\fP]...
.SH DESCRIPTION
.sp
The \fBlibvirtd\fP program is the server side daemon component of the libvirt
virtualization management system.
.sp
This daemon runs on host servers and performs required management tasks for
virtualized guests.  This includes activities such as starting, stopping
and migrating guests between host servers, configuring and manipulating
networking, and managing storage for use by guests.
.sp
The libvirt client libraries and utilities connect to this daemon to issue
tasks and collect information about the configuration and resources of the host
system and guests.
.sp
By default, the \fBlibvirtd\fP daemon listens for requests on a local Unix domain
socket.  Using the \fB\-l\fP | \fB\-\-listen\fP command line option, the \fBlibvirtd\fP
daemon can be instructed to additionally listen on a TCP/IP socket.  The TCP/IP
socket to use is defined in the \fBlibvirtd\fP configuration file.
.sp
Restarting \fBlibvirtd\fP does not impact running guests.  Guests continue to
operate and will be picked up automatically if their XML configuration has been
defined.  Any guests whose XML configuration has not been defined will be lost
from the configuration.
.SH SYSTEM SOCKET ACTIVATION
.sp
The \fBlibvirtd\fP daemon is capable of starting in two modes.
.sp
In the traditional mode, it will create and listen on UNIX sockets itself.
If the \fB\-\-listen\fP parameter is given, it will also listen on TCP/IP socket(s),
according to the \fBlisten_tcp\fP and \fBlisten_tls\fP options in
\fB/etc/libvirt/libvirtd.conf\fP
.sp
In socket activation mode, it will rely on systemd to create and listen
on the UNIX, and optionally TCP/IP, sockets and pass them as pre\-opened
file descriptors. In this mode, it is not permitted to pass the \fB\-\-listen\fP
parameter, and most of the socket related config options in
\fB/etc/libvirt/libvirtd.conf\fP will no longer have any effect. To enable
TCP or TLS sockets use either
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ systemctl start libvirtd\-tls.socket
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Or
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ systemctl start libvirtd\-tcp.socket
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Socket activation mode is generally the default when running on a host
OS that uses systemd. To revert to the traditional mode, all the socket
unit files must be masked:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ systemctl mask libvirtd.socket libvirtd\-ro.socket \e
   libvirtd\-admin.socket libvirtd\-tls.socket libvirtd\-tcp.socket
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
If using libvirt\-guests service then the ordering for that service needs to be
adapted so that it is ordered after the service unit instead of the socket unit.
Since dependencies and ordering cannot be changed with drop\-in overrides, the
whole libvirt\-guests unit file needs to be changed.  In order to preserve such
change copy the installed \fB/usr/lib/systemd/system/libvirt\-guests.service\fP to
\fB/etc/systemd/system/libvirt\-guests.service\fP and make the change there,
specifically make sure the \fBAfter=\fP ordering mentions \fBlibvirtd.service\fP and
not \fBlibvirtd.socket\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[Unit]
After=libvirtd.service
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-h\fP, \fB\-\-help\fP
.sp
Display command line help usage then exit.
.sp
\fB\-d\fP, \fB\-\-daemon\fP
.sp
Run as a daemon & write PID file.
.sp
\fB\-f\fP, \fB\-\-config *FILE*\fP
.sp
Use this configuration file, overriding the default value.
.sp
\fB\-l\fP, \fB\-\-listen\fP
.sp
Listen for TCP/IP connections. This should not be set if using systemd
socket activation. Instead activate the \fBlibvirtd\-tls.socket\fP or
\fBlibvirtd\-tcp.socket\fP unit files.
.sp
\fB\-p\fP, \fB\-\-pid\-file *FILE*\fP
.sp
Use this name for the PID file, overriding the default value.
.sp
\fB\-t\fP, \fB\-\-timeout *SECONDS*\fP
.sp
Exit after timeout period (in seconds), provided there are neither any client
connections nor any running domains.
.sp
\fB\-v\fP, \fB\-\-verbose\fP
.sp
Enable output of verbose messages.
.sp
\fB\-\-version\fP
.sp
Display version information then exit.
.SH SIGNALS
.sp
On receipt of \fBSIGHUP\fP \fBlibvirtd\fP will reload its configuration.
.SH FILES
.SS When run as \fIroot\fP
.INDENT 0.0
.IP \(bu 2
\fB/etc/libvirt/libvirtd.conf\fP
.UNINDENT
.sp
The default configuration file used by \fBlibvirtd\fP, unless overridden on the
command line using the \fB\-f\fP | \fB\-\-config\fP option.
.sp
Depending on what driver is installed, then the following files are also read:
.INDENT 0.0
.IP \(bu 2
\fB/etc/libvirt/qemu.conf\fP for the QEMU driver
.IP \(bu 2
\fB/etc/libvirt/lxc.conf\fP for the LXC driver
.IP \(bu 2
\fB/etc/libvirt/libxl.conf\fP for the libxl driver
.UNINDENT
.sp
These files contain various knobs and default values for virtual machines
created within their respective drivers, and offer a way to override the built
in defaults, for instance (but not limited to): paths to various supplementary
binaries, TLS certificates location, graphical consoles configuration and
others. Location of neither of these files can be overridden by any command
line switch.
.INDENT 0.0
.IP \(bu 2
\fB/run/libvirt/libvirt\-sock\fP
.IP \(bu 2
\fB/run/libvirt/libvirt\-sock\-ro\fP
.UNINDENT
.sp
The sockets \fBlibvirtd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB/etc/pki/CA/cacert.pem\fP
.UNINDENT
.sp
The TLS \fBCertificate Authority\fP certificate \fBlibvirtd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB/etc/pki/libvirt/servercert.pem\fP
.UNINDENT
.sp
The TLS \fBServer\fP certificate \fBlibvirtd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB/etc/pki/libvirt/private/serverkey.pem\fP
.UNINDENT
.sp
The TLS \fBServer\fP private key \fBlibvirtd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB/run/libvirtd.pid\fP
.UNINDENT
.sp
The PID file to use, unless overridden by the \fB\-p\fP | \fB\-\-pid\-file\fP option.
.SS When run as \fInon\-root\fP
.INDENT 0.0
.IP \(bu 2
\fB$XDG_CONFIG_HOME/libvirt/libvirtd.conf\fP
.UNINDENT
.sp
The default configuration file used by \fBlibvirtd\fP, unless overridden on the
command line using the \fB\-f\(ga\(ga|\fP\-\-config\(ga\(ga option.
.sp
If QEMU driver is installed, then the following file is also read:
.INDENT 0.0
.IP \(bu 2
\fB$XDG_CONFIG_HOME/libvirt/qemu.conf\fP
.UNINDENT
.sp
If the file exists, it can contain various knobs and default values for virtual
machines created within QEMU driver, and offers a way to override the built in
defaults, for instance (but not limited to): paths to various supplementary
binaries, TLS certificates location, graphical consoles configuration and
others. Location of this file can\(aqt be overridden by any command line switch.
.INDENT 0.0
.IP \(bu 2
\fB$XDG_RUNTIME_DIR/libvirt/libvirt\-sock\fP
.UNINDENT
.sp
The socket \fBlibvirtd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB$HOME/.pki/libvirt/cacert.pem\fP
.UNINDENT
.sp
The TLS \fBCertificate Authority\fP certificate \fBlibvirtd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB$HOME/.pki/libvirt/servercert.pem\fP
.UNINDENT
.sp
The TLS \fBServer\fP certificate \fBlibvirtd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB$HOME/.pki/libvirt/serverkey.pem\fP
.UNINDENT
.sp
The TLS \fBServer\fP private key \fBlibvirtd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB$XDG_RUNTIME_DIR/libvirt/libvirtd.pid\fP
.UNINDENT
.sp
The PID file to use, unless overridden by the \fB\-p\(ga\(ga|\fP\-\-pid\-file\(ga\(ga option.
.sp
If \fB$XDG_CONFIG_HOME\fP is not set in your environment, \fBlibvirtd\fP will use
\fB$HOME/.config\fP
.sp
If \fB$XDG_RUNTIME_DIR\fP is not set in your environment, \fBlibvirtd\fP will use
\fB$HOME/.cache\fP
.SH EXAMPLES
.sp
To retrieve the version of \fBlibvirtd\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# libvirtd \-\-version
libvirtd (libvirt) 8.5.0
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To start \fBlibvirtd\fP, instructing it to daemonize and create a PID file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# libvirtd \-d
# ls \-la /run/libvirtd.pid
\-rw\-r\-\-r\-\- 1 root root 6 Jul  9 02:40 /run/libvirtd.pid
.ft P
.fi
.UNINDENT
.UNINDENT
.SH BUGS
.sp
Please report all bugs you discover.  This should be done via either:
.INDENT 0.0
.IP 1. 3
the mailing list
.sp
\fI\%https://libvirt.org/contact.html\fP
.IP 2. 3
the bug tracker
.sp
\fI\%https://libvirt.org/bugs.html\fP
.UNINDENT
.sp
Alternatively, you may report bugs to your software distributor / vendor.
.SH AUTHORS
.sp
Please refer to the AUTHORS file distributed with libvirt.
.SH COPYRIGHT
.sp
Copyright (C) 2006\-2012 Red Hat, Inc., and the authors listed in the
libvirt AUTHORS file.
.SH LICENSE
.sp
\fBlibvirtd\fP is distributed under the terms of the GNU LGPL v2.1+.
This is free software; see the source for copying conditions. There
is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE
.SH SEE ALSO
.sp
virsh(1), virt\-install(1), virt\-xml\-validate(1), virt\-top(1),
virt\-df(1), \fI\%https://www.libvirt.org/\fP
.\" Generated by docutils manpage writer.
.
