.\" Man page generated from reStructuredText.
.
.TH VIRTPROXYD 8 "" "" "Virtualization Support"
.SH NAME
virtproxyd \- libvirt proxy daemon
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBvirtproxyd\fP [\fIOPTION\fP]...
.SH DESCRIPTION
.sp
The \fBvirtproxyd\fP program is a server side daemon component of the libvirt
virtualization management system.
.sp
It is one of a collection of modular daemons that replace functionality
previously provided by the monolithic \fBlibvirtd\fP daemon.
.sp
This daemon runs on virtualization hosts and
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Listens on a UNIX socket to provide backwards compatibility for clients
that previously connected to the \fBlibvirtd\fP socket.
.IP \(bu 2
Optionally listens on TCP ports for connections from off\-node clients
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Upon receiving RPC messages from a client \fBvirtproxyd\fP will transparently
forward them on to the appropriate modular daemon, and similarly relay back
any asynchronous events.
.sp
By default, the \fBvirtproxyd\fP daemon listens for requests on a local Unix
domain socket with the same path previously used by \fBlibvirtd\fP\&.  The
configuration file can be used to instruct it to also listen on TCP socket(s).
Systemd socket activation is also supported to allow it to receive pre\-opened
listener sockets on startup.
.sp
Since \fBvirtproxyd\fP merely forwards RPC messages, it has no important state,
and can be restarted at any time. Clients should expect to reconnect after
the restart.
.SH SYSTEM SOCKET ACTIVATION
.sp
The \fBvirtproxyd\fP daemon is capable of starting in two modes.
.sp
In the traditional mode, it will create and listen on UNIX sockets itself.
It will also listen on TCP/IP socket(s), according to the \fBlisten_tcp\fP
and \fBlisten_tls\fP options in \fB/etc/libvirt/virtproxyd.conf\fP
.sp
In socket activation mode, it will rely on systemd to create and listen
on the UNIX, and optionally TCP/IP, sockets and pass them as pre\-opened
file descriptors. In this mode most of the socket related config options in
\fB/etc/libvirt/virtproxyd.conf\fP will no longer have any effect. To enable
TCP or TLS sockets use either
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ systemctl start virtproxyd\-tls.socket
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Or
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ systemctl start virtproxyd\-tcp.socket
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Socket activation mode is generally the default when running on a host
OS that uses systemd. To revert to the traditional mode, all the socket
unit files must be masked:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ systemctl mask virtproxyd.socket virtproxyd\-ro.socket \e
   virtproxyd\-admin.socket virtproxyd\-tls.socket virtproxyd\-tcp.socket
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-h\fP, \fB\-\-help\fP
.sp
Display command line help usage then exit.
.sp
\fB\-d\fP, \fB\-\-daemon\fP
.sp
Run as a daemon & write PID file.
.sp
\fB\-f\fP, \fB\-\-config *FILE*\fP
.sp
Use this configuration file, overriding the default value.
.sp
\fB\-p\fP, \fB\-\-pid\-file *FILE*\fP
.sp
Use this name for the PID file, overriding the default value.
.sp
\fB\-t\fP, \fB\-\-timeout *SECONDS*\fP
.sp
Exit after timeout period (in seconds), provided there are neither any client
connections nor any running domains.
.sp
\fB\-v\fP, \fB\-\-verbose\fP
.sp
Enable output of verbose messages.
.sp
\fB\-\-version\fP
.sp
Display version information then exit.
.SH SIGNALS
.sp
On receipt of \fBSIGHUP\fP \fBvirtproxyd\fP will reload its configuration.
.SH FILES
.SS When run as \fIroot\fP
.INDENT 0.0
.IP \(bu 2
\fB/etc/libvirt/virtproxyd.conf\fP
.UNINDENT
.sp
The default configuration file used by \fBvirtproxyd\fP, unless overridden on the
command line using the \fB\-f\fP | \fB\-\-config\fP option.
.INDENT 0.0
.IP \(bu 2
\fB/run/libvirt/libvirt\-sock\fP
.IP \(bu 2
\fB/run/libvirt/libvirt\-sock\-ro\fP
.UNINDENT
.sp
The sockets \fBvirtproxyd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB/etc/pki/CA/cacert.pem\fP
.UNINDENT
.sp
The TLS \fBCertificate Authority\fP certificate \fBvirtproxyd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB/etc/pki/libvirt/servercert.pem\fP
.UNINDENT
.sp
The TLS \fBServer\fP certificate \fBvirtproxyd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB/etc/pki/libvirt/private/serverkey.pem\fP
.UNINDENT
.sp
The TLS \fBServer\fP private key \fBvirtproxyd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB/run/virtproxyd.pid\fP
.UNINDENT
.sp
The PID file to use, unless overridden by the \fB\-p\fP | \fB\-\-pid\-file\fP option.
.SS When run as \fInon\-root\fP
.INDENT 0.0
.IP \(bu 2
\fB$XDG_CONFIG_HOME/libvirt/virtproxyd.conf\fP
.UNINDENT
.sp
The default configuration file used by \fBvirtproxyd\fP, unless overridden on the
command line using the \fB\-f\(ga\(ga|\fP\-\-config\(ga\(ga option.
.INDENT 0.0
.IP \(bu 2
\fB$XDG_RUNTIME_DIR/libvirt/libvirt\-sock\fP
.UNINDENT
.sp
The socket \fBvirtproxyd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB$HOME/.pki/libvirt/cacert.pem\fP
.UNINDENT
.sp
The TLS \fBCertificate Authority\fP certificate \fBvirtproxyd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB$HOME/.pki/libvirt/servercert.pem\fP
.UNINDENT
.sp
The TLS \fBServer\fP certificate \fBvirtproxyd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB$HOME/.pki/libvirt/serverkey.pem\fP
.UNINDENT
.sp
The TLS \fBServer\fP private key \fBvirtproxyd\fP will use.
.INDENT 0.0
.IP \(bu 2
\fB$XDG_RUNTIME_DIR/libvirt/virtproxyd.pid\fP
.UNINDENT
.sp
The PID file to use, unless overridden by the \fB\-p\(ga\(ga|\fP\-\-pid\-file\(ga\(ga option.
.sp
If \fB$XDG_CONFIG_HOME\fP is not set in your environment, \fBvirtproxyd\fP will use
\fB$HOME/.config\fP
.sp
If \fB$XDG_RUNTIME_DIR\fP is not set in your environment, \fBvirtproxyd\fP will use
\fB$HOME/.cache\fP
.SH EXAMPLES
.sp
To retrieve the version of \fBvirtproxyd\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# virtproxyd \-\-version
virtproxyd (libvirt) 8.5.0
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To start \fBvirtproxyd\fP, instructing it to daemonize and create a PID file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# virtproxyd \-d
# ls \-la /run/virtproxyd.pid
\-rw\-r\-\-r\-\- 1 root root 6 Jul  9 02:40 /run/virtproxyd.pid
.ft P
.fi
.UNINDENT
.UNINDENT
.SH BUGS
.sp
Please report all bugs you discover.  This should be done via either:
.INDENT 0.0
.IP 1. 3
the mailing list
.sp
\fI\%https://libvirt.org/contact.html\fP
.IP 2. 3
the bug tracker
.sp
\fI\%https://libvirt.org/bugs.html\fP
.UNINDENT
.sp
Alternatively, you may report bugs to your software distributor / vendor.
.SH AUTHORS
.sp
Please refer to the AUTHORS file distributed with libvirt.
.SH COPYRIGHT
.sp
Copyright (C) 2006\-2020 Red Hat, Inc., and the authors listed in the
libvirt AUTHORS file.
.SH LICENSE
.sp
\fBvirtproxyd\fP is distributed under the terms of the GNU LGPL v2.1+.
This is free software; see the source for copying conditions. There
is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE
.SH SEE ALSO
.sp
virsh(1), libvirtd(8),
\fI\%https://www.libvirt.org/daemons.html\fP,
.\" Generated by docutils manpage writer.
.
